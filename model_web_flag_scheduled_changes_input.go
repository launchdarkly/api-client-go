/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// WebFlagScheduledChangesInput struct for WebFlagScheduledChangesInput
type WebFlagScheduledChangesInput struct {
	Comment *string `json:"Comment,omitempty"`
	Instructions *[]interface{} `json:"Instructions,omitempty"`
	ScheduledChangesWorkflowId *string `json:"ScheduledChangesWorkflowId,omitempty"`
	IgnoreConflicts *bool `json:"IgnoreConflicts,omitempty"`
}

// NewWebFlagScheduledChangesInput instantiates a new WebFlagScheduledChangesInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebFlagScheduledChangesInput() *WebFlagScheduledChangesInput {
	this := WebFlagScheduledChangesInput{}
	return &this
}

// NewWebFlagScheduledChangesInputWithDefaults instantiates a new WebFlagScheduledChangesInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebFlagScheduledChangesInputWithDefaults() *WebFlagScheduledChangesInput {
	this := WebFlagScheduledChangesInput{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *WebFlagScheduledChangesInput) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagScheduledChangesInput) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *WebFlagScheduledChangesInput) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *WebFlagScheduledChangesInput) SetComment(v string) {
	o.Comment = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *WebFlagScheduledChangesInput) GetInstructions() []interface{} {
	if o == nil || o.Instructions == nil {
		var ret []interface{}
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagScheduledChangesInput) GetInstructionsOk() (*[]interface{}, bool) {
	if o == nil || o.Instructions == nil {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *WebFlagScheduledChangesInput) HasInstructions() bool {
	if o != nil && o.Instructions != nil {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given []interface{} and assigns it to the Instructions field.
func (o *WebFlagScheduledChangesInput) SetInstructions(v []interface{}) {
	o.Instructions = &v
}

// GetScheduledChangesWorkflowId returns the ScheduledChangesWorkflowId field value if set, zero value otherwise.
func (o *WebFlagScheduledChangesInput) GetScheduledChangesWorkflowId() string {
	if o == nil || o.ScheduledChangesWorkflowId == nil {
		var ret string
		return ret
	}
	return *o.ScheduledChangesWorkflowId
}

// GetScheduledChangesWorkflowIdOk returns a tuple with the ScheduledChangesWorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagScheduledChangesInput) GetScheduledChangesWorkflowIdOk() (*string, bool) {
	if o == nil || o.ScheduledChangesWorkflowId == nil {
		return nil, false
	}
	return o.ScheduledChangesWorkflowId, true
}

// HasScheduledChangesWorkflowId returns a boolean if a field has been set.
func (o *WebFlagScheduledChangesInput) HasScheduledChangesWorkflowId() bool {
	if o != nil && o.ScheduledChangesWorkflowId != nil {
		return true
	}

	return false
}

// SetScheduledChangesWorkflowId gets a reference to the given string and assigns it to the ScheduledChangesWorkflowId field.
func (o *WebFlagScheduledChangesInput) SetScheduledChangesWorkflowId(v string) {
	o.ScheduledChangesWorkflowId = &v
}

// GetIgnoreConflicts returns the IgnoreConflicts field value if set, zero value otherwise.
func (o *WebFlagScheduledChangesInput) GetIgnoreConflicts() bool {
	if o == nil || o.IgnoreConflicts == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreConflicts
}

// GetIgnoreConflictsOk returns a tuple with the IgnoreConflicts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagScheduledChangesInput) GetIgnoreConflictsOk() (*bool, bool) {
	if o == nil || o.IgnoreConflicts == nil {
		return nil, false
	}
	return o.IgnoreConflicts, true
}

// HasIgnoreConflicts returns a boolean if a field has been set.
func (o *WebFlagScheduledChangesInput) HasIgnoreConflicts() bool {
	if o != nil && o.IgnoreConflicts != nil {
		return true
	}

	return false
}

// SetIgnoreConflicts gets a reference to the given bool and assigns it to the IgnoreConflicts field.
func (o *WebFlagScheduledChangesInput) SetIgnoreConflicts(v bool) {
	o.IgnoreConflicts = &v
}

func (o WebFlagScheduledChangesInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comment != nil {
		toSerialize["Comment"] = o.Comment
	}
	if o.Instructions != nil {
		toSerialize["Instructions"] = o.Instructions
	}
	if o.ScheduledChangesWorkflowId != nil {
		toSerialize["ScheduledChangesWorkflowId"] = o.ScheduledChangesWorkflowId
	}
	if o.IgnoreConflicts != nil {
		toSerialize["IgnoreConflicts"] = o.IgnoreConflicts
	}
	return json.Marshal(toSerialize)
}

type NullableWebFlagScheduledChangesInput struct {
	value *WebFlagScheduledChangesInput
	isSet bool
}

func (v NullableWebFlagScheduledChangesInput) Get() *WebFlagScheduledChangesInput {
	return v.value
}

func (v *NullableWebFlagScheduledChangesInput) Set(val *WebFlagScheduledChangesInput) {
	v.value = val
	v.isSet = true
}

func (v NullableWebFlagScheduledChangesInput) IsSet() bool {
	return v.isSet
}

func (v *NullableWebFlagScheduledChangesInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebFlagScheduledChangesInput(val *WebFlagScheduledChangesInput) *NullableWebFlagScheduledChangesInput {
	return &NullableWebFlagScheduledChangesInput{value: val, isSet: true}
}

func (v NullableWebFlagScheduledChangesInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebFlagScheduledChangesInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


