/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// FlagDefaultsRep struct for FlagDefaultsRep
type FlagDefaultsRep struct {
	OnVariation *int32 `json:"onVariation,omitempty"`
	OffVariation *int32 `json:"offVariation,omitempty"`
}

// NewFlagDefaultsRep instantiates a new FlagDefaultsRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlagDefaultsRep() *FlagDefaultsRep {
	this := FlagDefaultsRep{}
	return &this
}

// NewFlagDefaultsRepWithDefaults instantiates a new FlagDefaultsRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlagDefaultsRepWithDefaults() *FlagDefaultsRep {
	this := FlagDefaultsRep{}
	return &this
}

// GetOnVariation returns the OnVariation field value if set, zero value otherwise.
func (o *FlagDefaultsRep) GetOnVariation() int32 {
	if o == nil || o.OnVariation == nil {
		var ret int32
		return ret
	}
	return *o.OnVariation
}

// GetOnVariationOk returns a tuple with the OnVariation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagDefaultsRep) GetOnVariationOk() (*int32, bool) {
	if o == nil || o.OnVariation == nil {
		return nil, false
	}
	return o.OnVariation, true
}

// HasOnVariation returns a boolean if a field has been set.
func (o *FlagDefaultsRep) HasOnVariation() bool {
	if o != nil && o.OnVariation != nil {
		return true
	}

	return false
}

// SetOnVariation gets a reference to the given int32 and assigns it to the OnVariation field.
func (o *FlagDefaultsRep) SetOnVariation(v int32) {
	o.OnVariation = &v
}

// GetOffVariation returns the OffVariation field value if set, zero value otherwise.
func (o *FlagDefaultsRep) GetOffVariation() int32 {
	if o == nil || o.OffVariation == nil {
		var ret int32
		return ret
	}
	return *o.OffVariation
}

// GetOffVariationOk returns a tuple with the OffVariation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagDefaultsRep) GetOffVariationOk() (*int32, bool) {
	if o == nil || o.OffVariation == nil {
		return nil, false
	}
	return o.OffVariation, true
}

// HasOffVariation returns a boolean if a field has been set.
func (o *FlagDefaultsRep) HasOffVariation() bool {
	if o != nil && o.OffVariation != nil {
		return true
	}

	return false
}

// SetOffVariation gets a reference to the given int32 and assigns it to the OffVariation field.
func (o *FlagDefaultsRep) SetOffVariation(v int32) {
	o.OffVariation = &v
}

func (o FlagDefaultsRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OnVariation != nil {
		toSerialize["onVariation"] = o.OnVariation
	}
	if o.OffVariation != nil {
		toSerialize["offVariation"] = o.OffVariation
	}
	return json.Marshal(toSerialize)
}

type NullableFlagDefaultsRep struct {
	value *FlagDefaultsRep
	isSet bool
}

func (v NullableFlagDefaultsRep) Get() *FlagDefaultsRep {
	return v.value
}

func (v *NullableFlagDefaultsRep) Set(val *FlagDefaultsRep) {
	v.value = val
	v.isSet = true
}

func (v NullableFlagDefaultsRep) IsSet() bool {
	return v.isSet
}

func (v *NullableFlagDefaultsRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlagDefaultsRep(val *FlagDefaultsRep) *NullableFlagDefaultsRep {
	return &NullableFlagDefaultsRep{value: val, isSet: true}
}

func (v NullableFlagDefaultsRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlagDefaultsRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


