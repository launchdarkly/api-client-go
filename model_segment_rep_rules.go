/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// SegmentRepRules struct for SegmentRepRules
type SegmentRepRules struct {
	Id *string `json:"_id,omitempty"`
	Clauses *[]FlagConfigurationRepClauses `json:"clauses,omitempty"`
	Weight *int32 `json:"weight,omitempty"`
	BucketBy *string `json:"bucketBy,omitempty"`
}

// NewSegmentRepRules instantiates a new SegmentRepRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentRepRules() *SegmentRepRules {
	this := SegmentRepRules{}
	return &this
}

// NewSegmentRepRulesWithDefaults instantiates a new SegmentRepRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentRepRulesWithDefaults() *SegmentRepRules {
	this := SegmentRepRules{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SegmentRepRules) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRepRules) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SegmentRepRules) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SegmentRepRules) SetId(v string) {
	o.Id = &v
}

// GetClauses returns the Clauses field value if set, zero value otherwise.
func (o *SegmentRepRules) GetClauses() []FlagConfigurationRepClauses {
	if o == nil || o.Clauses == nil {
		var ret []FlagConfigurationRepClauses
		return ret
	}
	return *o.Clauses
}

// GetClausesOk returns a tuple with the Clauses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRepRules) GetClausesOk() (*[]FlagConfigurationRepClauses, bool) {
	if o == nil || o.Clauses == nil {
		return nil, false
	}
	return o.Clauses, true
}

// HasClauses returns a boolean if a field has been set.
func (o *SegmentRepRules) HasClauses() bool {
	if o != nil && o.Clauses != nil {
		return true
	}

	return false
}

// SetClauses gets a reference to the given []FlagConfigurationRepClauses and assigns it to the Clauses field.
func (o *SegmentRepRules) SetClauses(v []FlagConfigurationRepClauses) {
	o.Clauses = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *SegmentRepRules) GetWeight() int32 {
	if o == nil || o.Weight == nil {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRepRules) GetWeightOk() (*int32, bool) {
	if o == nil || o.Weight == nil {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *SegmentRepRules) HasWeight() bool {
	if o != nil && o.Weight != nil {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *SegmentRepRules) SetWeight(v int32) {
	o.Weight = &v
}

// GetBucketBy returns the BucketBy field value if set, zero value otherwise.
func (o *SegmentRepRules) GetBucketBy() string {
	if o == nil || o.BucketBy == nil {
		var ret string
		return ret
	}
	return *o.BucketBy
}

// GetBucketByOk returns a tuple with the BucketBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRepRules) GetBucketByOk() (*string, bool) {
	if o == nil || o.BucketBy == nil {
		return nil, false
	}
	return o.BucketBy, true
}

// HasBucketBy returns a boolean if a field has been set.
func (o *SegmentRepRules) HasBucketBy() bool {
	if o != nil && o.BucketBy != nil {
		return true
	}

	return false
}

// SetBucketBy gets a reference to the given string and assigns it to the BucketBy field.
func (o *SegmentRepRules) SetBucketBy(v string) {
	o.BucketBy = &v
}

func (o SegmentRepRules) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Clauses != nil {
		toSerialize["clauses"] = o.Clauses
	}
	if o.Weight != nil {
		toSerialize["weight"] = o.Weight
	}
	if o.BucketBy != nil {
		toSerialize["bucketBy"] = o.BucketBy
	}
	return json.Marshal(toSerialize)
}

type NullableSegmentRepRules struct {
	value *SegmentRepRules
	isSet bool
}

func (v NullableSegmentRepRules) Get() *SegmentRepRules {
	return v.value
}

func (v *NullableSegmentRepRules) Set(val *SegmentRepRules) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentRepRules) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentRepRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentRepRules(val *SegmentRepRules) *NullableSegmentRepRules {
	return &NullableSegmentRepRules{value: val, isSet: true}
}

func (v NullableSegmentRepRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentRepRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


