/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// SegmentsSegmentPost struct for SegmentsSegmentPost
type SegmentsSegmentPost struct {
	Name *string `json:"name,omitempty"`
	Key *string `json:"key,omitempty"`
	Description *string `json:"description,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	Unbounded *bool `json:"unbounded,omitempty"`
}

// NewSegmentsSegmentPost instantiates a new SegmentsSegmentPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentsSegmentPost() *SegmentsSegmentPost {
	this := SegmentsSegmentPost{}
	return &this
}

// NewSegmentsSegmentPostWithDefaults instantiates a new SegmentsSegmentPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentsSegmentPostWithDefaults() *SegmentsSegmentPost {
	this := SegmentsSegmentPost{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SegmentsSegmentPost) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsSegmentPost) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SegmentsSegmentPost) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SegmentsSegmentPost) SetName(v string) {
	o.Name = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SegmentsSegmentPost) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsSegmentPost) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SegmentsSegmentPost) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SegmentsSegmentPost) SetKey(v string) {
	o.Key = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SegmentsSegmentPost) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsSegmentPost) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SegmentsSegmentPost) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SegmentsSegmentPost) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SegmentsSegmentPost) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsSegmentPost) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SegmentsSegmentPost) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SegmentsSegmentPost) SetTags(v []string) {
	o.Tags = &v
}

// GetUnbounded returns the Unbounded field value if set, zero value otherwise.
func (o *SegmentsSegmentPost) GetUnbounded() bool {
	if o == nil || o.Unbounded == nil {
		var ret bool
		return ret
	}
	return *o.Unbounded
}

// GetUnboundedOk returns a tuple with the Unbounded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsSegmentPost) GetUnboundedOk() (*bool, bool) {
	if o == nil || o.Unbounded == nil {
		return nil, false
	}
	return o.Unbounded, true
}

// HasUnbounded returns a boolean if a field has been set.
func (o *SegmentsSegmentPost) HasUnbounded() bool {
	if o != nil && o.Unbounded != nil {
		return true
	}

	return false
}

// SetUnbounded gets a reference to the given bool and assigns it to the Unbounded field.
func (o *SegmentsSegmentPost) SetUnbounded(v bool) {
	o.Unbounded = &v
}

func (o SegmentsSegmentPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Unbounded != nil {
		toSerialize["unbounded"] = o.Unbounded
	}
	return json.Marshal(toSerialize)
}

type NullableSegmentsSegmentPost struct {
	value *SegmentsSegmentPost
	isSet bool
}

func (v NullableSegmentsSegmentPost) Get() *SegmentsSegmentPost {
	return v.value
}

func (v *NullableSegmentsSegmentPost) Set(val *SegmentsSegmentPost) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentsSegmentPost) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentsSegmentPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentsSegmentPost(val *SegmentsSegmentPost) *NullableSegmentsSegmentPost {
	return &NullableSegmentsSegmentPost{value: val, isSet: true}
}

func (v NullableSegmentsSegmentPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentsSegmentPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


