/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// MetricsMetricPost struct for MetricsMetricPost
type MetricsMetricPost struct {
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	// One of: custom, click, pageview
	Kind *string `json:"kind,omitempty"`
	// Required for click metrics
	Selector *string `json:"selector,omitempty"`
	// Required for click and pageview metrics
	Urls *[]MetricsMetricPostUrls `json:"urls,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
	IsNumeric *bool `json:"isNumeric,omitempty"`
	Unit *string `json:"unit,omitempty"`
	// Required for custom metrics
	EventKey *string `json:"eventKey,omitempty"`
	SuccessCriteria *int32 `json:"successCriteria,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
}

// NewMetricsMetricPost instantiates a new MetricsMetricPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsMetricPost() *MetricsMetricPost {
	this := MetricsMetricPost{}
	return &this
}

// NewMetricsMetricPostWithDefaults instantiates a new MetricsMetricPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsMetricPostWithDefaults() *MetricsMetricPost {
	this := MetricsMetricPost{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *MetricsMetricPost) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MetricsMetricPost) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MetricsMetricPost) SetDescription(v string) {
	o.Description = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *MetricsMetricPost) SetKind(v string) {
	o.Kind = &v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetSelector() string {
	if o == nil || o.Selector == nil {
		var ret string
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetSelectorOk() (*string, bool) {
	if o == nil || o.Selector == nil {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasSelector() bool {
	if o != nil && o.Selector != nil {
		return true
	}

	return false
}

// SetSelector gets a reference to the given string and assigns it to the Selector field.
func (o *MetricsMetricPost) SetSelector(v string) {
	o.Selector = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetUrls() []MetricsMetricPostUrls {
	if o == nil || o.Urls == nil {
		var ret []MetricsMetricPostUrls
		return ret
	}
	return *o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetUrlsOk() (*[]MetricsMetricPostUrls, bool) {
	if o == nil || o.Urls == nil {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasUrls() bool {
	if o != nil && o.Urls != nil {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []MetricsMetricPostUrls and assigns it to the Urls field.
func (o *MetricsMetricPost) SetUrls(v []MetricsMetricPostUrls) {
	o.Urls = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetIsActive() bool {
	if o == nil || o.IsActive == nil {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetIsActiveOk() (*bool, bool) {
	if o == nil || o.IsActive == nil {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasIsActive() bool {
	if o != nil && o.IsActive != nil {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *MetricsMetricPost) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetIsNumeric returns the IsNumeric field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetIsNumeric() bool {
	if o == nil || o.IsNumeric == nil {
		var ret bool
		return ret
	}
	return *o.IsNumeric
}

// GetIsNumericOk returns a tuple with the IsNumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetIsNumericOk() (*bool, bool) {
	if o == nil || o.IsNumeric == nil {
		return nil, false
	}
	return o.IsNumeric, true
}

// HasIsNumeric returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasIsNumeric() bool {
	if o != nil && o.IsNumeric != nil {
		return true
	}

	return false
}

// SetIsNumeric gets a reference to the given bool and assigns it to the IsNumeric field.
func (o *MetricsMetricPost) SetIsNumeric(v bool) {
	o.IsNumeric = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *MetricsMetricPost) SetUnit(v string) {
	o.Unit = &v
}

// GetEventKey returns the EventKey field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetEventKey() string {
	if o == nil || o.EventKey == nil {
		var ret string
		return ret
	}
	return *o.EventKey
}

// GetEventKeyOk returns a tuple with the EventKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetEventKeyOk() (*string, bool) {
	if o == nil || o.EventKey == nil {
		return nil, false
	}
	return o.EventKey, true
}

// HasEventKey returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasEventKey() bool {
	if o != nil && o.EventKey != nil {
		return true
	}

	return false
}

// SetEventKey gets a reference to the given string and assigns it to the EventKey field.
func (o *MetricsMetricPost) SetEventKey(v string) {
	o.EventKey = &v
}

// GetSuccessCriteria returns the SuccessCriteria field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetSuccessCriteria() int32 {
	if o == nil || o.SuccessCriteria == nil {
		var ret int32
		return ret
	}
	return *o.SuccessCriteria
}

// GetSuccessCriteriaOk returns a tuple with the SuccessCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetSuccessCriteriaOk() (*int32, bool) {
	if o == nil || o.SuccessCriteria == nil {
		return nil, false
	}
	return o.SuccessCriteria, true
}

// HasSuccessCriteria returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasSuccessCriteria() bool {
	if o != nil && o.SuccessCriteria != nil {
		return true
	}

	return false
}

// SetSuccessCriteria gets a reference to the given int32 and assigns it to the SuccessCriteria field.
func (o *MetricsMetricPost) SetSuccessCriteria(v int32) {
	o.SuccessCriteria = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MetricsMetricPost) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsMetricPost) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MetricsMetricPost) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *MetricsMetricPost) SetTags(v []string) {
	o.Tags = &v
}

func (o MetricsMetricPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Selector != nil {
		toSerialize["selector"] = o.Selector
	}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	if o.IsActive != nil {
		toSerialize["isActive"] = o.IsActive
	}
	if o.IsNumeric != nil {
		toSerialize["isNumeric"] = o.IsNumeric
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if o.EventKey != nil {
		toSerialize["eventKey"] = o.EventKey
	}
	if o.SuccessCriteria != nil {
		toSerialize["successCriteria"] = o.SuccessCriteria
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableMetricsMetricPost struct {
	value *MetricsMetricPost
	isSet bool
}

func (v NullableMetricsMetricPost) Get() *MetricsMetricPost {
	return v.value
}

func (v *NullableMetricsMetricPost) Set(val *MetricsMetricPost) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsMetricPost) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsMetricPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsMetricPost(val *MetricsMetricPost) *NullableMetricsMetricPost {
	return &NullableMetricsMetricPost{value: val, isSet: true}
}

func (v NullableMetricsMetricPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsMetricPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


