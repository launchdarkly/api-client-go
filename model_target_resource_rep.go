/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// TargetResourceRep struct for TargetResourceRep
type TargetResourceRep struct {
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	Name *string `json:"name,omitempty"`
	Resources *[]interface{} `json:"resources,omitempty"`
}

// NewTargetResourceRep instantiates a new TargetResourceRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetResourceRep() *TargetResourceRep {
	this := TargetResourceRep{}
	return &this
}

// NewTargetResourceRepWithDefaults instantiates a new TargetResourceRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetResourceRepWithDefaults() *TargetResourceRep {
	this := TargetResourceRep{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *TargetResourceRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetResourceRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *TargetResourceRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *TargetResourceRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TargetResourceRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetResourceRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TargetResourceRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TargetResourceRep) SetName(v string) {
	o.Name = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *TargetResourceRep) GetResources() []interface{} {
	if o == nil || o.Resources == nil {
		var ret []interface{}
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetResourceRep) GetResourcesOk() (*[]interface{}, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *TargetResourceRep) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []interface{} and assigns it to the Resources field.
func (o *TargetResourceRep) SetResources(v []interface{}) {
	o.Resources = &v
}

func (o TargetResourceRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableTargetResourceRep struct {
	value *TargetResourceRep
	isSet bool
}

func (v NullableTargetResourceRep) Get() *TargetResourceRep {
	return v.value
}

func (v *NullableTargetResourceRep) Set(val *TargetResourceRep) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetResourceRep) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetResourceRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetResourceRep(val *TargetResourceRep) *NullableTargetResourceRep {
	return &NullableTargetResourceRep{value: val, isSet: true}
}

func (v NullableTargetResourceRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetResourceRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


