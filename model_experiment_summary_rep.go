/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ExperimentSummaryRep struct for ExperimentSummaryRep
type ExperimentSummaryRep struct {
	Id *string `json:"_id,omitempty"`
	ProjKey *string `json:"_projKey,omitempty"`
	EnvKey *string `json:"_envKey,omitempty"`
	BaselineIdx *int32 `json:"_baselineIdx,omitempty"`
	Status *string `json:"_status,omitempty"`
	StartDate *int64 `json:"_startDate,omitempty"`
	StopDate *int64 `json:"_stopDate,omitempty"`
	Flag *ExperimentFlagRep `json:"_flag,omitempty"`
	Metric *MetricListingRep `json:"_metric,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
}

// NewExperimentSummaryRep instantiates a new ExperimentSummaryRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimentSummaryRep() *ExperimentSummaryRep {
	this := ExperimentSummaryRep{}
	return &this
}

// NewExperimentSummaryRepWithDefaults instantiates a new ExperimentSummaryRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentSummaryRepWithDefaults() *ExperimentSummaryRep {
	this := ExperimentSummaryRep{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExperimentSummaryRep) SetId(v string) {
	o.Id = &v
}

// GetProjKey returns the ProjKey field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetProjKey() string {
	if o == nil || o.ProjKey == nil {
		var ret string
		return ret
	}
	return *o.ProjKey
}

// GetProjKeyOk returns a tuple with the ProjKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetProjKeyOk() (*string, bool) {
	if o == nil || o.ProjKey == nil {
		return nil, false
	}
	return o.ProjKey, true
}

// HasProjKey returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasProjKey() bool {
	if o != nil && o.ProjKey != nil {
		return true
	}

	return false
}

// SetProjKey gets a reference to the given string and assigns it to the ProjKey field.
func (o *ExperimentSummaryRep) SetProjKey(v string) {
	o.ProjKey = &v
}

// GetEnvKey returns the EnvKey field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetEnvKey() string {
	if o == nil || o.EnvKey == nil {
		var ret string
		return ret
	}
	return *o.EnvKey
}

// GetEnvKeyOk returns a tuple with the EnvKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetEnvKeyOk() (*string, bool) {
	if o == nil || o.EnvKey == nil {
		return nil, false
	}
	return o.EnvKey, true
}

// HasEnvKey returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasEnvKey() bool {
	if o != nil && o.EnvKey != nil {
		return true
	}

	return false
}

// SetEnvKey gets a reference to the given string and assigns it to the EnvKey field.
func (o *ExperimentSummaryRep) SetEnvKey(v string) {
	o.EnvKey = &v
}

// GetBaselineIdx returns the BaselineIdx field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetBaselineIdx() int32 {
	if o == nil || o.BaselineIdx == nil {
		var ret int32
		return ret
	}
	return *o.BaselineIdx
}

// GetBaselineIdxOk returns a tuple with the BaselineIdx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetBaselineIdxOk() (*int32, bool) {
	if o == nil || o.BaselineIdx == nil {
		return nil, false
	}
	return o.BaselineIdx, true
}

// HasBaselineIdx returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasBaselineIdx() bool {
	if o != nil && o.BaselineIdx != nil {
		return true
	}

	return false
}

// SetBaselineIdx gets a reference to the given int32 and assigns it to the BaselineIdx field.
func (o *ExperimentSummaryRep) SetBaselineIdx(v int32) {
	o.BaselineIdx = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ExperimentSummaryRep) SetStatus(v string) {
	o.Status = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetStartDate() int64 {
	if o == nil || o.StartDate == nil {
		var ret int64
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetStartDateOk() (*int64, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int64 and assigns it to the StartDate field.
func (o *ExperimentSummaryRep) SetStartDate(v int64) {
	o.StartDate = &v
}

// GetStopDate returns the StopDate field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetStopDate() int64 {
	if o == nil || o.StopDate == nil {
		var ret int64
		return ret
	}
	return *o.StopDate
}

// GetStopDateOk returns a tuple with the StopDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetStopDateOk() (*int64, bool) {
	if o == nil || o.StopDate == nil {
		return nil, false
	}
	return o.StopDate, true
}

// HasStopDate returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasStopDate() bool {
	if o != nil && o.StopDate != nil {
		return true
	}

	return false
}

// SetStopDate gets a reference to the given int64 and assigns it to the StopDate field.
func (o *ExperimentSummaryRep) SetStopDate(v int64) {
	o.StopDate = &v
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetFlag() ExperimentFlagRep {
	if o == nil || o.Flag == nil {
		var ret ExperimentFlagRep
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetFlagOk() (*ExperimentFlagRep, bool) {
	if o == nil || o.Flag == nil {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasFlag() bool {
	if o != nil && o.Flag != nil {
		return true
	}

	return false
}

// SetFlag gets a reference to the given ExperimentFlagRep and assigns it to the Flag field.
func (o *ExperimentSummaryRep) SetFlag(v ExperimentFlagRep) {
	o.Flag = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetMetric() MetricListingRep {
	if o == nil || o.Metric == nil {
		var ret MetricListingRep
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetMetricOk() (*MetricListingRep, bool) {
	if o == nil || o.Metric == nil {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasMetric() bool {
	if o != nil && o.Metric != nil {
		return true
	}

	return false
}

// SetMetric gets a reference to the given MetricListingRep and assigns it to the Metric field.
func (o *ExperimentSummaryRep) SetMetric(v MetricListingRep) {
	o.Metric = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ExperimentSummaryRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentSummaryRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ExperimentSummaryRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *ExperimentSummaryRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

func (o ExperimentSummaryRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.ProjKey != nil {
		toSerialize["_projKey"] = o.ProjKey
	}
	if o.EnvKey != nil {
		toSerialize["_envKey"] = o.EnvKey
	}
	if o.BaselineIdx != nil {
		toSerialize["_baselineIdx"] = o.BaselineIdx
	}
	if o.Status != nil {
		toSerialize["_status"] = o.Status
	}
	if o.StartDate != nil {
		toSerialize["_startDate"] = o.StartDate
	}
	if o.StopDate != nil {
		toSerialize["_stopDate"] = o.StopDate
	}
	if o.Flag != nil {
		toSerialize["_flag"] = o.Flag
	}
	if o.Metric != nil {
		toSerialize["_metric"] = o.Metric
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableExperimentSummaryRep struct {
	value *ExperimentSummaryRep
	isSet bool
}

func (v NullableExperimentSummaryRep) Get() *ExperimentSummaryRep {
	return v.value
}

func (v *NullableExperimentSummaryRep) Set(val *ExperimentSummaryRep) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimentSummaryRep) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimentSummaryRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimentSummaryRep(val *ExperimentSummaryRep) *NullableExperimentSummaryRep {
	return &NullableExperimentSummaryRep{value: val, isSet: true}
}

func (v NullableExperimentSummaryRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimentSummaryRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


