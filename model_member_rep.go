/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// MemberRep struct for MemberRep
type MemberRep struct {
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	// The member's ID
	Id *string `json:"_id,omitempty"`
	// The member's first name
	FirstName *string `json:"firstName,omitempty"`
	// The member's last name
	LastName *string `json:"lastName,omitempty"`
	// The member's built-in role. If the member has no custom roles, this role will be in effect.
	Role *string `json:"role,omitempty"`
	// The member's e-mail address
	Email *string `json:"email,omitempty"`
	// Whether or not the member has a pending invitation
	PendingInvite *bool `json:"_pendingInvite,omitempty"`
	// Whether or not the member's e-mail address has been verified
	Verified *bool `json:"_verified,omitempty"`
	PendingEmail *string `json:"_pendingEmail,omitempty"`
	// The set of custom roles (as keys) assigned to the member
	CustomRoles *[]string `json:"customRoles,omitempty"`
	// Whether or not multi-factor authentication is enabled for this member
	Mfa *string `json:"mfa,omitempty"`
	// Default dashboards that the team member has chosen to ignore
	ExcludedDashboards *[]string `json:"excludedDashboards,omitempty"`
	LastSeen *int64 `json:"_lastSeen,omitempty"`
	LastSeenMetadata *LastSeenMetadata `json:"_lastSeenMetadata,omitempty"`
	IntegrationMetadata *map[string]AccountsIntegrationSubscriptionMetadata `json:"_integrationMetadata,omitempty"`
	Teams *[]MemberRepTeams `json:"teams,omitempty"`
}

// NewMemberRep instantiates a new MemberRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberRep() *MemberRep {
	this := MemberRep{}
	return &this
}

// NewMemberRepWithDefaults instantiates a new MemberRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberRepWithDefaults() *MemberRep {
	this := MemberRep{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MemberRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MemberRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *MemberRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MemberRep) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MemberRep) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MemberRep) SetId(v string) {
	o.Id = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *MemberRep) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *MemberRep) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *MemberRep) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *MemberRep) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *MemberRep) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *MemberRep) SetLastName(v string) {
	o.LastName = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *MemberRep) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *MemberRep) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *MemberRep) SetRole(v string) {
	o.Role = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *MemberRep) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *MemberRep) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *MemberRep) SetEmail(v string) {
	o.Email = &v
}

// GetPendingInvite returns the PendingInvite field value if set, zero value otherwise.
func (o *MemberRep) GetPendingInvite() bool {
	if o == nil || o.PendingInvite == nil {
		var ret bool
		return ret
	}
	return *o.PendingInvite
}

// GetPendingInviteOk returns a tuple with the PendingInvite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetPendingInviteOk() (*bool, bool) {
	if o == nil || o.PendingInvite == nil {
		return nil, false
	}
	return o.PendingInvite, true
}

// HasPendingInvite returns a boolean if a field has been set.
func (o *MemberRep) HasPendingInvite() bool {
	if o != nil && o.PendingInvite != nil {
		return true
	}

	return false
}

// SetPendingInvite gets a reference to the given bool and assigns it to the PendingInvite field.
func (o *MemberRep) SetPendingInvite(v bool) {
	o.PendingInvite = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *MemberRep) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *MemberRep) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *MemberRep) SetVerified(v bool) {
	o.Verified = &v
}

// GetPendingEmail returns the PendingEmail field value if set, zero value otherwise.
func (o *MemberRep) GetPendingEmail() string {
	if o == nil || o.PendingEmail == nil {
		var ret string
		return ret
	}
	return *o.PendingEmail
}

// GetPendingEmailOk returns a tuple with the PendingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetPendingEmailOk() (*string, bool) {
	if o == nil || o.PendingEmail == nil {
		return nil, false
	}
	return o.PendingEmail, true
}

// HasPendingEmail returns a boolean if a field has been set.
func (o *MemberRep) HasPendingEmail() bool {
	if o != nil && o.PendingEmail != nil {
		return true
	}

	return false
}

// SetPendingEmail gets a reference to the given string and assigns it to the PendingEmail field.
func (o *MemberRep) SetPendingEmail(v string) {
	o.PendingEmail = &v
}

// GetCustomRoles returns the CustomRoles field value if set, zero value otherwise.
func (o *MemberRep) GetCustomRoles() []string {
	if o == nil || o.CustomRoles == nil {
		var ret []string
		return ret
	}
	return *o.CustomRoles
}

// GetCustomRolesOk returns a tuple with the CustomRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetCustomRolesOk() (*[]string, bool) {
	if o == nil || o.CustomRoles == nil {
		return nil, false
	}
	return o.CustomRoles, true
}

// HasCustomRoles returns a boolean if a field has been set.
func (o *MemberRep) HasCustomRoles() bool {
	if o != nil && o.CustomRoles != nil {
		return true
	}

	return false
}

// SetCustomRoles gets a reference to the given []string and assigns it to the CustomRoles field.
func (o *MemberRep) SetCustomRoles(v []string) {
	o.CustomRoles = &v
}

// GetMfa returns the Mfa field value if set, zero value otherwise.
func (o *MemberRep) GetMfa() string {
	if o == nil || o.Mfa == nil {
		var ret string
		return ret
	}
	return *o.Mfa
}

// GetMfaOk returns a tuple with the Mfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetMfaOk() (*string, bool) {
	if o == nil || o.Mfa == nil {
		return nil, false
	}
	return o.Mfa, true
}

// HasMfa returns a boolean if a field has been set.
func (o *MemberRep) HasMfa() bool {
	if o != nil && o.Mfa != nil {
		return true
	}

	return false
}

// SetMfa gets a reference to the given string and assigns it to the Mfa field.
func (o *MemberRep) SetMfa(v string) {
	o.Mfa = &v
}

// GetExcludedDashboards returns the ExcludedDashboards field value if set, zero value otherwise.
func (o *MemberRep) GetExcludedDashboards() []string {
	if o == nil || o.ExcludedDashboards == nil {
		var ret []string
		return ret
	}
	return *o.ExcludedDashboards
}

// GetExcludedDashboardsOk returns a tuple with the ExcludedDashboards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetExcludedDashboardsOk() (*[]string, bool) {
	if o == nil || o.ExcludedDashboards == nil {
		return nil, false
	}
	return o.ExcludedDashboards, true
}

// HasExcludedDashboards returns a boolean if a field has been set.
func (o *MemberRep) HasExcludedDashboards() bool {
	if o != nil && o.ExcludedDashboards != nil {
		return true
	}

	return false
}

// SetExcludedDashboards gets a reference to the given []string and assigns it to the ExcludedDashboards field.
func (o *MemberRep) SetExcludedDashboards(v []string) {
	o.ExcludedDashboards = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *MemberRep) GetLastSeen() int64 {
	if o == nil || o.LastSeen == nil {
		var ret int64
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetLastSeenOk() (*int64, bool) {
	if o == nil || o.LastSeen == nil {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *MemberRep) HasLastSeen() bool {
	if o != nil && o.LastSeen != nil {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given int64 and assigns it to the LastSeen field.
func (o *MemberRep) SetLastSeen(v int64) {
	o.LastSeen = &v
}

// GetLastSeenMetadata returns the LastSeenMetadata field value if set, zero value otherwise.
func (o *MemberRep) GetLastSeenMetadata() LastSeenMetadata {
	if o == nil || o.LastSeenMetadata == nil {
		var ret LastSeenMetadata
		return ret
	}
	return *o.LastSeenMetadata
}

// GetLastSeenMetadataOk returns a tuple with the LastSeenMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetLastSeenMetadataOk() (*LastSeenMetadata, bool) {
	if o == nil || o.LastSeenMetadata == nil {
		return nil, false
	}
	return o.LastSeenMetadata, true
}

// HasLastSeenMetadata returns a boolean if a field has been set.
func (o *MemberRep) HasLastSeenMetadata() bool {
	if o != nil && o.LastSeenMetadata != nil {
		return true
	}

	return false
}

// SetLastSeenMetadata gets a reference to the given LastSeenMetadata and assigns it to the LastSeenMetadata field.
func (o *MemberRep) SetLastSeenMetadata(v LastSeenMetadata) {
	o.LastSeenMetadata = &v
}

// GetIntegrationMetadata returns the IntegrationMetadata field value if set, zero value otherwise.
func (o *MemberRep) GetIntegrationMetadata() map[string]AccountsIntegrationSubscriptionMetadata {
	if o == nil || o.IntegrationMetadata == nil {
		var ret map[string]AccountsIntegrationSubscriptionMetadata
		return ret
	}
	return *o.IntegrationMetadata
}

// GetIntegrationMetadataOk returns a tuple with the IntegrationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetIntegrationMetadataOk() (*map[string]AccountsIntegrationSubscriptionMetadata, bool) {
	if o == nil || o.IntegrationMetadata == nil {
		return nil, false
	}
	return o.IntegrationMetadata, true
}

// HasIntegrationMetadata returns a boolean if a field has been set.
func (o *MemberRep) HasIntegrationMetadata() bool {
	if o != nil && o.IntegrationMetadata != nil {
		return true
	}

	return false
}

// SetIntegrationMetadata gets a reference to the given map[string]AccountsIntegrationSubscriptionMetadata and assigns it to the IntegrationMetadata field.
func (o *MemberRep) SetIntegrationMetadata(v map[string]AccountsIntegrationSubscriptionMetadata) {
	o.IntegrationMetadata = &v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *MemberRep) GetTeams() []MemberRepTeams {
	if o == nil || o.Teams == nil {
		var ret []MemberRepTeams
		return ret
	}
	return *o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRep) GetTeamsOk() (*[]MemberRepTeams, bool) {
	if o == nil || o.Teams == nil {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *MemberRep) HasTeams() bool {
	if o != nil && o.Teams != nil {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []MemberRepTeams and assigns it to the Teams field.
func (o *MemberRep) SetTeams(v []MemberRepTeams) {
	o.Teams = &v
}

func (o MemberRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.PendingInvite != nil {
		toSerialize["_pendingInvite"] = o.PendingInvite
	}
	if o.Verified != nil {
		toSerialize["_verified"] = o.Verified
	}
	if o.PendingEmail != nil {
		toSerialize["_pendingEmail"] = o.PendingEmail
	}
	if o.CustomRoles != nil {
		toSerialize["customRoles"] = o.CustomRoles
	}
	if o.Mfa != nil {
		toSerialize["mfa"] = o.Mfa
	}
	if o.ExcludedDashboards != nil {
		toSerialize["excludedDashboards"] = o.ExcludedDashboards
	}
	if o.LastSeen != nil {
		toSerialize["_lastSeen"] = o.LastSeen
	}
	if o.LastSeenMetadata != nil {
		toSerialize["_lastSeenMetadata"] = o.LastSeenMetadata
	}
	if o.IntegrationMetadata != nil {
		toSerialize["_integrationMetadata"] = o.IntegrationMetadata
	}
	if o.Teams != nil {
		toSerialize["teams"] = o.Teams
	}
	return json.Marshal(toSerialize)
}

type NullableMemberRep struct {
	value *MemberRep
	isSet bool
}

func (v NullableMemberRep) Get() *MemberRep {
	return v.value
}

func (v *NullableMemberRep) Set(val *MemberRep) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberRep) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberRep(val *MemberRep) *NullableMemberRep {
	return &NullableMemberRep{value: val, isSet: true}
}

func (v NullableMemberRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


