/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// LastSeenMetadata struct for LastSeenMetadata
type LastSeenMetadata struct {
	// The ID of the token used in the member's last session
	TokenId *string `json:"tokenId,omitempty"`
}

// NewLastSeenMetadata instantiates a new LastSeenMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastSeenMetadata() *LastSeenMetadata {
	this := LastSeenMetadata{}
	return &this
}

// NewLastSeenMetadataWithDefaults instantiates a new LastSeenMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastSeenMetadataWithDefaults() *LastSeenMetadata {
	this := LastSeenMetadata{}
	return &this
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *LastSeenMetadata) GetTokenId() string {
	if o == nil || o.TokenId == nil {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastSeenMetadata) GetTokenIdOk() (*string, bool) {
	if o == nil || o.TokenId == nil {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *LastSeenMetadata) HasTokenId() bool {
	if o != nil && o.TokenId != nil {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *LastSeenMetadata) SetTokenId(v string) {
	o.TokenId = &v
}

func (o LastSeenMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TokenId != nil {
		toSerialize["tokenId"] = o.TokenId
	}
	return json.Marshal(toSerialize)
}

type NullableLastSeenMetadata struct {
	value *LastSeenMetadata
	isSet bool
}

func (v NullableLastSeenMetadata) Get() *LastSeenMetadata {
	return v.value
}

func (v *NullableLastSeenMetadata) Set(val *LastSeenMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableLastSeenMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableLastSeenMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastSeenMetadata(val *LastSeenMetadata) *NullableLastSeenMetadata {
	return &NullableLastSeenMetadata{value: val, isSet: true}
}

func (v NullableLastSeenMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastSeenMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


