/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ParentResourceRep struct for ParentResourceRep
type ParentResourceRep struct {
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	Name *string `json:"name,omitempty"`
	Resource interface{} `json:"resource,omitempty"`
}

// NewParentResourceRep instantiates a new ParentResourceRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParentResourceRep() *ParentResourceRep {
	this := ParentResourceRep{}
	return &this
}

// NewParentResourceRepWithDefaults instantiates a new ParentResourceRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParentResourceRepWithDefaults() *ParentResourceRep {
	this := ParentResourceRep{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ParentResourceRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentResourceRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ParentResourceRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *ParentResourceRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ParentResourceRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParentResourceRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ParentResourceRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ParentResourceRep) SetName(v string) {
	o.Name = &v
}

// GetResource returns the Resource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ParentResourceRep) GetResource() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ParentResourceRep) GetResourceOk() (*interface{}, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return &o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *ParentResourceRep) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given interface{} and assigns it to the Resource field.
func (o *ParentResourceRep) SetResource(v interface{}) {
	o.Resource = v
}

func (o ParentResourceRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableParentResourceRep struct {
	value *ParentResourceRep
	isSet bool
}

func (v NullableParentResourceRep) Get() *ParentResourceRep {
	return v.value
}

func (v *NullableParentResourceRep) Set(val *ParentResourceRep) {
	v.value = val
	v.isSet = true
}

func (v NullableParentResourceRep) IsSet() bool {
	return v.isSet
}

func (v *NullableParentResourceRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParentResourceRep(val *ParentResourceRep) *NullableParentResourceRep {
	return &NullableParentResourceRep{value: val, isSet: true}
}

func (v NullableParentResourceRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParentResourceRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


