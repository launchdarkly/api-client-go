/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// WebExpiringUserTargetResponse struct for WebExpiringUserTargetResponse
type WebExpiringUserTargetResponse struct {
	Items *[]WebExpiringUserTargetResponseItems `json:"items,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	TotalInstructions *int32 `json:"totalInstructions,omitempty"`
	SuccessfulInstructions *int32 `json:"successfulInstructions,omitempty"`
	FailedInstructions *int32 `json:"failedInstructions,omitempty"`
	Errors *[]WebExpiringUserTargetResponseErrors `json:"errors,omitempty"`
}

// NewWebExpiringUserTargetResponse instantiates a new WebExpiringUserTargetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebExpiringUserTargetResponse() *WebExpiringUserTargetResponse {
	this := WebExpiringUserTargetResponse{}
	return &this
}

// NewWebExpiringUserTargetResponseWithDefaults instantiates a new WebExpiringUserTargetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebExpiringUserTargetResponseWithDefaults() *WebExpiringUserTargetResponse {
	this := WebExpiringUserTargetResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *WebExpiringUserTargetResponse) GetItems() []WebExpiringUserTargetResponseItems {
	if o == nil || o.Items == nil {
		var ret []WebExpiringUserTargetResponseItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebExpiringUserTargetResponse) GetItemsOk() (*[]WebExpiringUserTargetResponseItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *WebExpiringUserTargetResponse) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []WebExpiringUserTargetResponseItems and assigns it to the Items field.
func (o *WebExpiringUserTargetResponse) SetItems(v []WebExpiringUserTargetResponseItems) {
	o.Items = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *WebExpiringUserTargetResponse) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebExpiringUserTargetResponse) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *WebExpiringUserTargetResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *WebExpiringUserTargetResponse) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetTotalInstructions returns the TotalInstructions field value if set, zero value otherwise.
func (o *WebExpiringUserTargetResponse) GetTotalInstructions() int32 {
	if o == nil || o.TotalInstructions == nil {
		var ret int32
		return ret
	}
	return *o.TotalInstructions
}

// GetTotalInstructionsOk returns a tuple with the TotalInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebExpiringUserTargetResponse) GetTotalInstructionsOk() (*int32, bool) {
	if o == nil || o.TotalInstructions == nil {
		return nil, false
	}
	return o.TotalInstructions, true
}

// HasTotalInstructions returns a boolean if a field has been set.
func (o *WebExpiringUserTargetResponse) HasTotalInstructions() bool {
	if o != nil && o.TotalInstructions != nil {
		return true
	}

	return false
}

// SetTotalInstructions gets a reference to the given int32 and assigns it to the TotalInstructions field.
func (o *WebExpiringUserTargetResponse) SetTotalInstructions(v int32) {
	o.TotalInstructions = &v
}

// GetSuccessfulInstructions returns the SuccessfulInstructions field value if set, zero value otherwise.
func (o *WebExpiringUserTargetResponse) GetSuccessfulInstructions() int32 {
	if o == nil || o.SuccessfulInstructions == nil {
		var ret int32
		return ret
	}
	return *o.SuccessfulInstructions
}

// GetSuccessfulInstructionsOk returns a tuple with the SuccessfulInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebExpiringUserTargetResponse) GetSuccessfulInstructionsOk() (*int32, bool) {
	if o == nil || o.SuccessfulInstructions == nil {
		return nil, false
	}
	return o.SuccessfulInstructions, true
}

// HasSuccessfulInstructions returns a boolean if a field has been set.
func (o *WebExpiringUserTargetResponse) HasSuccessfulInstructions() bool {
	if o != nil && o.SuccessfulInstructions != nil {
		return true
	}

	return false
}

// SetSuccessfulInstructions gets a reference to the given int32 and assigns it to the SuccessfulInstructions field.
func (o *WebExpiringUserTargetResponse) SetSuccessfulInstructions(v int32) {
	o.SuccessfulInstructions = &v
}

// GetFailedInstructions returns the FailedInstructions field value if set, zero value otherwise.
func (o *WebExpiringUserTargetResponse) GetFailedInstructions() int32 {
	if o == nil || o.FailedInstructions == nil {
		var ret int32
		return ret
	}
	return *o.FailedInstructions
}

// GetFailedInstructionsOk returns a tuple with the FailedInstructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebExpiringUserTargetResponse) GetFailedInstructionsOk() (*int32, bool) {
	if o == nil || o.FailedInstructions == nil {
		return nil, false
	}
	return o.FailedInstructions, true
}

// HasFailedInstructions returns a boolean if a field has been set.
func (o *WebExpiringUserTargetResponse) HasFailedInstructions() bool {
	if o != nil && o.FailedInstructions != nil {
		return true
	}

	return false
}

// SetFailedInstructions gets a reference to the given int32 and assigns it to the FailedInstructions field.
func (o *WebExpiringUserTargetResponse) SetFailedInstructions(v int32) {
	o.FailedInstructions = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *WebExpiringUserTargetResponse) GetErrors() []WebExpiringUserTargetResponseErrors {
	if o == nil || o.Errors == nil {
		var ret []WebExpiringUserTargetResponseErrors
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebExpiringUserTargetResponse) GetErrorsOk() (*[]WebExpiringUserTargetResponseErrors, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *WebExpiringUserTargetResponse) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []WebExpiringUserTargetResponseErrors and assigns it to the Errors field.
func (o *WebExpiringUserTargetResponse) SetErrors(v []WebExpiringUserTargetResponseErrors) {
	o.Errors = &v
}

func (o WebExpiringUserTargetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.TotalInstructions != nil {
		toSerialize["totalInstructions"] = o.TotalInstructions
	}
	if o.SuccessfulInstructions != nil {
		toSerialize["successfulInstructions"] = o.SuccessfulInstructions
	}
	if o.FailedInstructions != nil {
		toSerialize["failedInstructions"] = o.FailedInstructions
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableWebExpiringUserTargetResponse struct {
	value *WebExpiringUserTargetResponse
	isSet bool
}

func (v NullableWebExpiringUserTargetResponse) Get() *WebExpiringUserTargetResponse {
	return v.value
}

func (v *NullableWebExpiringUserTargetResponse) Set(val *WebExpiringUserTargetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWebExpiringUserTargetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWebExpiringUserTargetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebExpiringUserTargetResponse(val *WebExpiringUserTargetResponse) *NullableWebExpiringUserTargetResponse {
	return &NullableWebExpiringUserTargetResponse{value: val, isSet: true}
}

func (v NullableWebExpiringUserTargetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebExpiringUserTargetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


