/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// WebIntegrationMetadata struct for WebIntegrationMetadata
type WebIntegrationMetadata struct {
	ExternalId *string `json:"externalId,omitempty"`
	ExternalStatus *WebIntegrationStatus `json:"externalStatus,omitempty"`
	ExternalUrl *string `json:"externalUrl,omitempty"`
	LastChecked *int64 `json:"lastChecked,omitempty"`
}

// NewWebIntegrationMetadata instantiates a new WebIntegrationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebIntegrationMetadata() *WebIntegrationMetadata {
	this := WebIntegrationMetadata{}
	return &this
}

// NewWebIntegrationMetadataWithDefaults instantiates a new WebIntegrationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebIntegrationMetadataWithDefaults() *WebIntegrationMetadata {
	this := WebIntegrationMetadata{}
	return &this
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *WebIntegrationMetadata) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebIntegrationMetadata) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *WebIntegrationMetadata) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *WebIntegrationMetadata) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetExternalStatus returns the ExternalStatus field value if set, zero value otherwise.
func (o *WebIntegrationMetadata) GetExternalStatus() WebIntegrationStatus {
	if o == nil || o.ExternalStatus == nil {
		var ret WebIntegrationStatus
		return ret
	}
	return *o.ExternalStatus
}

// GetExternalStatusOk returns a tuple with the ExternalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebIntegrationMetadata) GetExternalStatusOk() (*WebIntegrationStatus, bool) {
	if o == nil || o.ExternalStatus == nil {
		return nil, false
	}
	return o.ExternalStatus, true
}

// HasExternalStatus returns a boolean if a field has been set.
func (o *WebIntegrationMetadata) HasExternalStatus() bool {
	if o != nil && o.ExternalStatus != nil {
		return true
	}

	return false
}

// SetExternalStatus gets a reference to the given WebIntegrationStatus and assigns it to the ExternalStatus field.
func (o *WebIntegrationMetadata) SetExternalStatus(v WebIntegrationStatus) {
	o.ExternalStatus = &v
}

// GetExternalUrl returns the ExternalUrl field value if set, zero value otherwise.
func (o *WebIntegrationMetadata) GetExternalUrl() string {
	if o == nil || o.ExternalUrl == nil {
		var ret string
		return ret
	}
	return *o.ExternalUrl
}

// GetExternalUrlOk returns a tuple with the ExternalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebIntegrationMetadata) GetExternalUrlOk() (*string, bool) {
	if o == nil || o.ExternalUrl == nil {
		return nil, false
	}
	return o.ExternalUrl, true
}

// HasExternalUrl returns a boolean if a field has been set.
func (o *WebIntegrationMetadata) HasExternalUrl() bool {
	if o != nil && o.ExternalUrl != nil {
		return true
	}

	return false
}

// SetExternalUrl gets a reference to the given string and assigns it to the ExternalUrl field.
func (o *WebIntegrationMetadata) SetExternalUrl(v string) {
	o.ExternalUrl = &v
}

// GetLastChecked returns the LastChecked field value if set, zero value otherwise.
func (o *WebIntegrationMetadata) GetLastChecked() int64 {
	if o == nil || o.LastChecked == nil {
		var ret int64
		return ret
	}
	return *o.LastChecked
}

// GetLastCheckedOk returns a tuple with the LastChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebIntegrationMetadata) GetLastCheckedOk() (*int64, bool) {
	if o == nil || o.LastChecked == nil {
		return nil, false
	}
	return o.LastChecked, true
}

// HasLastChecked returns a boolean if a field has been set.
func (o *WebIntegrationMetadata) HasLastChecked() bool {
	if o != nil && o.LastChecked != nil {
		return true
	}

	return false
}

// SetLastChecked gets a reference to the given int64 and assigns it to the LastChecked field.
func (o *WebIntegrationMetadata) SetLastChecked(v int64) {
	o.LastChecked = &v
}

func (o WebIntegrationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.ExternalStatus != nil {
		toSerialize["externalStatus"] = o.ExternalStatus
	}
	if o.ExternalUrl != nil {
		toSerialize["externalUrl"] = o.ExternalUrl
	}
	if o.LastChecked != nil {
		toSerialize["lastChecked"] = o.LastChecked
	}
	return json.Marshal(toSerialize)
}

type NullableWebIntegrationMetadata struct {
	value *WebIntegrationMetadata
	isSet bool
}

func (v NullableWebIntegrationMetadata) Get() *WebIntegrationMetadata {
	return v.value
}

func (v *NullableWebIntegrationMetadata) Set(val *WebIntegrationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableWebIntegrationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableWebIntegrationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebIntegrationMetadata(val *WebIntegrationMetadata) *NullableWebIntegrationMetadata {
	return &NullableWebIntegrationMetadata{value: val, isSet: true}
}

func (v NullableWebIntegrationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebIntegrationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


