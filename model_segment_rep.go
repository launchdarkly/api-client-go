/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// SegmentRep struct for SegmentRep
type SegmentRep struct {
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	CreationDate *int64 `json:"creationDate,omitempty"`
	Key *string `json:"key,omitempty"`
	Included *[]string `json:"included,omitempty"`
	Excluded *[]string `json:"excluded,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	Rules *[]SegmentRepRules `json:"rules,omitempty"`
	Version *int32 `json:"version,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	Access *AccessRep `json:"_access,omitempty"`
	Flags *[]FlagListingRep `json:"_flags,omitempty"`
	Unbounded *bool `json:"unbounded,omitempty"`
	Generation *int32 `json:"generation,omitempty"`
	UnboundedMetadata *UnboundedSegmentMetadata `json:"_unboundedMetadata,omitempty"`
	External *string `json:"_external,omitempty"`
	ExternalLink *string `json:"_externalLink,omitempty"`
}

// NewSegmentRep instantiates a new SegmentRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentRep() *SegmentRep {
	this := SegmentRep{}
	return &this
}

// NewSegmentRepWithDefaults instantiates a new SegmentRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentRepWithDefaults() *SegmentRep {
	this := SegmentRep{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SegmentRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SegmentRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SegmentRep) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SegmentRep) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SegmentRep) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SegmentRep) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SegmentRep) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SegmentRep) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SegmentRep) SetTags(v []string) {
	o.Tags = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *SegmentRep) GetCreationDate() int64 {
	if o == nil || o.CreationDate == nil {
		var ret int64
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetCreationDateOk() (*int64, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *SegmentRep) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int64 and assigns it to the CreationDate field.
func (o *SegmentRep) SetCreationDate(v int64) {
	o.CreationDate = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SegmentRep) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SegmentRep) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SegmentRep) SetKey(v string) {
	o.Key = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *SegmentRep) GetIncluded() []string {
	if o == nil || o.Included == nil {
		var ret []string
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetIncludedOk() (*[]string, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *SegmentRep) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []string and assigns it to the Included field.
func (o *SegmentRep) SetIncluded(v []string) {
	o.Included = &v
}

// GetExcluded returns the Excluded field value if set, zero value otherwise.
func (o *SegmentRep) GetExcluded() []string {
	if o == nil || o.Excluded == nil {
		var ret []string
		return ret
	}
	return *o.Excluded
}

// GetExcludedOk returns a tuple with the Excluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetExcludedOk() (*[]string, bool) {
	if o == nil || o.Excluded == nil {
		return nil, false
	}
	return o.Excluded, true
}

// HasExcluded returns a boolean if a field has been set.
func (o *SegmentRep) HasExcluded() bool {
	if o != nil && o.Excluded != nil {
		return true
	}

	return false
}

// SetExcluded gets a reference to the given []string and assigns it to the Excluded field.
func (o *SegmentRep) SetExcluded(v []string) {
	o.Excluded = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *SegmentRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *SegmentRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *SegmentRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *SegmentRep) GetRules() []SegmentRepRules {
	if o == nil || o.Rules == nil {
		var ret []SegmentRepRules
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetRulesOk() (*[]SegmentRepRules, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *SegmentRep) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []SegmentRepRules and assigns it to the Rules field.
func (o *SegmentRep) SetRules(v []SegmentRepRules) {
	o.Rules = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SegmentRep) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SegmentRep) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *SegmentRep) SetVersion(v int32) {
	o.Version = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *SegmentRep) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *SegmentRep) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *SegmentRep) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *SegmentRep) GetAccess() AccessRep {
	if o == nil || o.Access == nil {
		var ret AccessRep
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetAccessOk() (*AccessRep, bool) {
	if o == nil || o.Access == nil {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *SegmentRep) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given AccessRep and assigns it to the Access field.
func (o *SegmentRep) SetAccess(v AccessRep) {
	o.Access = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *SegmentRep) GetFlags() []FlagListingRep {
	if o == nil || o.Flags == nil {
		var ret []FlagListingRep
		return ret
	}
	return *o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetFlagsOk() (*[]FlagListingRep, bool) {
	if o == nil || o.Flags == nil {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *SegmentRep) HasFlags() bool {
	if o != nil && o.Flags != nil {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []FlagListingRep and assigns it to the Flags field.
func (o *SegmentRep) SetFlags(v []FlagListingRep) {
	o.Flags = &v
}

// GetUnbounded returns the Unbounded field value if set, zero value otherwise.
func (o *SegmentRep) GetUnbounded() bool {
	if o == nil || o.Unbounded == nil {
		var ret bool
		return ret
	}
	return *o.Unbounded
}

// GetUnboundedOk returns a tuple with the Unbounded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetUnboundedOk() (*bool, bool) {
	if o == nil || o.Unbounded == nil {
		return nil, false
	}
	return o.Unbounded, true
}

// HasUnbounded returns a boolean if a field has been set.
func (o *SegmentRep) HasUnbounded() bool {
	if o != nil && o.Unbounded != nil {
		return true
	}

	return false
}

// SetUnbounded gets a reference to the given bool and assigns it to the Unbounded field.
func (o *SegmentRep) SetUnbounded(v bool) {
	o.Unbounded = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *SegmentRep) GetGeneration() int32 {
	if o == nil || o.Generation == nil {
		var ret int32
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetGenerationOk() (*int32, bool) {
	if o == nil || o.Generation == nil {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *SegmentRep) HasGeneration() bool {
	if o != nil && o.Generation != nil {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given int32 and assigns it to the Generation field.
func (o *SegmentRep) SetGeneration(v int32) {
	o.Generation = &v
}

// GetUnboundedMetadata returns the UnboundedMetadata field value if set, zero value otherwise.
func (o *SegmentRep) GetUnboundedMetadata() UnboundedSegmentMetadata {
	if o == nil || o.UnboundedMetadata == nil {
		var ret UnboundedSegmentMetadata
		return ret
	}
	return *o.UnboundedMetadata
}

// GetUnboundedMetadataOk returns a tuple with the UnboundedMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetUnboundedMetadataOk() (*UnboundedSegmentMetadata, bool) {
	if o == nil || o.UnboundedMetadata == nil {
		return nil, false
	}
	return o.UnboundedMetadata, true
}

// HasUnboundedMetadata returns a boolean if a field has been set.
func (o *SegmentRep) HasUnboundedMetadata() bool {
	if o != nil && o.UnboundedMetadata != nil {
		return true
	}

	return false
}

// SetUnboundedMetadata gets a reference to the given UnboundedSegmentMetadata and assigns it to the UnboundedMetadata field.
func (o *SegmentRep) SetUnboundedMetadata(v UnboundedSegmentMetadata) {
	o.UnboundedMetadata = &v
}

// GetExternal returns the External field value if set, zero value otherwise.
func (o *SegmentRep) GetExternal() string {
	if o == nil || o.External == nil {
		var ret string
		return ret
	}
	return *o.External
}

// GetExternalOk returns a tuple with the External field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetExternalOk() (*string, bool) {
	if o == nil || o.External == nil {
		return nil, false
	}
	return o.External, true
}

// HasExternal returns a boolean if a field has been set.
func (o *SegmentRep) HasExternal() bool {
	if o != nil && o.External != nil {
		return true
	}

	return false
}

// SetExternal gets a reference to the given string and assigns it to the External field.
func (o *SegmentRep) SetExternal(v string) {
	o.External = &v
}

// GetExternalLink returns the ExternalLink field value if set, zero value otherwise.
func (o *SegmentRep) GetExternalLink() string {
	if o == nil || o.ExternalLink == nil {
		var ret string
		return ret
	}
	return *o.ExternalLink
}

// GetExternalLinkOk returns a tuple with the ExternalLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentRep) GetExternalLinkOk() (*string, bool) {
	if o == nil || o.ExternalLink == nil {
		return nil, false
	}
	return o.ExternalLink, true
}

// HasExternalLink returns a boolean if a field has been set.
func (o *SegmentRep) HasExternalLink() bool {
	if o != nil && o.ExternalLink != nil {
		return true
	}

	return false
}

// SetExternalLink gets a reference to the given string and assigns it to the ExternalLink field.
func (o *SegmentRep) SetExternalLink(v string) {
	o.ExternalLink = &v
}

func (o SegmentRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CreationDate != nil {
		toSerialize["creationDate"] = o.CreationDate
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Excluded != nil {
		toSerialize["excluded"] = o.Excluded
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Access != nil {
		toSerialize["_access"] = o.Access
	}
	if o.Flags != nil {
		toSerialize["_flags"] = o.Flags
	}
	if o.Unbounded != nil {
		toSerialize["unbounded"] = o.Unbounded
	}
	if o.Generation != nil {
		toSerialize["generation"] = o.Generation
	}
	if o.UnboundedMetadata != nil {
		toSerialize["_unboundedMetadata"] = o.UnboundedMetadata
	}
	if o.External != nil {
		toSerialize["_external"] = o.External
	}
	if o.ExternalLink != nil {
		toSerialize["_externalLink"] = o.ExternalLink
	}
	return json.Marshal(toSerialize)
}

type NullableSegmentRep struct {
	value *SegmentRep
	isSet bool
}

func (v NullableSegmentRep) Get() *SegmentRep {
	return v.value
}

func (v *NullableSegmentRep) Set(val *SegmentRep) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentRep) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentRep(val *SegmentRep) *NullableSegmentRep {
	return &NullableSegmentRep{value: val, isSet: true}
}

func (v NullableSegmentRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


