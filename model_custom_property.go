/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// CustomProperty struct for CustomProperty
type CustomProperty struct {
	Name *string `json:"name,omitempty"`
	Value *[]string `json:"value,omitempty"`
}

// NewCustomProperty instantiates a new CustomProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomProperty() *CustomProperty {
	this := CustomProperty{}
	return &this
}

// NewCustomPropertyWithDefaults instantiates a new CustomProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomPropertyWithDefaults() *CustomProperty {
	this := CustomProperty{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CustomProperty) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProperty) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CustomProperty) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CustomProperty) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CustomProperty) GetValue() []string {
	if o == nil || o.Value == nil {
		var ret []string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomProperty) GetValueOk() (*[]string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CustomProperty) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given []string and assigns it to the Value field.
func (o *CustomProperty) SetValue(v []string) {
	o.Value = &v
}

func (o CustomProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableCustomProperty struct {
	value *CustomProperty
	isSet bool
}

func (v NullableCustomProperty) Get() *CustomProperty {
	return v.value
}

func (v *NullableCustomProperty) Set(val *CustomProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomProperty(val *CustomProperty) *NullableCustomProperty {
	return &NullableCustomProperty{value: val, isSet: true}
}

func (v NullableCustomProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


