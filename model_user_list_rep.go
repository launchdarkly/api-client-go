/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// UserListRep struct for UserListRep
type UserListRep struct {
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	TotalCount *int32 `json:"totalCount,omitempty"`
	Items *[]UserListRepItems `json:"items,omitempty"`
}

// NewUserListRep instantiates a new UserListRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserListRep() *UserListRep {
	this := UserListRep{}
	return &this
}

// NewUserListRepWithDefaults instantiates a new UserListRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserListRepWithDefaults() *UserListRep {
	this := UserListRep{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *UserListRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *UserListRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *UserListRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *UserListRep) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListRep) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *UserListRep) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *UserListRep) SetTotalCount(v int32) {
	o.TotalCount = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *UserListRep) GetItems() []UserListRepItems {
	if o == nil || o.Items == nil {
		var ret []UserListRepItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserListRep) GetItemsOk() (*[]UserListRepItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *UserListRep) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []UserListRepItems and assigns it to the Items field.
func (o *UserListRep) SetItems(v []UserListRepItems) {
	o.Items = &v
}

func (o UserListRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.TotalCount != nil {
		toSerialize["totalCount"] = o.TotalCount
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableUserListRep struct {
	value *UserListRep
	isSet bool
}

func (v NullableUserListRep) Get() *UserListRep {
	return v.value
}

func (v *NullableUserListRep) Set(val *UserListRep) {
	v.value = val
	v.isSet = true
}

func (v NullableUserListRep) IsSet() bool {
	return v.isSet
}

func (v *NullableUserListRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserListRep(val *UserListRep) *NullableUserListRep {
	return &NullableUserListRep{value: val, isSet: true}
}

func (v NullableUserListRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserListRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


