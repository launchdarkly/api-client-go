/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// VariationSummary struct for VariationSummary
type VariationSummary struct {
	Rules *int32 `json:"rules,omitempty"`
	NullRules *int32 `json:"nullRules,omitempty"`
	Targets *int32 `json:"targets,omitempty"`
	IsFallthrough *bool `json:"isFallthrough,omitempty"`
	IsOff *bool `json:"isOff,omitempty"`
	Rollout *int32 `json:"rollout,omitempty"`
	BucketBy *string `json:"bucketBy,omitempty"`
}

// NewVariationSummary instantiates a new VariationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariationSummary() *VariationSummary {
	this := VariationSummary{}
	return &this
}

// NewVariationSummaryWithDefaults instantiates a new VariationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariationSummaryWithDefaults() *VariationSummary {
	this := VariationSummary{}
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *VariationSummary) GetRules() int32 {
	if o == nil || o.Rules == nil {
		var ret int32
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSummary) GetRulesOk() (*int32, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *VariationSummary) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given int32 and assigns it to the Rules field.
func (o *VariationSummary) SetRules(v int32) {
	o.Rules = &v
}

// GetNullRules returns the NullRules field value if set, zero value otherwise.
func (o *VariationSummary) GetNullRules() int32 {
	if o == nil || o.NullRules == nil {
		var ret int32
		return ret
	}
	return *o.NullRules
}

// GetNullRulesOk returns a tuple with the NullRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSummary) GetNullRulesOk() (*int32, bool) {
	if o == nil || o.NullRules == nil {
		return nil, false
	}
	return o.NullRules, true
}

// HasNullRules returns a boolean if a field has been set.
func (o *VariationSummary) HasNullRules() bool {
	if o != nil && o.NullRules != nil {
		return true
	}

	return false
}

// SetNullRules gets a reference to the given int32 and assigns it to the NullRules field.
func (o *VariationSummary) SetNullRules(v int32) {
	o.NullRules = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *VariationSummary) GetTargets() int32 {
	if o == nil || o.Targets == nil {
		var ret int32
		return ret
	}
	return *o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSummary) GetTargetsOk() (*int32, bool) {
	if o == nil || o.Targets == nil {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *VariationSummary) HasTargets() bool {
	if o != nil && o.Targets != nil {
		return true
	}

	return false
}

// SetTargets gets a reference to the given int32 and assigns it to the Targets field.
func (o *VariationSummary) SetTargets(v int32) {
	o.Targets = &v
}

// GetIsFallthrough returns the IsFallthrough field value if set, zero value otherwise.
func (o *VariationSummary) GetIsFallthrough() bool {
	if o == nil || o.IsFallthrough == nil {
		var ret bool
		return ret
	}
	return *o.IsFallthrough
}

// GetIsFallthroughOk returns a tuple with the IsFallthrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSummary) GetIsFallthroughOk() (*bool, bool) {
	if o == nil || o.IsFallthrough == nil {
		return nil, false
	}
	return o.IsFallthrough, true
}

// HasIsFallthrough returns a boolean if a field has been set.
func (o *VariationSummary) HasIsFallthrough() bool {
	if o != nil && o.IsFallthrough != nil {
		return true
	}

	return false
}

// SetIsFallthrough gets a reference to the given bool and assigns it to the IsFallthrough field.
func (o *VariationSummary) SetIsFallthrough(v bool) {
	o.IsFallthrough = &v
}

// GetIsOff returns the IsOff field value if set, zero value otherwise.
func (o *VariationSummary) GetIsOff() bool {
	if o == nil || o.IsOff == nil {
		var ret bool
		return ret
	}
	return *o.IsOff
}

// GetIsOffOk returns a tuple with the IsOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSummary) GetIsOffOk() (*bool, bool) {
	if o == nil || o.IsOff == nil {
		return nil, false
	}
	return o.IsOff, true
}

// HasIsOff returns a boolean if a field has been set.
func (o *VariationSummary) HasIsOff() bool {
	if o != nil && o.IsOff != nil {
		return true
	}

	return false
}

// SetIsOff gets a reference to the given bool and assigns it to the IsOff field.
func (o *VariationSummary) SetIsOff(v bool) {
	o.IsOff = &v
}

// GetRollout returns the Rollout field value if set, zero value otherwise.
func (o *VariationSummary) GetRollout() int32 {
	if o == nil || o.Rollout == nil {
		var ret int32
		return ret
	}
	return *o.Rollout
}

// GetRolloutOk returns a tuple with the Rollout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSummary) GetRolloutOk() (*int32, bool) {
	if o == nil || o.Rollout == nil {
		return nil, false
	}
	return o.Rollout, true
}

// HasRollout returns a boolean if a field has been set.
func (o *VariationSummary) HasRollout() bool {
	if o != nil && o.Rollout != nil {
		return true
	}

	return false
}

// SetRollout gets a reference to the given int32 and assigns it to the Rollout field.
func (o *VariationSummary) SetRollout(v int32) {
	o.Rollout = &v
}

// GetBucketBy returns the BucketBy field value if set, zero value otherwise.
func (o *VariationSummary) GetBucketBy() string {
	if o == nil || o.BucketBy == nil {
		var ret string
		return ret
	}
	return *o.BucketBy
}

// GetBucketByOk returns a tuple with the BucketBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VariationSummary) GetBucketByOk() (*string, bool) {
	if o == nil || o.BucketBy == nil {
		return nil, false
	}
	return o.BucketBy, true
}

// HasBucketBy returns a boolean if a field has been set.
func (o *VariationSummary) HasBucketBy() bool {
	if o != nil && o.BucketBy != nil {
		return true
	}

	return false
}

// SetBucketBy gets a reference to the given string and assigns it to the BucketBy field.
func (o *VariationSummary) SetBucketBy(v string) {
	o.BucketBy = &v
}

func (o VariationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.NullRules != nil {
		toSerialize["nullRules"] = o.NullRules
	}
	if o.Targets != nil {
		toSerialize["targets"] = o.Targets
	}
	if o.IsFallthrough != nil {
		toSerialize["isFallthrough"] = o.IsFallthrough
	}
	if o.IsOff != nil {
		toSerialize["isOff"] = o.IsOff
	}
	if o.Rollout != nil {
		toSerialize["rollout"] = o.Rollout
	}
	if o.BucketBy != nil {
		toSerialize["bucketBy"] = o.BucketBy
	}
	return json.Marshal(toSerialize)
}

type NullableVariationSummary struct {
	value *VariationSummary
	isSet bool
}

func (v NullableVariationSummary) Get() *VariationSummary {
	return v.value
}

func (v *NullableVariationSummary) Set(val *VariationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVariationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVariationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariationSummary(val *VariationSummary) *NullableVariationSummary {
	return &NullableVariationSummary{value: val, isSet: true}
}

func (v NullableVariationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


