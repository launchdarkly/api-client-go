/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// FlagPost struct for FlagPost
type FlagPost struct {
	Name *string `json:"name,omitempty"`
	Key *string `json:"key,omitempty"`
	Description *string `json:"description,omitempty"`
	IncludeInSnippet *bool `json:"includeInSnippet,omitempty"`
	ClientSideAvailability *ClientSideAvailabilityPost `json:"clientSideAvailability,omitempty"`
	Variations *[]FlagPostVariations `json:"variations,omitempty"`
	VariationJsonSchema interface{} `json:"variationJsonSchema,omitempty"`
	Temporary *bool `json:"temporary,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	CustomProperties *map[string]CustomProperty `json:"customProperties,omitempty"`
	Defaults *FlagDefaultsRep `json:"defaults,omitempty"`
}

// NewFlagPost instantiates a new FlagPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlagPost() *FlagPost {
	this := FlagPost{}
	return &this
}

// NewFlagPostWithDefaults instantiates a new FlagPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlagPostWithDefaults() *FlagPost {
	this := FlagPost{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FlagPost) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FlagPost) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FlagPost) SetName(v string) {
	o.Name = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *FlagPost) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *FlagPost) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *FlagPost) SetKey(v string) {
	o.Key = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FlagPost) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FlagPost) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FlagPost) SetDescription(v string) {
	o.Description = &v
}

// GetIncludeInSnippet returns the IncludeInSnippet field value if set, zero value otherwise.
func (o *FlagPost) GetIncludeInSnippet() bool {
	if o == nil || o.IncludeInSnippet == nil {
		var ret bool
		return ret
	}
	return *o.IncludeInSnippet
}

// GetIncludeInSnippetOk returns a tuple with the IncludeInSnippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetIncludeInSnippetOk() (*bool, bool) {
	if o == nil || o.IncludeInSnippet == nil {
		return nil, false
	}
	return o.IncludeInSnippet, true
}

// HasIncludeInSnippet returns a boolean if a field has been set.
func (o *FlagPost) HasIncludeInSnippet() bool {
	if o != nil && o.IncludeInSnippet != nil {
		return true
	}

	return false
}

// SetIncludeInSnippet gets a reference to the given bool and assigns it to the IncludeInSnippet field.
func (o *FlagPost) SetIncludeInSnippet(v bool) {
	o.IncludeInSnippet = &v
}

// GetClientSideAvailability returns the ClientSideAvailability field value if set, zero value otherwise.
func (o *FlagPost) GetClientSideAvailability() ClientSideAvailabilityPost {
	if o == nil || o.ClientSideAvailability == nil {
		var ret ClientSideAvailabilityPost
		return ret
	}
	return *o.ClientSideAvailability
}

// GetClientSideAvailabilityOk returns a tuple with the ClientSideAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetClientSideAvailabilityOk() (*ClientSideAvailabilityPost, bool) {
	if o == nil || o.ClientSideAvailability == nil {
		return nil, false
	}
	return o.ClientSideAvailability, true
}

// HasClientSideAvailability returns a boolean if a field has been set.
func (o *FlagPost) HasClientSideAvailability() bool {
	if o != nil && o.ClientSideAvailability != nil {
		return true
	}

	return false
}

// SetClientSideAvailability gets a reference to the given ClientSideAvailabilityPost and assigns it to the ClientSideAvailability field.
func (o *FlagPost) SetClientSideAvailability(v ClientSideAvailabilityPost) {
	o.ClientSideAvailability = &v
}

// GetVariations returns the Variations field value if set, zero value otherwise.
func (o *FlagPost) GetVariations() []FlagPostVariations {
	if o == nil || o.Variations == nil {
		var ret []FlagPostVariations
		return ret
	}
	return *o.Variations
}

// GetVariationsOk returns a tuple with the Variations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetVariationsOk() (*[]FlagPostVariations, bool) {
	if o == nil || o.Variations == nil {
		return nil, false
	}
	return o.Variations, true
}

// HasVariations returns a boolean if a field has been set.
func (o *FlagPost) HasVariations() bool {
	if o != nil && o.Variations != nil {
		return true
	}

	return false
}

// SetVariations gets a reference to the given []FlagPostVariations and assigns it to the Variations field.
func (o *FlagPost) SetVariations(v []FlagPostVariations) {
	o.Variations = &v
}

// GetVariationJsonSchema returns the VariationJsonSchema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FlagPost) GetVariationJsonSchema() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.VariationJsonSchema
}

// GetVariationJsonSchemaOk returns a tuple with the VariationJsonSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FlagPost) GetVariationJsonSchemaOk() (*interface{}, bool) {
	if o == nil || o.VariationJsonSchema == nil {
		return nil, false
	}
	return &o.VariationJsonSchema, true
}

// HasVariationJsonSchema returns a boolean if a field has been set.
func (o *FlagPost) HasVariationJsonSchema() bool {
	if o != nil && o.VariationJsonSchema != nil {
		return true
	}

	return false
}

// SetVariationJsonSchema gets a reference to the given interface{} and assigns it to the VariationJsonSchema field.
func (o *FlagPost) SetVariationJsonSchema(v interface{}) {
	o.VariationJsonSchema = v
}

// GetTemporary returns the Temporary field value if set, zero value otherwise.
func (o *FlagPost) GetTemporary() bool {
	if o == nil || o.Temporary == nil {
		var ret bool
		return ret
	}
	return *o.Temporary
}

// GetTemporaryOk returns a tuple with the Temporary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetTemporaryOk() (*bool, bool) {
	if o == nil || o.Temporary == nil {
		return nil, false
	}
	return o.Temporary, true
}

// HasTemporary returns a boolean if a field has been set.
func (o *FlagPost) HasTemporary() bool {
	if o != nil && o.Temporary != nil {
		return true
	}

	return false
}

// SetTemporary gets a reference to the given bool and assigns it to the Temporary field.
func (o *FlagPost) SetTemporary(v bool) {
	o.Temporary = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FlagPost) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FlagPost) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FlagPost) SetTags(v []string) {
	o.Tags = &v
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *FlagPost) GetCustomProperties() map[string]CustomProperty {
	if o == nil || o.CustomProperties == nil {
		var ret map[string]CustomProperty
		return ret
	}
	return *o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetCustomPropertiesOk() (*map[string]CustomProperty, bool) {
	if o == nil || o.CustomProperties == nil {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *FlagPost) HasCustomProperties() bool {
	if o != nil && o.CustomProperties != nil {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given map[string]CustomProperty and assigns it to the CustomProperties field.
func (o *FlagPost) SetCustomProperties(v map[string]CustomProperty) {
	o.CustomProperties = &v
}

// GetDefaults returns the Defaults field value if set, zero value otherwise.
func (o *FlagPost) GetDefaults() FlagDefaultsRep {
	if o == nil || o.Defaults == nil {
		var ret FlagDefaultsRep
		return ret
	}
	return *o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagPost) GetDefaultsOk() (*FlagDefaultsRep, bool) {
	if o == nil || o.Defaults == nil {
		return nil, false
	}
	return o.Defaults, true
}

// HasDefaults returns a boolean if a field has been set.
func (o *FlagPost) HasDefaults() bool {
	if o != nil && o.Defaults != nil {
		return true
	}

	return false
}

// SetDefaults gets a reference to the given FlagDefaultsRep and assigns it to the Defaults field.
func (o *FlagPost) SetDefaults(v FlagDefaultsRep) {
	o.Defaults = &v
}

func (o FlagPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.IncludeInSnippet != nil {
		toSerialize["includeInSnippet"] = o.IncludeInSnippet
	}
	if o.ClientSideAvailability != nil {
		toSerialize["clientSideAvailability"] = o.ClientSideAvailability
	}
	if o.Variations != nil {
		toSerialize["variations"] = o.Variations
	}
	if o.VariationJsonSchema != nil {
		toSerialize["variationJsonSchema"] = o.VariationJsonSchema
	}
	if o.Temporary != nil {
		toSerialize["temporary"] = o.Temporary
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.CustomProperties != nil {
		toSerialize["customProperties"] = o.CustomProperties
	}
	if o.Defaults != nil {
		toSerialize["defaults"] = o.Defaults
	}
	return json.Marshal(toSerialize)
}

type NullableFlagPost struct {
	value *FlagPost
	isSet bool
}

func (v NullableFlagPost) Get() *FlagPost {
	return v.value
}

func (v *NullableFlagPost) Set(val *FlagPost) {
	v.value = val
	v.isSet = true
}

func (v NullableFlagPost) IsSet() bool {
	return v.isSet
}

func (v *NullableFlagPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlagPost(val *FlagPost) *NullableFlagPost {
	return &NullableFlagPost{value: val, isSet: true}
}

func (v NullableFlagPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlagPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


