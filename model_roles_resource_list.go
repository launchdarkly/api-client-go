/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// RolesResourceList struct for RolesResourceList
type RolesResourceList struct {
	Resources *[]map[string]interface{} `json:"Resources,omitempty"`
	Negate *bool `json:"Negate,omitempty"`
}

// NewRolesResourceList instantiates a new RolesResourceList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolesResourceList() *RolesResourceList {
	this := RolesResourceList{}
	return &this
}

// NewRolesResourceListWithDefaults instantiates a new RolesResourceList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolesResourceListWithDefaults() *RolesResourceList {
	this := RolesResourceList{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *RolesResourceList) GetResources() []map[string]interface{} {
	if o == nil || o.Resources == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesResourceList) GetResourcesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *RolesResourceList) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []map[string]interface{} and assigns it to the Resources field.
func (o *RolesResourceList) SetResources(v []map[string]interface{}) {
	o.Resources = &v
}

// GetNegate returns the Negate field value if set, zero value otherwise.
func (o *RolesResourceList) GetNegate() bool {
	if o == nil || o.Negate == nil {
		var ret bool
		return ret
	}
	return *o.Negate
}

// GetNegateOk returns a tuple with the Negate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesResourceList) GetNegateOk() (*bool, bool) {
	if o == nil || o.Negate == nil {
		return nil, false
	}
	return o.Negate, true
}

// HasNegate returns a boolean if a field has been set.
func (o *RolesResourceList) HasNegate() bool {
	if o != nil && o.Negate != nil {
		return true
	}

	return false
}

// SetNegate gets a reference to the given bool and assigns it to the Negate field.
func (o *RolesResourceList) SetNegate(v bool) {
	o.Negate = &v
}

func (o RolesResourceList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Resources != nil {
		toSerialize["Resources"] = o.Resources
	}
	if o.Negate != nil {
		toSerialize["Negate"] = o.Negate
	}
	return json.Marshal(toSerialize)
}

type NullableRolesResourceList struct {
	value *RolesResourceList
	isSet bool
}

func (v NullableRolesResourceList) Get() *RolesResourceList {
	return v.value
}

func (v *NullableRolesResourceList) Set(val *RolesResourceList) {
	v.value = val
	v.isSet = true
}

func (v NullableRolesResourceList) IsSet() bool {
	return v.isSet
}

func (v *NullableRolesResourceList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolesResourceList(val *RolesResourceList) *NullableRolesResourceList {
	return &NullableRolesResourceList{value: val, isSet: true}
}

func (v NullableRolesResourceList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolesResourceList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


