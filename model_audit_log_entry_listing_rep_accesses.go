/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// AuditLogEntryListingRepAccesses struct for AuditLogEntryListingRepAccesses
type AuditLogEntryListingRepAccesses struct {
	Action *string `json:"action,omitempty"`
	Resource interface{} `json:"resource,omitempty"`
}

// NewAuditLogEntryListingRepAccesses instantiates a new AuditLogEntryListingRepAccesses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogEntryListingRepAccesses() *AuditLogEntryListingRepAccesses {
	this := AuditLogEntryListingRepAccesses{}
	return &this
}

// NewAuditLogEntryListingRepAccessesWithDefaults instantiates a new AuditLogEntryListingRepAccesses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogEntryListingRepAccessesWithDefaults() *AuditLogEntryListingRepAccesses {
	this := AuditLogEntryListingRepAccesses{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AuditLogEntryListingRepAccesses) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryListingRepAccesses) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AuditLogEntryListingRepAccesses) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *AuditLogEntryListingRepAccesses) SetAction(v string) {
	o.Action = &v
}

// GetResource returns the Resource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuditLogEntryListingRepAccesses) GetResource() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuditLogEntryListingRepAccesses) GetResourceOk() (*interface{}, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return &o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AuditLogEntryListingRepAccesses) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given interface{} and assigns it to the Resource field.
func (o *AuditLogEntryListingRepAccesses) SetResource(v interface{}) {
	o.Resource = v
}

func (o AuditLogEntryListingRepAccesses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableAuditLogEntryListingRepAccesses struct {
	value *AuditLogEntryListingRepAccesses
	isSet bool
}

func (v NullableAuditLogEntryListingRepAccesses) Get() *AuditLogEntryListingRepAccesses {
	return v.value
}

func (v *NullableAuditLogEntryListingRepAccesses) Set(val *AuditLogEntryListingRepAccesses) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryListingRepAccesses) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryListingRepAccesses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryListingRepAccesses(val *AuditLogEntryListingRepAccesses) *NullableAuditLogEntryListingRepAccesses {
	return &NullableAuditLogEntryListingRepAccesses{value: val, isSet: true}
}

func (v NullableAuditLogEntryListingRepAccesses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryListingRepAccesses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


