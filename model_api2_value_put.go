/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// Api2ValuePut struct for Api2ValuePut
type Api2ValuePut struct {
	Setting interface{} `json:"setting,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

// NewApi2ValuePut instantiates a new Api2ValuePut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApi2ValuePut() *Api2ValuePut {
	this := Api2ValuePut{}
	return &this
}

// NewApi2ValuePutWithDefaults instantiates a new Api2ValuePut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApi2ValuePutWithDefaults() *Api2ValuePut {
	this := Api2ValuePut{}
	return &this
}

// GetSetting returns the Setting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Api2ValuePut) GetSetting() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Setting
}

// GetSettingOk returns a tuple with the Setting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Api2ValuePut) GetSettingOk() (*interface{}, bool) {
	if o == nil || o.Setting == nil {
		return nil, false
	}
	return &o.Setting, true
}

// HasSetting returns a boolean if a field has been set.
func (o *Api2ValuePut) HasSetting() bool {
	if o != nil && o.Setting != nil {
		return true
	}

	return false
}

// SetSetting gets a reference to the given interface{} and assigns it to the Setting field.
func (o *Api2ValuePut) SetSetting(v interface{}) {
	o.Setting = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Api2ValuePut) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Api2ValuePut) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Api2ValuePut) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Api2ValuePut) SetComment(v string) {
	o.Comment = &v
}

func (o Api2ValuePut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Setting != nil {
		toSerialize["setting"] = o.Setting
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	return json.Marshal(toSerialize)
}

type NullableApi2ValuePut struct {
	value *Api2ValuePut
	isSet bool
}

func (v NullableApi2ValuePut) Get() *Api2ValuePut {
	return v.value
}

func (v *NullableApi2ValuePut) Set(val *Api2ValuePut) {
	v.value = val
	v.isSet = true
}

func (v NullableApi2ValuePut) IsSet() bool {
	return v.isSet
}

func (v *NullableApi2ValuePut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApi2ValuePut(val *Api2ValuePut) *NullableApi2ValuePut {
	return &NullableApi2ValuePut{value: val, isSet: true}
}

func (v NullableApi2ValuePut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApi2ValuePut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


