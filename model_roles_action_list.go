/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// RolesActionList struct for RolesActionList
type RolesActionList struct {
	Actions *[]string `json:"Actions,omitempty"`
	Negate *bool `json:"Negate,omitempty"`
}

// NewRolesActionList instantiates a new RolesActionList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolesActionList() *RolesActionList {
	this := RolesActionList{}
	return &this
}

// NewRolesActionListWithDefaults instantiates a new RolesActionList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolesActionListWithDefaults() *RolesActionList {
	this := RolesActionList{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *RolesActionList) GetActions() []string {
	if o == nil || o.Actions == nil {
		var ret []string
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesActionList) GetActionsOk() (*[]string, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *RolesActionList) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *RolesActionList) SetActions(v []string) {
	o.Actions = &v
}

// GetNegate returns the Negate field value if set, zero value otherwise.
func (o *RolesActionList) GetNegate() bool {
	if o == nil || o.Negate == nil {
		var ret bool
		return ret
	}
	return *o.Negate
}

// GetNegateOk returns a tuple with the Negate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesActionList) GetNegateOk() (*bool, bool) {
	if o == nil || o.Negate == nil {
		return nil, false
	}
	return o.Negate, true
}

// HasNegate returns a boolean if a field has been set.
func (o *RolesActionList) HasNegate() bool {
	if o != nil && o.Negate != nil {
		return true
	}

	return false
}

// SetNegate gets a reference to the given bool and assigns it to the Negate field.
func (o *RolesActionList) SetNegate(v bool) {
	o.Negate = &v
}

func (o RolesActionList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Actions != nil {
		toSerialize["Actions"] = o.Actions
	}
	if o.Negate != nil {
		toSerialize["Negate"] = o.Negate
	}
	return json.Marshal(toSerialize)
}

type NullableRolesActionList struct {
	value *RolesActionList
	isSet bool
}

func (v NullableRolesActionList) Get() *RolesActionList {
	return v.value
}

func (v *NullableRolesActionList) Set(val *RolesActionList) {
	v.value = val
	v.isSet = true
}

func (v NullableRolesActionList) IsSet() bool {
	return v.isSet
}

func (v *NullableRolesActionList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolesActionList(val *RolesActionList) *NullableRolesActionList {
	return &NullableRolesActionList{value: val, isSet: true}
}

func (v NullableRolesActionList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolesActionList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


