openapi: 3.0.0
info:
  contact:
    email: support@launchdarkly.com
    name: LaunchDarkly Technical Support Team
    url: https://support.launchdarkly.com
  description: "# Authentication\n\nAll REST API resources are authenticated with\
    \ [personal access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens)\
    \ or session cookies. Other authentication mechanisms are not supported. You can\
    \ manage personal access tokens on your [Account settings](https://app.launchdarkly.com/settings/tokens)\
    \ page. \n\nLaunchDarkly also has SDK keys, mobile keys, and client-side IDs that\
    \ are used by our server-side SDKs, mobile SDKs, and client-side JavaScript SDKs,\
    \ respectively. **These keys cannot be used to access our REST API**. These keys\
    \ are environment-specific, and can only perform read-only operations (fetching\
    \ feature flag settings).\n\n| Auth mechanism | Allowed resources | Use cases\
    \ |\n| -------------- | ----------------- | --------- |\n| [Personal access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens)\
    \ | Can be customized on a per-token basis | Building scripts, custom integrations,\
    \ data export |\n| SDK keys | Can only access read-only SDK-specific resources\
    \ and the firehose, restricted to a single environment | Server-side SDKs, Firehose\
    \ API |\n| Mobile keys | Can only access read-only mobile SDK-specific resources,\
    \ restricted to a single environment | Mobile SDKs |\n| Client-side ID | Single\
    \ environment, only flags marked available to client-side | Client-side JavaScript\
    \ |\n\n<blockquote>\n    <h3><span>❗️</span>Keep your access tokens and SDK keys\
    \ private</h3>\n    <p>Access tokens should *never* be exposed in untrusted contexts.\
    \ Never put an access token in client-side JavaScript, or embed it in a mobile\
    \ application. LaunchDarkly has special mobile keys that you can embed in mobile\
    \ apps. If you accidentally expose an access token or SDK key, you can reset it\
    \ from your [Account Settings](https://app.launchdarkly.com/settings#/tokens)\
    \ page.</p>\n    <p>The client-side ID is safe to embed in untrusted contexts.\
    \ It's designed for use in client-side JavaScript.</p>\n</blockquote>\n\n## Via\
    \ request header\n\nThe preferred way to authenticate with the API is by adding\
    \ an `Authorization` header containing your access token to your requests. The\
    \ value of the `Authorization` header must be your access token.\n\nManage personal\
    \ access tokens from the [Account Settings](https://app.launchdarkly.com/settings/tokens)\
    \ page.\n\n## Via session cookie\n\nFor testing purposes, you can make API calls\
    \ directly from your web browser. If you're logged in to the application, the\
    \ API will use your existing session to authenticate calls.\n\nIf you have a [role](https://docs.launchdarkly.com/home/team/built-in-roles)\
    \ other than Admin, or have a [custom role](https://docs.launchdarkly.com/home/team/custom-roles)\
    \ defined, you may not have permission to perform some API calls. You will receive\
    \ a `401` response code in that case.\n\n<blockquote>\n    <h3><span>❗️</span>Modifying\
    \ the Origin header causes an error</h3>\n    <p>We validate that the Origin header\
    \ for any API request authenticated by a session cookie matches the expected Origin\
    \ header. The expected Origin header is `https://app.launchdarkly.com`.</p>\n\
    \    <p>If the Origin header does not match what's expected, LaunchDarkly returns\
    \ an error. This error can prevent the LaunchDarkly app from working correctly.\
    \ </p>\n    <p>Any browser extension that intentionally changes the Origin header\
    \ can cause this problem. For example, the `Allow-Control-Allow-Origin: *` Chrome\
    \ extension changes the Origin header to http://evil.com and causes the app to\
    \ fail.</p>\n    <p>To prevent this error, do not modify your Origin header.</p>\n\
    \    <p>LaunchDarkly does not require origin matching when authenticating with\
    \ an Access Token, so this issue does not affect normal API usage.</p>\n</blockquote>\n\
    \n# Representations\n\nAll resources expect and return JSON response bodies. Error\
    \ responses will also send a JSON body. Read [Errors](#section/Errors) for a more\
    \ detailed description of the error format used by the API. \n\nIn practice this\
    \ means that you always get a response with a `Content-Type` header set to `application/json`.\n\
    \nIn addition, request bodies for `PUT`, `POST`, `REPORT` and `PATCH` requests\
    \ must be encoded as JSON with a `Content-Type` header set to `application/json`.\n\
    \n## Summary and detailed representations\n\nWhen you fetch a list of resources,\
    \ the response includes only the most important attributes of each resource. This\
    \ is a *summary representation* of the resource. When you fetch an individual\
    \ resource (for example, a single feature flag), you receive a *detailed representation*\
    \ containing all of the attributes of the resource.\n\nThe best way to find a\
    \ detailed representation is to follow links. Every summary representation includes\
    \ a link to its detailed representation.\n\n## Links and addressability\n\nThe\
    \ best way to navigate the API is by following links. These are attributes in\
    \ representations that link to other resources. The API always uses the same format\
    \ for links:\n\n* Links to other resources within the API are encapsulated in\
    \ a `_links` object.\n* If the resource has a corresponding link to HTML content\
    \ on the site, it is stored in a special `_site` link.\n\nEach link has two attributes:\
    \ an href (the URL) and a type (the content type). For example, a feature resource\
    \ might return the following:\n\n```json\n{\n    \"_links\": {\n        \"parent\"\
    : {\n            \"href\": \"/api/features\",\n            \"type\": \"application/json\"\
    \n        },\n        \"self\": {\n            \"href\":\"/api/features/sort.order\"\
    ,\n            \"type\":\"application/json\"\n        }\n    },\n    \"_site\"\
    :{\n        \"href\":\"/features/sort.order\",\n        \"type\":\"text/html\"\
    \n    }\n}\n```\n\nFrom this, you can navigate to the parent collection of features\
    \ by following the `parent` link, or navigate to the site page for the feature\
    \ by following the `_site` link.\n\nCollections are always represented as a JSON\
    \ object with an `items` attribute containing an array of representations. Like\
    \ all other representations, collections have `_links` defined at the top level.\n\
    \nPaginated collections include `first`, `last`, `next`, and `prev` links containing\
    \ a URL with the respective set of elements in the collection.\n\n# Updates\n\n\
    Resources that accept partial updates use the `PATCH` verb, and support the [JSON\
    \ Patch](http://tools.ietf.org/html/rfc6902) format. Some resources also support\
    \ the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) format. In addition,\
    \ some resources support optional comments that can be submitted with updates.\
    \ Comments appear in outgoing webhooks, the audit log, and other integrations.\n\
    \n## Updates via JSON Patch\n\n[JSON Patch](http://tools.ietf.org/html/rfc6902)\
    \ is a way to specify the modifications to perform on a resource. For example,\
    \ in this feature flag representation:\n\n```json\n{\n    \"name\": \"New recommendations\
    \ engine\",\n    \"key\": \"engine.enable\",\n    \"description\": \"This is the\
    \ description\",\n    ...\n}\n```\n\nYou can change the feature flag's description\
    \ with the following patch document:\n\n```json\n[\n    { \"op\": \"replace\"\
    , \"path\": \"/description\", \"value\": \"This is the new description\"}\n]\n\
    ```\n\nJSON Patch documents are always arrays. You can specify multiple modifications\
    \ to perform in a single request. You can also test that certain preconditions\
    \ are met before applying the patch:\n\n```json\n[\n    { \"op\": \"test\", \"\
    path\": \"/version\", \"value\": 10 },\n    { \"op\": \"replace\", \"path\": \"\
    /description\", \"value\": \"The new description\" }\n]\n```\n\nThe above patch\
    \ request tests whether the feature flag's `version` is `10`, and if so, changes\
    \ the feature flag's description.\n\nAttributes that aren't editable, like a resource's\
    \ `_links`, have names that start with an underscore.\n\n## Updates via JSON Merge\
    \ Patch\n\nThe API also supports the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386)\
    \ format, as well as the [Update feature flag](#operation/patchFeatureFlag) resource.\
    \ \n\nJSON Merge Patch is less expressive than JSON Patch but in many cases, it\
    \ is simpler to construct a merge patch document. For example, you can change\
    \ a feature flag's description with the following merge patch document:\n\n```json\n\
    {\n    \"description\": \"New flag description\"\n}\n```\n\n## Updates with comments\n\
    \nYou can submit optional comments with `PATCH` changes. The [Update feature flag](#operation/patchFeatureFlag)\
    \ resource supports comments.\n\nTo submit a comment along with a JSON Patch document,\
    \ use the following format:\n\n```json\n{\n    \"comment\": \"This is a comment\
    \ string\",\n    \"patch\": [ {\"op\": \"replace\", \"path\": \"/description\"\
    , \"value\": \"The new description\" } ]\n}\n```\n\nTo submit a comment along\
    \ with a JSON Merge Patch document, use the following format:\n\n```json\n{\n\
    \    \"comment\": \"This is a comment string\",\n    \"merge\": { \"description\"\
    : \"New flag description\"}\n}\n```\n\n## Updates via semantic patches\n\nThe\
    \ API also supports the Semantic patch format. A semantic `PATCH` is a way to\
    \ specify the modifications to perform on a resource as a set of executable instructions.\
    \ \n\nJSON Patch uses paths and a limited set of operations to describe how to\
    \ transform the current state of the resource into a new state. Semantic patch\
    \ allows you to be explicit about intent using precise, custom instructions. In\
    \ many cases, semantic patch instructions can also be defined independently of\
    \ the current state of the resource. This can be useful when defining a change\
    \ that may be applied at a future date.\n\nFor example, in this feature flag configuration\
    \ in environment Production:\n\n```json\n{\n    \"name\": \"Alternate sort order\"\
    ,\n    \"kind\": \"boolean\",\n    \"key\": \"sort.order\",\n   ...\n    \"environments\"\
    : {\n        \"production\": {\n            \"on\": true,\n            \"archived\"\
    : false,\n            \"salt\": \"c29ydC5vcmRlcg==\",\n            \"sel\": \"\
    8de1085cb7354b0ab41c0e778376dfd3\",\n            \"lastModified\": 1469131558260,\n\
    \            \"version\": 81,\n            \"targets\": [\n                {\n\
    \                    \"values\": [\n                        \"Gerhard.Little@yahoo.com\"\
    \n                    ],\n                    \"variation\": 0\n             \
    \   },\n                {\n                    \"values\": [\n               \
    \         \"1461797806429-33-861961230\",\n                        \"438580d8-02ee-418d-9eec-0085cab2bdf0\"\
    \n                    ],\n                    \"variation\": 1\n             \
    \   }\n            ],\n            \"rules\": [],\n            \"fallthrough\"\
    : {\n                \"variation\": 0\n            },\n            \"offVariation\"\
    : 1,\n            \"prerequisites\": [],\n            \"_site\": {\n         \
    \       \"href\": \"/default/production/features/sort.order\",\n             \
    \   \"type\": \"text/html\"\n            }\n       }\n    }\n}\n```\n\nYou can\
    \ add a date you want a user to be removed from the feature flag's user targets.\
    \ For example, “remove user 1461797806429-33-861961230 from the user target for\
    \ variation 0 on the Alternate sort order flag in the production environment on\
    \ Wed Jul 08 2020 at 15:27:41 pm”. This is done using the following:\n\n```json\n\
    {\n    \"comment\": \"update expiring user targets\",\n    \"instructions\": [\n\
    \        {\n            \"kind\": \"removeExpireUserTargetDate\",\n          \
    \  \"userKey\": \"userKey\",\n            \"variationId\": \"978d53f9-7fe3-4a63-992d-97bcb4535dc8\"\
    ,\n        },\n        {\n            \"kind\": \"updateExpireUserTargetDate\"\
    ,\n            \"userKey\": \"userKey2\",\n            \"variationId\": \"978d53f9-7fe3-4a63-992d-97bcb4535dc8\"\
    ,\n            \"value\": 1587582000000\n        },\n        {\n            \"\
    kind\": \"addExpireUserTargetDate\",\n            \"userKey\": \"userKey3\",\n\
    \            \"variationId\": \"978d53f9-7fe3-4a63-992d-97bcb4535dc8\",\n    \
    \        \"value\": 1594247266386\n        }\n    ]\n}\n```\n\nHere is another\
    \ example. In this feature flag configuration:\n\n```json\n{\n    \"name\": \"\
    New recommendations engine\",\n    \"key\": \"engine.enable\",\n    \"environments\"\
    : {\n        \"test\": {\n            \"on\": true\n        }\n    }\n}\n```\n\
    \nYou can change the feature flag's description with the following patch document\
    \ as a set of executable instructions. For example, “add user X to targets for\
    \ variation Y and remove user A from targets for variation B for test flag”:\n\
    \n```json\n{\n    \"comment\": \"\",\n    \"instructions\": [\n        {\n   \
    \         \"kind\": \"removeUserTargets\",\n            \"values\": [\"438580d8-02ee-418d-9eec-0085cab2bdf0\"\
    ],\n            \"variationId\": \"852cb784-54ff-46b9-8c35-5498d2e4f270\"\n  \
    \      },\n        {\n            \"kind\": \"addUserTargets\",\n            \"\
    values\": [\"438580d8-02ee-418d-9eec-0085cab2bdf0\"],\n            \"variationId\"\
    : \"1bb18465-33b6-49aa-a3bd-eeb6650b33ad\"\n        }\n    ]\n}\n```\n\n<blockquote>\n\
    \    <h3><span>\U0001f4d8</span>Supported semantic patch API endpoints</h3>\n\
    \    <p>TODO: update these links</p>\n    <p><a href=\"#operation/patchFeatureFlag\"\
    >Update feature flag</a></p>\n    <p><a href=\"\">Update expiring user targets\
    \ on feature flag</a></p>\n    <p><a href=\"\">Update expiring user target for\
    \ flags</a></p>\n</blockquote>\n\n# Errors\n\nThe API always returns errors in\
    \ a common format. Here's an example:\n\n```json\n{\n    \"code\": \"invalid_request\"\
    ,\n    \"message\": \"A feature with that key already exists\",\n    \"id\": \"\
    30ce6058-87da-11e4-b116-123b93f75cba\"\n}\n```\n\nThe general class of error is\
    \ indicated by the `code`. The `message` is a human-readable explanation of what\
    \ went wrong. The `id` is a unique identifier. Use it when you're working with\
    \ LaunchDarkly support to debug a problem with a specific API call.\n\n## HTTP\
    \ Status - Error Response Codes\n\n| Code | Definition | Desc. | Possible Solution\
    \ |\n| ---- | ---------- | ----- | ----------------- |\n| 400  | Bad Request |\
    \ A request that fails may return this HTTP response code. | Ensure JSON syntax\
    \ in request body is correct. |\n| 401  | Unauthorized | User doesn't have permission\
    \ to an API call. | Ensure your SDK key is good. |\n| 403  | Forbidden | User\
    \ does not have permission for operation. | Ensure that the user or access token\
    \ has proper permissions set. |\n| 409  | Conflict | The API request could not\
    \ be completed because it conflicted with a concurrent API request. | Retry your\
    \ request. |\n| 429  | Too many requests | See [Rate limiting](ref:rate-limiting).\
    \ | Wait and try again later. |\n\n# CORS\n\nThe LaunchDarkly API supports Cross\
    \ Origin Resource Sharing (CORS) for AJAX requests from any origin. If an `Origin`\
    \ header is given in a request, it will be echoed as an explicitly allowed origin.\
    \ Otherwise, a wildcard is returned: `Access-Control-Allow-Origin: *`. For more\
    \ information on CORS, see the [CORS W3C Recommendation](http://www.w3.org/TR/cors).\
    \ Example CORS headers might look like:\n\n```http\nAccess-Control-Allow-Headers:\
    \ Accept, Content-Type, Content-Length, Accept-Encoding, Authorization\nAccess-Control-Allow-Methods:\
    \ OPTIONS, GET, DELETE, PATCH\nAccess-Control-Allow-Origin: *\nAccess-Control-Max-Age:\
    \ 300\n```\n\nYou can make authenticated CORS calls just as you would make same-origin\
    \ calls, using either [token or session-based authentication](#section/Authentication).\
    \ If you’re using session auth, you should set the `withCredentials` property\
    \ for your `xhr` request to `true`. You should never expose your access tokens\
    \ to untrusted users.\n\n# Rate limiting\n\nWe use several rate limiting strategies\
    \ to ensure the availability of our APIs. Rate-limited calls to our APIs will\
    \ return a `429` status code. Calls to our APIs will include headers indicating\
    \ the current rate limit status. The specific headers returned depend on the API\
    \ route being called-- the limits differ based on the route, authentication mechanism,\
    \ and other factors. Routes that are not rate limited may not contain any of the\
    \ headers described below.\n\n<blockquote>\n    <h3><span>❗️</span>Rate limiting\
    \ and SDKs</h3>\n    <p>Our SDKs are never rate limited. Our SDKs do not use the\
    \ API endpoints defined here. We use a different set of approaches, including\
    \ streaming/server-sent events and a global CDN, to ensure availability to the\
    \ routes used by our SDKs.</p>\n    <p>The client-side ID is safe to embed in\
    \ untrusted contexts. It's designed for use in client-side JavaScript.</p>\n</blockquote>\n\
    \n## Global rate limits\n\nAuthenticated requests are subject to a global limit.\
    \ This is the maximum number of calls that can be made to the API per ten seconds.\
    \ All personal access tokens on the account share this limit, so exceeding the\
    \ limit with one access token will impact other tokens. Calls that are subject\
    \ to global rate limits will return the headers below:\n\n| Header name | Description\
    \ |\n| ----------- | ----------- |\n| `X-Ratelimit-Global-Remaining` | The maximum\
    \ number of requests the account is permitted to make per ten seconds. |\n| `X-Ratelimit-Reset`\
    \ | The time at which the current rate limit window resets in epoch milliseconds.\
    \ |\n\nWe do not publicly document the specific number of calls that can be made\
    \ globally. This limit may change, and we encourage clients to program against\
    \ the specification, relying on the two headers defined above, rather than hardcoding\
    \ to the current limit.\n\n## Route-level rate limits\n\nSome authenticated routes\
    \ have custom rate limits. These also reset every ten seconds. Any access tokens\
    \ hitting the same route share this limit, so exceeding the limit with one access\
    \ token may impact other tokens. Calls that are subject to route-level rate limits\
    \ will return the headers below:\n\n| Header name | Description |\n| -----------\
    \ | ----------- |\n| `X-Ratelimit-Route-Remaining` | The maximum number of requests\
    \ to the current route the account is permitted to make per ten seconds. |\n|\
    \ `X-Ratelimit-Reset` | The time at which the current rate limit window resets\
    \ in epoch milliseconds. |\n\nA *route* represents a specific URL pattern and\
    \ verb. For example, the [Delete environment](#operation/deleteEnvironment) endpoint\
    \ is considered a single route, and each call to delete an environment counts\
    \ against your route-level rate limit for that route. \n\nWe do not publicly document\
    \ the specific number of calls that can be made to each endpoint per ten seconds.\
    \ These limits may change, and we encourage clients to program against the specification,\
    \ relying on the two headers defined above, rather than hardcoding to the current\
    \ limits.\n\n## IP-based rate limiting\n\nWe also employ IP-based rate limiting\
    \ on some API routes. If you hit an IP-based rate limit, your API response will\
    \ include a `Retry-After` header indicating how long to wait before re-trying\
    \ the call. Clients must wait at least `Retry-After` seconds before making additional\
    \ calls to our API, and should employ jitter and backoff strategies to avoid triggering\
    \ rate limits again.\n\n# OpenAPI (Swagger)\n\nWe have a [complete OpenAPI (Swagger)\
    \ specification](https://app.launchdarkly.com/api/v2/openapi.json) for our API.\n\
    \nYou can use this specification to generate client libraries to interact with\
    \ our REST API in your language of choice. \n\n# Client libraries\n\nWe auto-generate\
    \ multiple client libraries based on our OpenAPI specification. To learn more,\
    \ visit [GitHub](https://github.com/search?q=topic%3Alaunchdarkly-api+org%3Alaunchdarkly&type=Repositories).\n\
    \n# Method Overriding\n\nSome firewalls and HTTP clients restrict the use of verbs\
    \ other than `GET` and `POST`. In those environments, our API endpoints that use\
    \ `PUT`, `PATCH`, and `DELETE` verbs will be inaccessible.\n\nTo avoid this issue,\
    \ our API supports the `X-HTTP-Method-Override` header, allowing clients to \"\
    tunnel\" `PUT`, `PATCH`, and `DELETE` requests via a `POST` request. \n\nFor example,\
    \ if you wish to call one of our `PATCH` resources via a `POST` request, you can\
    \ include `X-HTTP-Method-Override:PATCH` as a header.\n\n# Beta resources\n\n\
    We sometimes release new API resources in **beta** status before we release them\
    \ with general availability. \n\nResources that are in beta are still undergoing\
    \ testing and development. They may change without notice, including becoming\
    \ backwards incompatible. \n\nWe try to promote resources into general availability\
    \ as quickly as possible. This happens after sufficient testing and when we're\
    \ satisfied that we no longer need to make backwards-incompatible changes.\n\n\
    We mark beta resources with a \"Beta\" callout in our documentation, pictured\
    \ below:\n<blockquote>\n    <h3><span>\U0001f4d8</span>Beta</h3>\n    <p>**This\
    \ feature is in beta.** You must include a specific header to use it.\\n\\nTo\
    \ learn more, read [Beta resources](ref:beta-resources).</p>\n</blockquote>\n\n\
    ## Using beta resources\n\nTo use a beta resource, you must include a header in\
    \ the request. If you call a beta resource without this header, you'll receive\
    \ a `403` response.\n\nUse this header: \n\n```\nLD-API-Version: beta\n```\n\n\
    # Versioning\n\nWe try hard to keep our REST API backwards compatible, but we\
    \ occasionally have to make backwards-incompatible changes in the process of shipping\
    \ new features. These breaking changes can cause unexpected behavior if you don't\
    \ prepare for them accordingly. \n\nUpdates to our REST API include support for\
    \ the latest features in LaunchDarkly. We also release a new version of our REST\
    \ API every time we make a breaking change. We provide simultaneous support for\
    \ multiple API versions so you can migrate from your current API version to a\
    \ new version at your own pace. \n\nSee new versions in the [Changelog](ref:changelog).\n\
    \n## Setting the API version per request\n\nYou can set the API version on a specific\
    \ request by sending an `LD-API-Version` header, as shown in the example below:\n\
    \n```\nLD-API-Version: 20191212\n```\n\nThe header value is the version number\
    \ of the API version you'd like to request. The number for each version corresponds\
    \ to the date the version was released. In the example above the version `20191212`\
    \ corresponds to December 12, 2019. \n\n## Setting the API version per access\
    \ token\n\nWhen creating an access token, you must specify a specific version\
    \ of the API to use. This ensures that integrations using this token cannot be\
    \ broken by version changes.\n\nTokens created before versioning was released\
    \ have their version set to `20160426` (the version of the API that existed before\
    \ versioning) so that they continue working the same way they did before versioning.\n\
    \nIf you would like to upgrade your integration to use a new API version, you\
    \ can explicitly set the header described above.\n\n<blockquote>\n    <h3><span>\U0001f44d\
    </span>Best practice: Set the header for every client or integration</h3>\n  \
    \  <p>We recommend that you set the API version header explicitly in any client\
    \ or integration you build.</p>\n    <p>Only rely on the access token API version\
    \ during manual testing.</p>\n</blockquote>\n\n<blockquote>\n    <h3><span>\U0001f6a7\
    </span>API Path Versioning</h3>\n    <p>In the past, we've used path-based API\
    \ versioning. For example, versioning resources by adding `v2` to endpoint URLs.\
    \ We don't foresee the need to do this again, but may do so if we need to make\
    \ major revisions to the API.</p>\n</blockquote>\n"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: LaunchDarkly REST API
  version: "2.0"
servers:
- url: https://app.launchdarkly.com
security:
- ApiKey:
  - read
  - write
tags:
- description: "The access tokens API allows you to list, create, modify, and delete\
    \ access tokens programmatically. \n\nWhen using access tokens to manage access\
    \ tokens, the following restrictions apply:\n- Personal tokens can see all service\
    \ tokens and other personal tokens created by the same team member. If the personal\
    \ token has the \"Admin\" role, it may also see other member's personal tokens.\
    \ To learn more, read [Personal tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens#personal-tokens).\n\
    - Service tokens can see all service tokens. If the token has the \"Admin\" role,\
    \ it may also see all personal tokens. To learn more, read  [Service tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens).\n\
    - Tokens can only manage other tokens, including themselves, if they have \"Admin\"\
    \ role or explicit permission via a custom role. To learn more, read [Personal\
    \ access token actions](https://docs.launchdarkly.com/home/team/role-actions#personal-access-token-actions).\n\
    \nTo learn more about access tokens, read [API access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens).\n"
  name: Access tokens
- description: |
    You may create an approval request for updating a flag and request approval from a team member before applying the changes. You may to select up to ten reviewers to be notified via email, however, anyone with the sufficient permissions can review a pending approval request. At least one approval is needed to allow the changes to be applied.

    Change instructions that are in a conflict state will fail if approved and applied, and the flag will not be updated.
  name: Approvals
- description: The audit log contains a record of all the changes made to any resource
    in the system. You can filter the audit log by timestamps, or use a custom policy
    to select which entries to receive.
  name: Audit log
- description: |
    <blockquote>
        <h3><span>🚧</span>Use ld-find-code-refs</h3>
        <p>LaunchDarkly provides the [`ld-find-code-refs` utility](https://github.com/launchdarkly/ld-find-code-refs) that creates repository connections, generates code reference data, and creates calls to the code references API. Most customers do not need to call this API directly.</p>
    </blockquote>

    The [code references](https://docs.launchdarkly.com/home/code/code-references) API provides access to all resources related to connected repository, and associated feature flag code reference data for all branches.
  name: Code references
- description: "<blockquote>\n    <h3><span>\U0001f4d8</span>Custom roles is an Enterprise\
    \ feature</h3>\n    <p>Custom roles is available to customers on an Enterprise\
    \ plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/).\
    \ To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).</p>\n\
    </blockquote>\n\nCustom roles allow you to create flexible policies providing\
    \ fine-grained access control to everything in LaunchDarkly, from feature flags\
    \ to goals, environments and teams. With custom roles, it's possible to enforce\
    \ access policies that meet your exact workflow needs. \n\nThe custom roles API\
    \ allows you to create, update and delete custom roles. You can also use the API\
    \ to list all of your custom roles or get a custom role by ID.\n\nFor more information\
    \ about custom roles and the syntax for custom role policies, read the product\
    \ documentation for [Custom roles](https://docs.launchdarkly.com/docs/custom-roles).\n"
  name: Custom roles
- description: "<blockquote>\n    <h3><span>\U0001f4d8</span>Data Export is an add-on\
    \ feature</h3>\n    <p>Data Export is available as an add-on for customers on\
    \ an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/).\
    \ To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).</p>\n\
    </blockquote>\n\nData Export provides a real-time export of raw analytics data,\
    \ including feature flag requests, analytics events, custom events, and more.\
    \ \n\n_Data Export Destinations_ are locations that receive exported data. The\
    \ Data Export Destinations API allows you to configure destinations so that your\
    \ data can be exported.\n\nTo learn more, read [Data Export](https://docs.launchdarkly.com/docs/data-export).\n"
  name: Data export destinations
- description: |
    Environments allow you to maintain separate rollout rules in different contexts, from local development to QA, staging, and production. With the LaunchDarkly Environments API, you can programmatically create, delete, and update environments.
  name: Environments
- description: |
    An experiment is a running tally of user behaviors based on which variation of a feature flag they receive. In LaunchDarkly, an experiment requires two things: a metric that defines what user behaviors to track, and at least one flag associated with that metric.

    Experiments are largely managed via PATCH requests to the Flags API. There are also dedicated API resources for getting and deleting experiment data.
  name: Experiments
- description: |
    ## Anatomy of a feature flag

    The feature flag API allows you to control percentage rollouts, target specific users, or even toggle off a feature programmatically. By looking at the representation of a feature flag, we can see how to do any of these tasks.

    ## Sample feature flag representation

    Every feature flag has a set of top-level attributes, as well as an `environments` map containing the flag rollout and targeting rules specific to each environment. Top-level attributes include things like the flag's name, description, tags, and creation date.

    For reference, here's a complete feature flag representation. Below we break this down and explain each attribute in detail.

    ```json
    {
      "name": "Alternate product page",
      "kind": "boolean",
      "description": "This is a description",
      "key": "alternate.page",
      "creationDate": 1418684722483,
      "includeInSnippet": true,
      "variations": [
        {
          "value": true,
          "name": "true"
        },
        {
          "value": false,
          "name": "false"
        }
      ],
      "defaults": {
        "onVariation": 0,
        "offVariation": 1
      },
      "temporary": false,
      "tags": ["ops", "experiments"],
      "_links": {
        "parent": {
          "href": "/api/v2/flags/default",
          "type": "application/json"
        },
        "self": {
          "href": "/api/v2/flags/default/alternate.page",
          "type": "application/json"
        }
      },
      "maintainerId": "548f6741c1efad40031b18ae",
      "_maintainer": {
        "_links": {
          "parent": {
            "href": "/internal/account/members",
            "type": "application/json"
          },
          "self": {
            "href": "/internal/account/members/548f6741c1efad40031b18ae",
            "type": "application/json"
          }
        },
        "_id": "548f6741c1efad40031b18ae",
        "firstName": "Reese",
        "lastName": "App",
        "role": "owner",
        "email": "refapp@launchdarkly.com",
        "_pendingInvite": false,
        "isBeta": false,
        "customRoles": []
      },
      "goalIds": [],
      "environments": {
        "production": {
          "on": true,
          "archived": false,
          "salt": "YWx0ZXJuYXRlLnBhZ2U=",
          "sel": "45501b9314dc4641841af774cb038b96",
          "lastModified": 1469326565348,
          "version": 61,
          "targets": [
            {
              "values": ["1461797806427-7-115540266"],
              "variation": 0
            },
            {
              "values": ["Gerhard.Little@yahoo.com"],
              "variation": 1
            }
          ],
          "rules": [
            {
              "variation": 0,
              "clauses": [
                {
                  "attribute": "groups",
                  "op": "in",
                  "values": ["Top Customers"],
                  "negate": false
                },
                {
                  "attribute": "email",
                  "op": "endsWith",
                  "values": ["gmail.com"],
                  "negate": false
                }
              ]
            }
          ],
          "fallthrough": {
            "rollout": {
              "variations": [
                {
                  "variation": 0,
                  "weight": 60000
                },
                {
                  "variation": 1,
                  "weight": 40000
                }
              ]
            }
          },
          "offVariation": 1,
          "prerequisites": [],
          "_site": {
            "href": "/default/production/features/alternate.page",
            "type": "text/html"
          }
        },
        "test": {
          "on": true,
          "archived": false,
          "salt": "YWx0ZXJuYXRlLnBhZ2U=",
          "sel": "76c63094d35949bb9dc9bd5c570bacf5",
          "lastModified": 1455145480896,
          "version": 37,
          "targets": [
            {
              "values": [],
              "variation": 0
            },
            {
              "values": [],
              "variation": 1
            }
          ],
          "rules": [],
          "fallthrough": {
            "rollout": {
              "variations": [
                {
                  "variation": 0,
                  "weight": 49000
                },
                {
                  "variation": 1,
                  "weight": 51000
                }
              ]
            }
          },
          "prerequisites": [],
          "_site": {
            "href": "/default/tester/features/alternate.page",
            "type": "text/html"
          }
        }
      }
    }
    ```

    ## Top-level attributes

    Most of the top-level attributes have a straightforward interpretation. For example, to change the name of a feature, [update the feature flag](#operation/patchFeatureFlag) with the `name` attribute set to the new name:

    ```json
    [
        { "op": "replace", "path": "/name", "value": "New name" }
    ]
    ```

    The `variations` array represents the different variation values that a feature flag has. For a boolean flag, there are two variations: `true` and `false`. Multivariate flags have more variation values, and those values could be any JSON type: numbers, strings, objects, or arrays. In targeting rules, the variations are referred to by their index into this array. Below are some specific examples.

    ## Per-environment configurations

    Each entry in the `environments` map contains a JSON object that represents the environment-specific flag configuration data that you see on the [Targeting](https://docs.launchdarkly.com/home/flags/targeting-users) tab of your Manage Feature page. For example, to toggle off a feature flag in your production environment, use the following JSON patch operation:

    ```json
    [
        { "op": "replace", "path": "/environments/production/on", "value": false }
    ]
    ```

    Each section of the Targeting tab corresponds to a different attribute of the per-environment configuration data, as shown here:

    ## Individual user targets

    The `targets` array in the per-environment configuration data represents the individual user targeting rules on the Targeting tab. Each object in the `targets` array represents a list of user keys assigned to a particular variation. For example:

    ```json
    {
        ...
        "environments" : {
            "production" : {
                ...
                "targets": [
                    {
                        "values": ["foo@example.com"],
                        "variation: 0
                    }
                ]
            }
        }
    }
    ```

    This `targets` array here means that user `foo@example.com` receives the first variation listed in the `variations` array. Recall that the variations are stored at the top level of the flag JSON in an array, and the per-environment configuration rules point to indexes into this array. If this is a boolean flag, `foo@example.com` is receiving the `true` variation.

    ## Targeting rules

    The `rules` array corresponds to the custom targeting rules section of the Targeting tab. This is where you can express complex rules on attributes with conditions and operators. For example, a rule like "roll out the `true` variation to 80% of users whose email address ends with `gmail.com` could be expressed here.

    ## The fallthrough rule

    The `fallthrough` object is a special rule that contains no conditions. It is the rollout strategy that is applied when none of the individual or custom targeting rules match.

    ## The off variation

    The off variation represents the variation to serve if the feature flag is turned off, meaning the `on` attribute is `false`. For boolean flags, this is usually `false`. For multivariate flags, set the off variation to whatever variation represents the control or baseline behavior for your application. If you don't set the off variation, LaunchDarkly will serve the fallback value defined in your code.

    ## Percentage rollouts

    The `weight` attribute defines the percentage rollout for each variation. Weights range from 0 (a 0% rollout) to 100000 (a 100% rollout). The weights are scaled by a factor of 1000 so that fractions of a percent can be represented without using floating-point. For example, a weight of `50000` means that 50% of users that don't otherwise match any `targets` will see that variation. The sum of weights across all variations should be 100%.
  name: Feature flags
- description: |-
    <blockquote>
        <h3><span>📘</span>This feature is currently in beta</h3>
        <p>To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call.</p>
    </blockquote>

    Metrics track flag behavior over time when an experiment is running. The data generated from experiments gives you more insight into the impact of a particular flag.

    Using the Metrics API, you can create, delete, and manage metrics.
  name: Metrics
- description: "Projects allow you to manage multiple different software projects\
    \ under one LaunchDarkly account. Each project has its own unique set of environments\
    \ and feature flags. \n\nUsing the Projects API, you can create, destroy, and\
    \ manage projects."
  name: Projects
- description: |
    Schedule the specified flag targeting changes to take effect at the selected time. You may schedule multiple changes for a flag each with a different `ExecutionDate`.

    The supported flag actions include enabling/disabling targeting, changing the default rule, and changing the `off` variation. If you include unsupported actions as part of your scheduled changes, they will be discarded.
  name: Scheduled changes
- description: |-
    Segments allow you to create targeting rules and lists of users that can be shared by one or more feature flags in an environment. Creating a segment is a lot like creating a flag. You can include individual users from a segment. You can also create targeting rules, same as those for flags, that include or exclude users based on attributes your application has provided about those users. Finally, you can explicitly exclude users that would otherwise be included by those rules.

    The segments API allows you to list, create, modify, and delete segments programmatically.
  name: Segments
- description: |-
    The Team Members API allows you to invite new members to a team by making a POST request to /api/v2/members.  When you invite a new member to a team, an invitation will be sent to the email you have provided.  Members with "admin" or "owner" roles may create new members, as well as anyone with a "createMember" permission for "member/*".

    Any member may request the complete list of team members with a GET to /api/v2/members.
  name: Team members
- description: |-
    LaunchDarkly creates a record for each user passed in to `variation` calls. This record powers the autocomplete functionality on the Feature Flag management page, as well as the Users page.

    LaunchDarkly also offers an API that lets you tap into this data. You can use the users API to see what user data is available to LaunchDarkly, as well as determine which flag values a user will receive. You can also explicitly set which flag value a user will receive via this API.

    Users are always scoped within a project and environment. In other words, each environment has its own set of user records.
  name: Users
- description: |-
    LaunchDarkly's User Settings API provides a picture of all feature flags and their current values for a specific user. This gives you instant visibility of how a particular user is experiencing your site or application.

    The User Settings API can also be used to assign a user to a specific variation for any feature flag.
  name: User settings
- name: Other
paths:
  /api/v2:
    get:
      description: ' Issue a `GET` request to the root resource to find all of the
        resource categories supported by the API'
      operationId: getRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/inline_response_200'
                type: object
          description: Root response
      summary: Root resource
      tags:
      - Other
  /api/v2/auditlog:
    get:
      description: ' Gets a list of all audit log entries. The query parameters let
        you restrict the results that return by date ranges, resource specifiers,
        or a full-text search query.'
      operationId: getAuditLogEntries
      parameters:
      - description: A timestamp filter, expressed as a Unix epoch time in milliseconds.  All
          entries this returns occurred before the timestamp.
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: A timestamp filter, expressed as a Unix epoch time in milliseconds.  All
            entries this returns occurred before the timestamp.
          format: int64
          type: integer
        style: form
      - description: A timestamp filter, expressed as a Unix epoch time in milliseconds.
          All entries this returns occurred after the timestamp.
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: A timestamp filter, expressed as a Unix epoch time in milliseconds.
            All entries this returns occurred after the timestamp.
          format: int64
          type: integer
        style: form
      - description: Text to search for. You can search for the full or partial name
          of the resource, or full or partial email address of the member who made
          a change.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Text to search for. You can search for the full or partial
            name of the resource, or full or partial email address of the member who
            made a change.
          format: string
          type: string
        style: form
      - description: A limit on the number of audit log entries that return. Set between
          1 and 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: A limit on the number of audit log entries that return. Set
            between 1 and 20.
          format: int64
          type: integer
        style: form
      - description: A resource specifier that lets you filter audit log listings
          by resource
        explode: true
        in: query
        name: spec
        required: false
        schema:
          description: A resource specifier that lets you filter audit log listings
            by resource
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntryListingRepCollection'
          description: Audit log entries response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: List audit log feature flag entries
      tags:
      - Audit log
  /api/v2/auditlog/{resourceId}:
    get:
      description: ' Fetches a detailed audit log entry representation'
      operationId: getAuditLogEntry
      parameters:
      - description: The ID of the audit log entry
        explode: false
        in: path
        name: resourceId
        required: true
        schema:
          description: The ID of the audit log entry
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntryRep'
          description: Audit log entry response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get audit log entry
      tags:
      - Audit log
  /api/v2/code-refs/extinctions:
    get:
      description: ' Gets a list of all extinctions'
      operationId: getExtinctions
      parameters:
      - description: Filter results to a specific repository
        explode: true
        in: query
        name: repoName
        required: false
        schema:
          description: Filter results to a specific repository
          format: string
          type: string
        style: form
      - description: Filter results to a specific branch
        explode: true
        in: query
        name: branchName
        required: false
        schema:
          description: Filter results to a specific branch
          format: string
          type: string
        style: form
      - description: Filter results to a specific project
        explode: true
        in: query
        name: projKey
        required: false
        schema:
          description: Filter results to a specific project
          format: string
          type: string
        style: form
      - description: Filter results to a specific flag key
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: Filter results to a specific flag key
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ExtinctionCollectionRep'
          description: Branch response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: List extinctions
      tags:
      - Code references
  /api/v2/code-refs/repositories:
    get:
      description: ' Retrieves a complete list of connected repositories. Optionally,
        you can include branch metadata with the `withBranches` query parameter. Embed
        references for the default branch with `ReferencesForDefaultBranch`. You can
        also filter the list of code references by project key and flag key.'
      operationId: getRepositories
      parameters:
      - description: If set to any value, the endpoint returns repositories with associated
          branch data
        explode: true
        in: query
        name: withBranches
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data
          format: string
          type: string
        style: form
      - description: If set to any value, the endpoint returns repositories with associated
          branch data, as well as code references for the default git branch
        explode: true
        in: query
        name: withReferencesForDefaultBranch
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data, as well as code references for the default git
            branch
          format: string
          type: string
        style: form
      - description: A LaunchDarkly project key. If provided, this filters code reference
          results to the specified project.
        explode: true
        in: query
        name: projKey
        required: false
        schema:
          description: A LaunchDarkly project key. If provided, this filters code
            reference results to the specified project.
          format: string
          type: string
        style: form
      - description: If set to any value, the endpoint returns repositories with associated
          branch data, as well as code references for the default git branch
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data, as well as code references for the default git
            branch
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RepositoryCollectionRep'
          description: Repository collection response
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: List repositories
      tags:
      - Code references
    post:
      description: ' Creates a repository with the specified name'
      operationId: postRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.repositoryPost'
        required: true
      responses:
        "200":
          description: Repository response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "429":
          description: Rate limited
      summary: Create repository
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}:
    delete:
      description: ' Delete a repository with the specified name'
      operationId: deleteRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Delete repository
      tags:
      - Code references
    get:
      description: ' Gets a single repository by name. You can also filter the list
        of code references by project key and flag key.'
      operationId: getRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RepositoryRep'
          description: Repository response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get repository
      tags:
      - Code references
    patch:
      description: ' Updates a repository''s settings. The request must be a valid
        JSON Patch document describing the changes to be made to the repository.'
      operationId: patchRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RepositoryRep'
          description: Repository response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Update repository
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branch-delete-tasks:
    post:
      description: ' Asynchronously deletes a number of branches'
      operationId: deleteBranches
      parameters:
      - description: The repo name to delete branches for.
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repo name to delete branches for.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete branches
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branches:
    get:
      description: ' Gets a list of branches'
      operationId: getBranches
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BranchCollectionRep'
          description: Branch collection response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: List branches
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branches/{branch}:
    get:
      description: ' Gets a specific branch in a repository'
      operationId: getBranch
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      - description: Filter results to a specific project
        explode: true
        in: query
        name: projKey
        required: false
        schema:
          description: Filter results to a specific project
          format: string
          type: string
        style: form
      - description: Filter results to a specific flag key
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: Filter results to a specific flag key
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BranchRep'
          description: Branch response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get branch
      tags:
      - Code references
    post:
      description: ' Create a new extinction'
      operationId: postExtinction
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/InlineObject'
              type: array
        required: true
      responses:
        "200":
          description: Extinction response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Post extinction
      tags:
      - Code references
    put:
      description: ' Creates a new branch if it doesn''t exist, or updates the branch
        if it already exists'
      operationId: putBranch
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/coderefs.Branch'
        required: true
      responses:
        "200":
          description: Branch response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Upsert branch
      tags:
      - Code references
  /api/v2/code-refs/statistics:
    get:
      description: ' Retrieves links for all projects that have Code References.'
      operationId: getRootStatistic
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.StatisticsRoot'
          description: Statistic root response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get number of code references for flags
      tags:
      - Code references
  /api/v2/code-refs/statistics/{projKey}:
    get:
      description: ' Gets the number of code references across repositories for all
        flags in your project that have code references in the default branch (for
        example: master). You can optionally include the `flagKey` query parameter
        to get the number of code references across repositories for a single flag.
        This endpoint returns the number of times your flag keys are referenced in
        your repositories. You can filter to a single flag with by passing in a flag
        key.'
      operationId: getStatistics
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: The feature flag key
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.StatisticCollectionRep'
          description: Statistic collection response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get number of code references for flags
      tags:
      - Code references
  /api/v2/destinations:
    get:
      description: ' Gets a list of Data Export destinations configured across all
        projects and environments.'
      operationId: getDestinations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationCollectionRep'
          description: Destination collection response
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: List destinations
      tags:
      - Data export destinations
  /api/v2/destinations/{projKey}/{envKey}:
    post:
      description: ' Creates a new destination. The `config` body parameter represents
        the configuration parameters required for a destination type.'
      operationId: postDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationPostRep'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRep'
          description: Destination response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create data export destination
      tags:
      - Data export destinations
  /api/v2/destinations/{projKey}/{envKey}/{id}:
    delete:
      description: ' Deletes Data Export destination by ID'
      operationId: deleteDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The data export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The data export destination ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Destination response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Delete Data Export destination
      tags:
      - Data export destinations
    get:
      description: ' Gets a single Data Export destination by ID'
      operationId: getDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The Data Export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Data Export destination ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRep'
          description: Destination response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get destination
      tags:
      - Data export destinations
    patch:
      description: ' Updates a Data Export destination. This requires a JSON Patch
        representation of the modified destination.'
      operationId: patchDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The Data Export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Data Export destination ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRep'
          description: Destination response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update Data Export destination
      tags:
      - Data export destinations
  /api/v2/flag-status/{projKey}/{key}:
    get:
      description: ' Get the status for a particular feature flag across environments.'
      operationId: getFeatureFlagStatusAcrossEnvironments
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: true
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStatusRepFromEnvSummaries'
          description: Flag status across environments response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get feature flag status
      tags:
      - Feature flags
  /api/v2/flag-statuses/{projKey}/{envKey}:
    get:
      description: ' Get a list of statuses for all feature flags. The status includes
        the last time the feature flag was requested, as well as the state of the
        flags.'
      operationId: getFeatureFlagStatuses
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStatusCollectionRep'
          description: Flag Statuses collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List feature flag statuses
      tags:
      - Feature flags
  /api/v2/flag-statuses/{projKey}/{envKey}/{key}:
    get:
      description: ' Get the status for a particular feature flag.'
      operationId: getFeatureFlagStatus
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStatusRep'
          description: Flag status response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List feature flag statuses
      tags:
      - Feature flags
  /api/v2/flags/{projKey}:
    get:
      description: ' Gets a list of all features in the given project. By default,
        each feature includes configurations for each environment. You can filter
        environments with the `env` query parameter. For example, setting `env=production`
        only returns configurations in the `production` environment. You can also
        filter feature flags by tag with the `tag` query parameter.'
      operationId: getFeatureFlags
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: false
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      - description: Filter feature flags by tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter feature flags by tag
          format: string
          type: string
        style: form
      - description: The number of feature flags to return. Defaults to -1, which
          returns all flags.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of feature flags to return. Defaults to -1, which
            returns all flags.
          format: int64
          type: integer
        style: form
      - description: Where to start in the list. Use this with pagination. For example,
          an offset of 10 skips the first 10 items and then returns the next limit
          items.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Where to start in the list. Use this with pagination. For example,
            an offset of 10 skips the first 10 items and then returns the next limit
            items.
          format: int64
          type: integer
        style: form
      - description: A string that matches against the flags' keys and names. It is
          not case sensitive.
        explode: true
        in: query
        name: query
        required: false
        schema:
          description: A string that matches against the flags' keys and names. It
            is not case sensitive.
          format: string
          type: string
        style: form
      - description: A boolean to filter the list to archived flags. When this is
          absent, only unarchived flags will be returned.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          description: A boolean to filter the list to archived flags. When this is
            absent, only unarchived flags will be returned.
          format: boolean
          type: boolean
        style: form
      - description: By default in api version >= 1, flags will _not_ include their
          list of prerequisites, targets or rules.  Set summary=0 to include these
          fields for each flag returned.
        explode: true
        in: query
        name: summary
        required: false
        schema:
          description: By default in api version >= 1, flags will _not_ include their
            list of prerequisites, targets or rules.  Set summary=0 to include these
            fields for each flag returned.
          format: boolean
          type: boolean
        style: form
      - description: A string that lets you filter by temporary or permanent flags.
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: A string that lets you filter by temporary or permanent flags.
          format: string
          type: string
        style: form
      - description: A boolean with values of `true` or `false`. It returns any flags
          that have an attached metric.
        explode: true
        in: query
        name: hasExperiment
        required: false
        schema:
          description: A boolean with values of `true` or `false`. It returns any
            flags that have an attached metric.
          format: boolean
          type: boolean
        style: form
      - description: A boolean with values of `true` or `false`. That returns any
          flags that are currently exporting data in the specified environment. This
          includes flags that are exporting data from experiments. This filter also
          requires a `filterEnv` field, set to a valid environment key. For example,
          `filter=hasExperiment:true,filterEnv:production`.
        explode: true
        in: query
        name: hasDataExport
        required: false
        schema:
          description: A boolean with values of `true` or `false`. That returns any
            flags that are currently exporting data in the specified environment.
            This includes flags that are exporting data from experiments. This filter
            also requires a `filterEnv` field, set to a valid environment key. For
            example, `filter=hasExperiment:true,filterEnv:production`.
          format: boolean
          type: boolean
        style: form
      - description: A string with the key of a valid environment. The `filterEnv`
          field is for filters that are environment specific. If there are multiple
          environment specific filters, only declare this parameter once. For example,
          `filter=evaluated:{
        explode: true
        in: query
        name: filterEnv
        required: false
        schema:
          description: A string with the key of a valid environment. The `filterEnv`
            field is for filters that are environment specific. If there are multiple
            environment specific filters, only declare this parameter once. For example,
            `filter=evaluated:{
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagCollectionRep'
          description: Global flags collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List feature flags
      tags:
      - Feature flags
    post:
      description: ' Creates a feature flag with the given name, key, and variations'
      operationId: postFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The key of the feature flag to be cloned. The key identifies
          the flag in your code. For example, setting `clone=flagKey` copies the full
          targeting configuration for all environments, including `on/off` state,
          from the original flag to the new flag.
        explode: true
        in: query
        name: clone
        required: false
        schema:
          description: The key of the feature flag to be cloned. The key identifies
            the flag in your code. For example, setting `clone=flagKey` copies the
            full targeting configuration for all environments, including `on/off`
            state, from the original flag to the new flag.
          format: string
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create a feature flag
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{envKey}/{flagKey}/dependent-flags:
    get:
      description: ' List dependent flags across all environments for the flag specified
        in the path parameters. A dependent flag is a flag that uses another flag
        as a prerequisite.'
      operationId: getDependentFlagsByEnv
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentFlagsCollectionRep'
          description: Dependent flags collection response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List dependent feature flags by environment
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{featureFlagKey}/copy:
    post:
      description: ' Copies the feature flag configuration from one environment and
        creates a feature flag with that configuration in another environment'
      operationId: copyFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/flags.FlagCopyConfigPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Copy feature flag
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{flagKey}/dependent-flags:
    get:
      description: ' List dependent flags across all environments for the flag specified
        in the path parameters. A dependent flag is a flag that uses another flag
        as a prerequisite.'
      operationId: getDependentFlags
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEnvDependentFlagsCollectionRep'
          description: Multi environment dependent flags collection response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List dependent feature flags
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{flagKey}/experiments/{envKey}/{metricKey}/results:
    delete:
      description: ' Resets all experiment results by deleting all existing data for
        an experiment'
      operationId: resetExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The metric's key
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          description: The metric's key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Experiment results reset successfully
        "403":
          description: Forbidden
        "404":
          description: Flag or metric not found
        "429":
          description: Rate limited
      summary: Reset experiment results
      tags:
      - Experiments
  /api/v2/flags/{projKey}/{key}:
    delete:
      description: ' Deletes a feature flag in all environments. Use with caution:
        only delete feature flags your application no longer uses.'
      operationId: deleteFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete flag by key
      tags:
      - Feature flags
    get:
      description: ' Gets a single feature flag by key. By default, this returns the
        configurations for all environments. You can filter environments with the
        `env` query parameter. For example, setting `env=production` restricts the
        returned configurations to just the `production` environment.'
      operationId: getFeatureFlag
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: false
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get feature flag
      tags:
      - Feature flags
    patch:
      description: ' Perform a partial update to a feature'
      operationId: patchFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update feature flag
      tags:
      - Feature flags
  /api/v2/integrations:
    get:
      description: ' Get a list of all configured audit log event integrations associated
        with this account.'
      operationId: getConfigurations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_1'
                type: array
          description: Successful integrations response
        "429":
          description: Rate limited
      summary: List integration configurations
      tags:
      - Integrations
  /api/v2/integrations/{integrationKey}:
    patch:
      description: ' Update a subscription integration.'
      operationId: updateSubscription
      parameters:
      - description: The integration key
        explode: false
        in: path
        name: integrationKey
        required: true
        schema:
          description: The integration key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSubscriptionRep'
          description: Successful
        "400":
          description: Invalid integration configuration
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Integration not found
        "409":
          description: Optimistic locking error
        "429":
          description: Rate limited
      summary: Update subscription
      tags:
      - Integrations
    post:
      description: ' Create an integration configuration.'
      operationId: createSubscription
      parameters:
      - description: The integration key
        explode: false
        in: path
        name: integrationKey
        required: true
        schema:
          description: The integration key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/integrations.subscriptionPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSubscriptionRep'
          description: Successful integration
        "400":
          description: Invalid configuration
        "404":
          description: Integration not found
        "429":
          description: Rate Limited
      summary: Create integration configuration
      tags:
      - Integrations
  /api/v2/integrations/{integrationKey}/{id}:
    delete:
      description: ' Delete a subscription integration.'
      operationId: deleteSubscription
      parameters:
      - description: The integration key
        explode: false
        in: path
        name: integrationKey
        required: true
        schema:
          description: The integration key
          format: string
          type: string
        style: simple
      - description: The subscription ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The subscription ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "404":
          description: Integration not found
      summary: Delete integration configuration
      tags:
      - Integrations
    get:
      description: ' Get a subscription integration by ID.'
      operationId: getIntegrationSubscriptionByID
      parameters:
      - description: The integration key
        explode: false
        in: path
        name: integrationKey
        required: true
        schema:
          description: The integration key
          format: string
          type: string
        style: simple
      - description: The subscription ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The subscription ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSubscriptionRepCollection'
          description: Successful integrations response
        "403":
          description: Forbidden
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate Limited
      summary: Get configured integration by ID
      tags:
      - Integrations
  /api/v2/members:
    post:
      description: ' Invite one or more new team members to join an account. Each
        member will be sent an invitation. Members with "admin" or "owner" roles may
        create new members, as well as anyone with a "createMember" permission for
        "member/*". If for some reason, a member cannot be invited, the entire request
        will be rejected and no members will be invited for that request.'
      operationId: postMembers
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/InlineObject_1'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberCollectionRep'
          description: Members response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Invite new members
      tags:
      - Team members
  /api/v2/members/{id}:
    delete:
      description: ' Delete a single team member by ID'
      operationId: deleteMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: '-'
      summary: Delete team member by ID
      tags:
      - Team members
    get:
      description: ' Fetch a single team member by ID'
      operationId: getMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRep'
          description: Member response JSON
      summary: Get team member by ID
      tags:
      - Team members
    patch:
      description: ' Modify a single team member by ID'
      operationId: patchMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRep'
          description: Member response JSON
      summary: Modify a team member by ID
      tags:
      - Team members
  /api/v2/metrics/{projectKey}:
    get:
      description: ' Get a list of all metrics for the specified project.'
      operationId: getMetrics
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricCollectionRep'
          description: Metrics response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
      summary: List metrics
      tags:
      - Metrics
    post:
      description: ' Create a new metric in the specified project. Note that the expected
        POST body differs depending on the specified kind property.'
      operationId: postMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metrics.MetricPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Successful metric response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource specifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create metric
      tags:
      - Metrics
  /api/v2/metrics/{projectKey}/{key}:
    delete:
      description: ' Delete a metric by key.'
      operationId: deleteMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete metric
      tags:
      - Metrics
    get:
      description: ' Get information for a single metric from the specific project.'
      operationId: getMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Metric response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get metric
      tags:
      - Metrics
    patch:
      description: ' Patch a environment by key.'
      operationId: patchMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Metric response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update metric
      tags:
      - Metrics
  /api/v2/openapi.json:
    get:
      description: ' The OpenAPI spec endpoint serves the latest version of the OpenAPI
        specification for LaunchDarkly''s API in json format.'
      operationId: getOpenapiSpec
      responses:
        "200":
          description: OpenAPI Spec
      summary: Gets the OpenAPI spec in json
      tags:
      - Other
  /api/v2/projects:
    get:
      description: ' Fetch all projects'
      operationId: getProjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCollectionRep'
          description: Project collection response JSON
        "401":
          description: Invalid access token
      summary: Get all projects
      tags:
      - Projects
    post:
      description: ' Create a new project with the given key and name'
      operationId: postProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRep'
          description: Successful project response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create project
      tags:
      - Projects
  /api/v2/projects/{projKey}/experiments:
    post:
      description: ' Creates a new experiment with the parameters you provide'
      operationId: postExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentSummaryRep'
          description: Successful experiment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create experiment
      tags:
      - Experiments
  /api/v2/projects/{projKey}/{flagKey}/experiments/{envKey}/{metricKey}:
    get:
      description: ' Gets detailed experiment result data'
      operationId: getExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      - description: A timestamp denoting the start of the data collection period,
          expressed as a Unix epoch time in milliseconds.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: A timestamp denoting the start of the data collection period,
            expressed as a Unix epoch time in milliseconds.
          format: int64
          type: integer
        style: form
      - description: A timestamp denoting the end of the data collection period, expressed
          as a Unix epoch time in milliseconds.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: A timestamp denoting the end of the data collection period,
            expressed as a Unix epoch time in milliseconds.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResultsRep'
          description: Experiment results response
        "400":
          description: Invalid request
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get experiment results
      tags:
      - Experiments
  /api/v2/projects/{projectKey}:
    delete:
      description: ' Delete a project by key. Caution: deleting a project will delete
        all associated environments and feature flags. You cannot delete the last
        project in an account.'
      operationId: deleteProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Unknown project key
        "429":
          description: Rate limited
      summary: Delete project by key
      tags:
      - Projects
    get:
      description: ' Fetch a single project by key.'
      operationId: getProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRep'
          description: Project response JSON
        "401":
          description: Invalid access token
        "404":
          description: Unknown project key
        "429":
          description: Rate limited
      summary: Get project by key
      tags:
      - Projects
    patch:
      description: ' Patch a project by key.'
      operationId: patchProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRep'
          description: Project response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Unknown project key
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Patch project by key
      tags:
      - Projects
  /api/v2/projects/{projectKey}/environments:
    post:
      description: ' Create a new environment with the given key and name'
      operationId: postEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentRep'
          description: Successful environment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create environment
      tags:
      - Environments
  /api/v2/projects/{projectKey}/environments/{environmentKey}:
    delete:
      description: ' Delete a environment by key.'
      operationId: deleteEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete environment by key
      tags:
      - Environments
    get:
      description: ' Fetch a single environment by key.'
      operationId: getEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentRep'
          description: Environment response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get environment by key
      tags:
      - Environments
    patch:
      description: ' Patch a environment by key.'
      operationId: patchEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentRep'
          description: Environment response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Patch environment by key
      tags:
      - Environments
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/copy/environments/{environmentKey}/approval-requests-flag-copy:
    post:
      description: ' Create an approval request to copy a feature flag''s configuration
        across environments.'
      operationId: postFlagCopyConfigApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.createCopyFlagConfigApprovalRequestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "429":
          description: Rate limited
      summary: Create approval request to copy flag configurations across environments
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests:
    get:
      description: ' Get all approval requests for a feature flag'
      operationId: getApprovals
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get all approval requests
      tags:
      - Approvals
    post:
      description: ' Create an approval request for a feature flag'
      operationId: postApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.createFlagConfigApprovalRequestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "429":
          description: Rate limited
      summary: Create approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}:
    delete:
      description: ' Delete an approval request for a feature flag'
      operationId: deleteApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete approval request
      tags:
      - Approvals
    get:
      description: ' Get a single approval request for a feature flag'
      operationId: getApproval
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/apply:
    post:
      description: ' Apply approval request by either approving or declining changes.'
      operationId: postApprovalRequestApplyRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.postApprovalRequestApplyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request apply response
        "400":
          description: Bad request
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Apply approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/reviews:
    post:
      description: ' Review approval request by either approving or declining changes.'
      operationId: postApprovalRequestReview
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.postApprovalRequestReviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request review response
        "400":
          description: Bad request
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Review approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes:
    get:
      description: ' Get a list of scheduled changes that will be applied to the feature
        flag.'
      operationId: getFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesCollectionRep'
          description: Scheduled changes collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
      summary: List scheduled changes
      tags:
      - Scheduled changes
    post:
      description: ' Create scheduled changes for a feature flag. If the ignoreConficts
        query parameter is false and the new instructions would conflict with the
        current state of the feature flag or any existing scheduled changes, the request
        will fail. If the parameter is true and there are conflicts, the request will
        succeed as normal.'
      operationId: postFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: Pass in true to error on conflicts with current flag state or
          existing scheduled changes
        explode: true
        in: query
        name: ignoreConflicts
        required: false
        schema:
          description: Pass in true to error on conflicts with current flag state
            or existing scheduled changes
          format: boolean
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.PostFlagScheduledChangesInput'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesRep'
          description: Successful scheduled changes response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create scheduled changes workflow
      tags:
      - Scheduled changes
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes-conflicts:
    post:
      description: ' Compare the proposed instructions with each other and the existing
        scheduled changes to find conflicts that would prevent the existing scheduled
        changes from executing correctly if the proposed instructions were saved.
        PLEASE NOTE that this requires the WebDAV REPORT method and not the POST method.'
      operationId: getFlagConfigScheduledChangesConflicts
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.ReportFlagScheduledChangesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.ConflictResponse'
          description: Conflicts response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List conflicts for proposed instructions
      tags:
      - Scheduled changes
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{id}:
    delete:
      description: ' Delete a scheduled changes workflow'
      operationId: deleteFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Delete scheduled changes workflow
      tags:
      - Scheduled changes
    get:
      description: ' Gets a scheduled change that will be applied to the feature flag
        by id.'
      operationId: getFeatureFlagScheduledChange
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesRep'
          description: Scheduled change response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get a scheduled change
      tags:
      - Scheduled changes
    patch:
      description: ' Update a scheduled change, overriding existing instructions with
        the new ones.'
      operationId: patchFlagConfigScheduledChange
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.FlagScheduledChangesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesRep'
          description: Successful scheduled changes response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update scheduled changes workflow
      tags:
      - Scheduled changes
  /api/v2/public-ip-list:
    get:
      description: ' The public IP endpoint provides a list of IP ranges the LaunchDarkly
        service uses. You can use this list to allow LaunchDarkly through your firewall.
        This endpoint returns a JSON object with two attributes: `addresses` and `outboundAddresses`.
        The `addresses` element contains the IP addresses LaunchDarkly''s service
        uses. The `outboundAddresses` element contains the IP addresses outgoing webhook
        notifications use. We post upcoming changes to this list in advance on our
        status page https://status.launchdarkly.com/.'
      operationId: getIps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api2.ipList'
          description: Public IP response
      summary: Gets the public IP list
      tags:
      - Other
  /api/v2/roles:
    get:
      description: ' Returns a complete list of custom roles. Custom roles let you
        create flexible policies providing fine-grained access control to everything
        in LaunchDarkly, from feature flags to goals, environments, and teams. With
        custom roles, it''s possible to enforce access policies that meet your exact
        workflow needs. Custom roles are available to customers on our enterprise
        plans. If you''re interested in learning more about our enterprise plans,
        contact sales@launchdarkly.com.'
      operationId: getCustomRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleCollectionRep'
          description: Custom roles collection response.
        "401":
          description: Invalid access token.
        "429":
          description: Rate limited
      summary: List custom roles
      tags:
      - Custom roles
    post:
      description: ' Creates a new custom role'
      operationId: postCustomRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roles.StatementPostList'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleRep'
          description: Custom role response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create custom role
      tags:
      - Custom roles
  /api/v2/roles/{key}:
    delete:
      description: ' Deletes a custom role by key'
      operationId: deleteCustomRole
      parameters:
      - description: The key of the custom role to delete
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom role to delete
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Delete custom role
      tags:
      - Custom roles
    get:
      description: ' Gets a single custom role by key'
      operationId: getCustomRole
      parameters:
      - description: The custom role's key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The custom role's key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleRep'
          description: Custom role response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get custom role
      tags:
      - Custom roles
    patch:
      description: ' Updates a single custom role. The request must be a valid JSON
        Patch document describing the changes to be made to the custom role.'
      operationId: patchCustomRole
      parameters:
      - description: The key of the custom role to update
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom role to update
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleRep'
          description: Custom role response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update custom role
      tags:
      - Custom roles
  /api/v2/segments/{projKey}/{envKey}:
    get:
      description: ' Gets a list of all user segments in the given project'
      operationId: getSegments
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSegmentCollectionRep'
          description: Segment collection response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
      summary: List segments
      tags:
      - Segments
    post:
      description: ' Creates a new user segment'
      operationId: postSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/segments.SegmentPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentRep'
          description: Segment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Create segment
      tags:
      - Segments
  /api/v2/segments/{projKey}/{envKey}/{key}:
    delete:
      description: ' Deletes a user segment'
      operationId: deleteSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Delete segment
      tags:
      - Segments
    get:
      description: ' Gets a single user segment by key'
      operationId: getSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          under one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users under one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The segment key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentRep'
          description: Segment response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get segment
      tags:
      - Segments
    patch:
      description: ' Performs a partial update to a user segment. The request body
        must be a valid JSON patch or JSON merge patch document.'
      operationId: patchSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          under one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users under one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentRep'
          description: Segment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Patch segment
      tags:
      - Segments
  /api/v2/segments/{projKey}/{segmentKey}/expiring-user-targets/{envKey}:
    get:
      description: ' Gets a list of a segment''s user targets that are scheduled for
        removal'
      operationId: getExpiringUserTargetsOnSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: segmentKey
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.ExpiringUserTargetResponse'
          description: Expiring user target response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get expiring user targets for segment
      tags:
      - Segments
    patch:
      description: ' Updates the list of a segment''s user targets that are scheduled
        for removal'
      operationId: patchExpiringUserTargetsOnSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: segmentKey
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/expiring_user_targets_endpoints.patchSegmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.ExpiringUserTargetResponse'
          description: Expiring user target response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update expiring user targets on segment
      tags:
      - Segments
  /api/v2/tokens:
    get:
      description: ' Fetch a list of all access tokens.'
      operationId: getTokens
      parameters:
      - description: If set to true, and the authentication access token has the 'Admin'
          role, personal access tokens for all members will be retrieved.
        explode: true
        in: query
        name: showAll
        required: false
        schema:
          description: If set to true, and the authentication access token has the
            'Admin' role, personal access tokens for all members will be retrieved.
          format: boolean
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenCollectionRep'
          description: Access token response JSON
        "401":
          description: Invalid access token
      summary: List access tokens
      tags:
      - Access tokens
    post:
      description: ' Creates a new access token.'
      operationId: postToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_tokens.AccessTokenPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "429":
          description: Rate limited
      summary: Create access token
      tags:
      - Access tokens
  /api/v2/tokens/{id}:
    delete:
      description: ' Delete an access token by ID.'
      operationId: deleteToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete access token
      tags:
      - Access tokens
    get:
      description: ' Get a single access token by ID.'
      operationId: getToken
      parameters:
      - description: The ID of the access token
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get access token
      tags:
      - Access tokens
    patch:
      description: ' Update an access token''s settings. The request should be a valid
        JSON Patch document describing the changes to be made to the access token.'
      operationId: patchToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Patch access token
      tags:
      - Access tokens
  /api/v2/tokens/{id}/reset:
    post:
      description: ' Reset an access token''s secret key with an optional expiry time
        for the old key.'
      operationId: resetToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      - description: An expiration time for the old token key, expressed as a Unix
          epoch time in milliseconds. By default, the token will expire immediately.
        explode: true
        in: query
        name: expiry
        required: false
        schema:
          description: An expiration time for the old token key, expressed as a Unix
            epoch time in milliseconds. By default, the token will expire immediately.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Reset access token
      tags:
      - Access tokens
  /api/v2/user-search/{projKey}/{envKey}:
    get:
      description: ' Search users in LaunchDarkly based on their last active date,
        or a search query. It should not be used to enumerate all users in LaunchDarkly--
        use the List users API resource.'
      operationId: getSearchUsers
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: Full-text search for users based on name, first name, last name,
          e-mail address, or key
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Full-text search for users based on name, first name, last
            name, e-mail address, or key
          format: string
          type: string
        style: form
      - description: 'Specifies the maximum number of items in the collection to return
          (max: 50, default: 20)'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: 'Specifies the maximum number of items in the collection to
            return (max: 50, default: 20)'
          format: int64
          type: integer
        style: form
      - description: Specifies the first item to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Specifies the first item to return in the collection
          format: int64
          type: integer
        style: form
      - description: A unix epoch time in milliseconds specifying the maximum last
          time a user requested a feature flag from LaunchDarkly
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: A unix epoch time in milliseconds specifying the maximum last
            time a user requested a feature flag from LaunchDarkly
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRep'
          description: Users collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Find users
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}:
    get:
      description: ' List all users in the environment. Includes the total count of
        users. In each page, there will be up to ''limit'' users returned (default
        20). This is useful for exporting all users in the system for further analysis.
        To paginate through, follow the ''next'' link in the _links object.'
      operationId: getUsers
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The number of elements to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of elements to return per page
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRep'
          description: Users collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List users
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}/{key}:
    delete:
      description: ' Delete a user by key'
      operationId: deleteUser
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Delete user
      tags:
      - Users
    get:
      description: ' Get a user by key. The user object will contain all attributes
        sent in variation calls for that key.'
      operationId: getUser
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The number of elements to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of elements to return per page
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRep'
          description: User response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
        "503":
          description: Service unavailable
        "504":
          description: Service timed out
      summary: Get user
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}/{key}/flags:
    get:
      description: ' Lists the current flag settings for a given user. The most important
        attribute in the response is the _value. The _value is the setting that the
        user sees. For a boolean feature toggle, this is `true`, `false`, or `null`.
        `Null` returns if there is no defined fallthrough value. The example response
        indicates that the user Abbie_Braun has the `sort.order` flag enabled and
        the `alternate.page` flag disabled. The setting attribute indicates whether
        you''ve explicitly targeted a user to receive a particular variation. For
        example, if you have turned off a feature flag for a user, this setting will
        be `false`. A setting of `null` means that you haven''t assigned that user
        to a specific variation.'
      operationId: getUserFlagSettings
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsCollection'
          description: User flag settings collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: List flag settings for user
      tags:
      - User settings
  /api/v2/users/{projKey}/{envKey}/{key}/flags/{featureKey}:
    get:
      description: ' Fetches a single flag setting for a user by key. The most important
        attribute in the response is the _value. The _value is the current setting
        that the user sees. For a boolean feature toggle, this is `true`, `false`,
        or `null`. `Null` returns if there is no defined fallthrough value. The example
        response indicates that the user Abbie_Braun has the `sort.order` flag enabled
        and the `alternate.page` flag disabled. The setting attribute indicates whether
        you''ve explicitly targeted a user to receive a particular variation. For
        example, if you have turned off a feature flag for a user, this setting will
        be `false`. A setting of `null` means that you haven''t assigned that user
        to a specific variation.'
      operationId: getUserFlagSetting
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: featureKey
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingRep'
          description: User flag settings response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get flag setting for user
      tags:
      - User settings
    put:
      description: ' Specifically enable or disable a feature flag for a user based
        on their key.'
      operationId: putFlagSetting
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: featureKey
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api2.ValuePut'
        required: true
      responses:
        "204":
          description: Action completed successfully
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Update flag settings for user
      tags:
      - User settings
  /api/v2/versions:
    get:
      description: ' Returns the latest API version, the list of valid API versions
        in ascending order, and the version being used for this request. These are
        all in the external, date-based format.'
      operationId: getVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionsRep'
          description: Versions information response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get version information
      tags:
      - Other
  /integrations/{integrationKey}/{id}/validate:
    post:
      description: ' Validate an integration connection for receiving audit log webhooks.'
      operationId: validateConnection
      parameters:
      - description: The integration key
        explode: false
        in: path
        name: integrationKey
        required: true
        schema:
          description: The integration key
          format: string
          type: string
        style: simple
      - description: The integration configuration ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The integration configuration ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationSubscriptionTestEventRep'
          description: Successful
        "400":
          description: Integration does not support test event feature
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Integration not found
        "429":
          description: Rate limited
      summary: Validate connection
      tags:
      - Integrations (Beta)
  /segments/{projKey}/{envKey}/{key}/users:
    post:
      description: ' Update targets included or excluded in a big segment'
      operationId: updateBigSegmentTargets
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/unbounded.SegmentUserState'
        required: true
      responses:
        "204":
          description: Action completed successfully
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: Update targets on a big segment
      tags:
      - Segments
  /segments/{projKey}/{envKey}/{key}/users/{userKey}:
    get:
      description: ' Get whether a given userKey is included or excluded from this
        segment.'
      operationId: getBigSegmentTarget
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key.
          format: string
          type: string
        style: simple
      - description: The user key.
        explode: false
        in: path
        name: userKey
        required: true
        schema:
          description: The user key.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segments.unboundedTargetRep'
          description: Unbounded target response
        "401":
          description: Invalid access token
        "404":
          description: Unknown segment key
        "429":
          description: Rate limited
      summary: Get user in big segment
      tags:
      - Segments
components:
  schemas:
    AccessDeniedReasonRep:
      example:
        role_name: role_name
        notActions:
        - null
        - null
        notResources:
        - {}
        - {}
        effect: effect
        resources:
        - '{}'
        - '{}'
        actions:
        - actions
        - actions
      properties:
        resources:
          items:
            properties: {}
            type: object
          type: array
        notResources:
          items:
            $ref: '#/components/schemas/roles.ResourceSpecifierImpl'
          type: array
        actions:
          items:
            type: string
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
        role_name:
          type: string
      required:
      - effect
      type: object
    AccessDeniedRep:
      example:
        reason:
          role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        action: action
      properties:
        action:
          type: string
        reason:
          $ref: '#/components/schemas/AccessDeniedReasonRep'
      required:
      - action
      - reason
      type: object
    AccessRep:
      example:
        denied:
        - reason:
            role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          action: action
        - reason:
            role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          action: action
      properties:
        denied:
          items:
            $ref: '#/components/schemas/AccessDeniedRep'
          type: array
      required:
      - denied
      type: object
    AccessTokenCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - role: role
          customRoleIds:
          - null
          - null
          _links:
            key:
              href: href
              type: type
          description: description
          _member:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          ownerId: ownerId
          creationDate: 0
          defaultApiVersion: 1
          token: token
          inlineRole:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          lastUsed: 5
          name: name
          _id: _id
          lastModified: 6
          serviceToken: true
          memberId: memberId
        - role: role
          customRoleIds:
          - null
          - null
          _links:
            key:
              href: href
              type: type
          description: description
          _member:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          ownerId: ownerId
          creationDate: 0
          defaultApiVersion: 1
          token: token
          inlineRole:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          lastUsed: 5
          name: name
          _id: _id
          lastModified: 6
          serviceToken: true
          memberId: memberId
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccessTokenRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    AccessTokenRep:
      example:
        role: role
        customRoleIds:
        - null
        - null
        _links:
          key:
            href: href
            type: type
        description: description
        _member:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        ownerId: ownerId
        creationDate: 0
        defaultApiVersion: 1
        token: token
        inlineRole:
        - role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        - role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        lastUsed: 5
        name: name
        _id: _id
        lastModified: 6
        serviceToken: true
        memberId: memberId
      properties:
        _id:
          type: string
        ownerId:
          type: string
        memberId:
          type: string
        _member:
          $ref: '#/components/schemas/MemberSummaryRep'
        name:
          type: string
        description:
          type: string
        creationDate:
          format: int64
          type: integer
        lastModified:
          format: int64
          type: integer
        customRoleIds:
          items:
            $ref: '#/components/schemas/bson.ObjectId'
          type: array
        inlineRole:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        role:
          type: string
        token:
          type: string
        serviceToken:
          type: boolean
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        defaultApiVersion:
          type: integer
        lastUsed:
          format: int64
          type: integer
      type: object
    AllVariationsSummary:
      additionalProperties:
        $ref: '#/components/schemas/VariationSummary'
      type: object
    ApprovalSettingsRep:
      example:
        serviceKind: launchdarkly
        canReviewOwnRequest: false
        Required: true
        serviceConfig: {}
        requiredApprovalTags:
        - require-approval
        bypassApprovalsForPendingChanges: false
        canApplyDeclinedChanges: false
        minNumApprovals: 1
      properties:
        Required:
          description: If approvals are required for this environment.
          example: true
          type: boolean
        bypassApprovalsForPendingChanges:
          example: false
          type: boolean
        minNumApprovals:
          description: Sets the amount of approvals required before a member can apply
            a change. The minimum is one and the maximum is five.
          example: 1
          type: integer
        canReviewOwnRequest:
          description: Allow someone who makes an approval request to apply their
            own change.
          example: false
          type: boolean
        canApplyDeclinedChanges:
          description: Allow applying the change as long as at least one person has
            approved.
          example: false
          type: boolean
        serviceKind:
          description: Which service to use for managing approvals.
          example: launchdarkly
          type: string
        serviceConfig:
          additionalProperties: {}
          example: {}
          type: object
        requiredApprovalTags:
          description: Require approval only on flags with the provided tags. Otherwise
            all flags will require approval.
          example:
          - require-approval
          items:
            type: string
          type: array
      required:
      - Required
      type: object
    AuditLogEntryListingRep:
      example:
        app:
          _links:
            key:
              href: href
              type: type
          isScim: true
          name: name
          _id: _id
          maintainerName: maintainerName
        parent:
          _links:
            key:
              href: href
              type: type
          resource: ""
          name: name
        titleVerb: titleVerb
        subject:
          _links:
            key:
              href: href
              type: type
          avatarUrl: avatarUrl
          name: name
        delta: ""
        subentries:
        - null
        - null
        title: title
        currentVersion: ""
        token:
          ending: ending
          _links:
            key:
              href: href
              type: type
          name: name
          _id: _id
          serviceToken: true
        target:
          _links:
            key:
              href: href
              type: type
          name: name
          resources:
          - null
          - null
        previousVersion: ""
        merge: ""
        member:
          firstName: firstName
          lastName: lastName
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        triggerBody: ""
      properties:
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
        delta: {}
        triggerBody: {}
        merge: {}
        previousVersion: {}
        currentVersion: {}
        subentries:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep'
          type: array
      type: object
    AuditLogEntryListingRepCollection:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          delta: ""
          subentries:
          - null
          - null
          title: title
          currentVersion: ""
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          previousVersion: ""
          merge: ""
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          triggerBody: ""
        - app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          delta: ""
          subentries:
          - null
          - null
          title: title
          currentVersion: ""
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          previousVersion: ""
          merge: ""
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          triggerBody: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    AuditLogEntryRep:
      example:
        app:
          _links:
            key:
              href: href
              type: type
          isScim: true
          name: name
          _id: _id
          maintainerName: maintainerName
        parent:
          _links:
            key:
              href: href
              type: type
          resource: ""
          name: name
        titleVerb: titleVerb
        subject:
          _links:
            key:
              href: href
              type: type
          avatarUrl: avatarUrl
          name: name
        delta: ""
        subentries:
        - app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          delta: ""
          subentries:
          - null
          - null
          title: title
          currentVersion: ""
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          previousVersion: ""
          merge: ""
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          triggerBody: ""
        - app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          delta: ""
          subentries:
          - null
          - null
          title: title
          currentVersion: ""
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          previousVersion: ""
          merge: ""
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          triggerBody: ""
        title: title
        currentVersion: ""
        token:
          ending: ending
          _links:
            key:
              href: href
              type: type
          name: name
          _id: _id
          serviceToken: true
        target:
          _links:
            key:
              href: href
              type: type
          name: name
          resources:
          - null
          - null
        previousVersion: ""
        merge: ""
        member:
          firstName: firstName
          lastName: lastName
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        triggerBody: ""
      properties:
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
        delta: {}
        triggerBody: {}
        merge: {}
        previousVersion: {}
        currentVersion: {}
        subentries:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep'
          type: array
      type: object
    AuthorizedAppDataRep:
      example:
        _links:
          key:
            href: href
            type: type
        isScim: true
        name: name
        _id: _id
        maintainerName: maintainerName
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _id:
          type: string
        isScim:
          type: boolean
        name:
          type: string
        maintainerName:
          type: string
      type: object
    ClientSideAvailabilityPost:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingEnvironmentId:
          type: boolean
        usingMobileKey:
          type: boolean
      required:
      - usingEnvironmentId
      - usingMobileKey
      type: object
    ConfidenceIntervalRep:
      example:
        upper: 5.637376656633329
        lower: 2.3021358869347655
      properties:
        upper:
          type: number
        lower:
          type: number
      type: object
    CustomProperties:
      additionalProperties:
        $ref: '#/components/schemas/customProperty'
      type: object
    CustomRoleCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          name: name
          description: description
          _id: _id
          key: key
          policy:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          name: name
          description: description
          _id: _id
          key: key
          policy:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/CustomRoleRep'
          type: array
      type: object
    CustomRoleRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        name: name
        description: description
        _id: _id
        key: key
        policy:
        - role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        - role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        name:
          type: string
        key:
          type: string
        description:
          type: string
        _id:
          type: string
        policy:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    DefaultClientSideAvailabilityPost:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingEnvironmentId:
          type: boolean
        usingMobileKey:
          type: boolean
      type: object
    DependentFlag:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      required:
      - _links
      - _site
      - key
      type: object
    DependentFlagEnvironment:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      required:
      - _links
      - _site
      - key
      type: object
    DependentFlagWithEnvs:
      example:
        environments:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/DependentFlagEnvironment'
          type: array
      required:
      - environments
      - key
      type: object
    DependentFlagsCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        items:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/DependentFlag'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      required:
      - _links
      - _site
      - items
      type: object
    DestinationCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          _id: _id
          version: 0.8008281904610115
          config: ""
          "on": true
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          _id: _id
          version: 0.8008281904610115
          config: ""
          "on": true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/DestinationRep'
          type: array
      type: object
    DestinationPostRep:
      example:
        kind: kind
        name: Example Google Pub/Sub Destination
        config: ""
        "on": true
      properties:
        name:
          description: A human-readable name for your data export destination.
          example: Example Google Pub/Sub Destination
          type: string
        kind:
          type: string
        config: {}
        "on":
          type: boolean
      type: object
    DestinationRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        kind: kind
        name: name
        _id: _id
        version: 0.8008281904610115
        config: ""
        "on": true
      properties:
        _id:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        name:
          type: string
        kind:
          type: string
        version:
          type: number
        config: {}
        "on":
          type: boolean
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    EnvironmentPost:
      example:
        color: F5A623
        confirmChanges: false
        name: My Environment
        defaultTtl: 5
        requireComments: false
        secureMode: true
        defaultTrackEvents: false
        key: my-environment
        tags:
        - ops
      properties:
        name:
          description: A human-friendly name for the new environment.
          example: My Environment
          type: string
        key:
          description: A project-unique key for the new environment.
          example: my-environment
          type: string
        color:
          description: A color to indicate this environment in the UI.
          example: F5A623
          type: string
        defaultTtl:
          description: The default time (in minutes) that the PHP SDK can cache feature
            flag rules locally.
          example: 5
          type: integer
        secureMode:
          description: Secure mode ensures that a user of the client-side SDK cannot
            impersonate another user.
          example: true
          type: boolean
        defaultTrackEvents:
          description: Enables tracking detailed information for new flags by default.
          example: false
          type: boolean
        confirmChanges:
          description: Require confirmation for all flag and segment changes via the
            UI in this environment.
          example: false
          type: boolean
        requireComments:
          description: Require comments for all flag and segment changes via the UI
            in this environment.
          example: false
          type: boolean
        tags:
          description: Tags to apply to the new environment.
          example:
          - ops
          items:
            type: string
          type: array
      type: object
    EnvironmentRep:
      example:
        approvalSettings:
          serviceKind: launchdarkly
          canReviewOwnRequest: false
          Required: true
          serviceConfig: {}
          requiredApprovalTags:
          - require-approval
          bypassApprovalsForPendingChanges: false
          canApplyDeclinedChanges: false
          minNumApprovals: 1
        apiKey: XYZ
        color: F5A623
        _links:
          self:
            href: /api/v2/projects/my-project/environments/my-environment
            type: application/json
        name: My Environment
        defaultTtl: 5
        _id: 57be1db38b75bf0772d11384
        mobileKey: XYZ
        secureMode: true
        defaultTrackEvents: false
        key: my-environment
        tags:
        - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          description: Links to related resources.
          example:
            self:
              href: /api/v2/projects/my-project/environments/my-environment
              type: application/json
          type: object
        _id:
          example: 57be1db38b75bf0772d11384
          type: string
        key:
          description: A project-unique key for the new environment.
          example: my-environment
          type: string
        name:
          description: A human-friendly name for the new environment.
          example: My Environment
          type: string
        apiKey:
          description: API key to use with client-side SDKs.
          example: XYZ
          type: string
        mobileKey:
          description: API key to use with mobile SDKs.
          example: XYZ
          type: string
        color:
          description: The color used to indicate this environment in the UI.
          example: F5A623
          type: string
        defaultTtl:
          description: The default time (in minutes) that the PHP SDK can cache feature
            flag rules locally.
          example: 5
          type: integer
        secureMode:
          description: Secure mode ensures that a user of the client-side SDK cannot
            impersonate another user.
          example: true
          type: boolean
        defaultTrackEvents:
          description: Enables tracking detailed information for new flags by default.
          example: false
          type: boolean
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        approvalSettings:
          $ref: '#/components/schemas/ApprovalSettingsRep'
      required:
      - _id
      - _links
      - apiKey
      - color
      - defaultTrackEvents
      - defaultTtl
      - key
      - mobileKey
      - name
      - secureMode
      - tags
      type: object
    ExperimentAllocationRep:
      example:
        defaultVariation: 9
        canReshuffle: true
      properties:
        defaultVariation:
          type: integer
        canReshuffle:
          type: boolean
      required:
      - canReshuffle
      - defaultVariation
      type: object
    ExperimentEnabledPeriodRep:
      example:
        startDate: 2
        stopDate: 4
      properties:
        startDate:
          format: int64
          type: integer
        stopDate:
          format: int64
          type: integer
      type: object
    ExperimentEnvironmentSettingRep:
      example:
        startDate: 9
        stopDate: 3
        enabledPeriods:
        - startDate: 2
          stopDate: 4
        - startDate: 2
          stopDate: 4
      properties:
        startDate:
          format: int64
          type: integer
        stopDate:
          format: int64
          type: integer
        enabledPeriods:
          items:
            $ref: '#/components/schemas/ExperimentEnabledPeriodRep'
          type: array
      type: object
    ExperimentFlagRep:
      example:
        archived: true
        site:
          href: href
          type: type
        variations:
        - name: name
          description: description
          _id: _id
          value: ""
        - name: name
          description: description
          _id: _id
          value: ""
        name: name
        links:
          key:
            href: href
            type: type
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        archived:
          type: boolean
        variations:
          items:
            $ref: '#/components/schemas/VariateRep'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        site:
          $ref: '#/components/schemas/core.Link'
      type: object
    ExperimentInfoRep:
      example:
        baselineIdx: 1
        items:
        - metricKey: metricKey
          environments:
          - environments
          - environments
          _environmentSettings:
            key:
              startDate: 9
              stopDate: 3
              enabledPeriods:
              - startDate: 2
                stopDate: 4
              - startDate: 2
                stopDate: 4
          _metric:
            _maintainer:
              firstName: firstName
              lastName: lastName
              role: role
              _links:
                key:
                  href: href
                  type: type
              _id: _id
              email: email
            _links:
              key:
                href: href
                type: type
            kind: kind
            _attachedFlagCount: 5
            description: description
            _creationDate: 5
            isActive: true
            tags:
            - tags
            - tags
            maintainerId: maintainerId
            unit: unit
            urls:
            - null
            - null
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
            successCriteria: 2
            _site:
              href: href
              type: type
            isNumeric: true
            eventKey: eventKey
            _attachedFeatures:
            - _links:
                key:
                  href: href
                  type: type
              _site:
                href: href
                type: type
              name: name
              key: key
            - _links:
                key:
                  href: href
                  type: type
              _site:
                href: href
                type: type
              name: name
              key: key
            name: name
            selector: selector
            _id: _id
            lastModified:
              date: 2000-01-23T04:56:07.000+00:00
            _version: 7
            key: key
        - metricKey: metricKey
          environments:
          - environments
          - environments
          _environmentSettings:
            key:
              startDate: 9
              stopDate: 3
              enabledPeriods:
              - startDate: 2
                stopDate: 4
              - startDate: 2
                stopDate: 4
          _metric:
            _maintainer:
              firstName: firstName
              lastName: lastName
              role: role
              _links:
                key:
                  href: href
                  type: type
              _id: _id
              email: email
            _links:
              key:
                href: href
                type: type
            kind: kind
            _attachedFlagCount: 5
            description: description
            _creationDate: 5
            isActive: true
            tags:
            - tags
            - tags
            maintainerId: maintainerId
            unit: unit
            urls:
            - null
            - null
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
            successCriteria: 2
            _site:
              href: href
              type: type
            isNumeric: true
            eventKey: eventKey
            _attachedFeatures:
            - _links:
                key:
                  href: href
                  type: type
              _site:
                href: href
                type: type
              name: name
              key: key
            - _links:
                key:
                  href: href
                  type: type
              _site:
                href: href
                type: type
              name: name
              key: key
            name: name
            selector: selector
            _id: _id
            lastModified:
              date: 2000-01-23T04:56:07.000+00:00
            _version: 7
            key: key
      properties:
        baselineIdx:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/ExperimentRep'
          type: array
      required:
      - baselineIdx
      - items
      type: object
    ExperimentMetadataRep:
      example:
        key: ""
      properties:
        key: {}
      type: object
    ExperimentPost:
      example:
        metricKey: metricKey
        eventLocation: eventLocation
        baselineIdx: 0
        flagKey: flagKey
      properties:
        flagKey:
          type: string
        metricKey:
          type: string
        baselineIdx:
          type: integer
        eventLocation:
          type: string
      type: object
    ExperimentRep:
      example:
        metricKey: metricKey
        environments:
        - environments
        - environments
        _environmentSettings:
          key:
            startDate: 9
            stopDate: 3
            enabledPeriods:
            - startDate: 2
              stopDate: 4
            - startDate: 2
              stopDate: 4
        _metric:
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          isActive: true
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          urls:
          - null
          - null
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          _attachedFeatures:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          selector: selector
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          _version: 7
          key: key
      properties:
        metricKey:
          type: string
        _metric:
          $ref: '#/components/schemas/MetricListingRep'
        environments:
          items:
            type: string
          type: array
        _environmentSettings:
          additionalProperties:
            $ref: '#/components/schemas/ExperimentEnvironmentSettingRep'
          type: object
      type: object
    ExperimentResultsRep:
      example:
        metadata:
        - key: ""
        - key: ""
        _links:
          key:
            href: href
            type: type
        stats:
          chi2: 4.145608029883936
          winningVariationIdx: 7
          pValue: 2.027123023002322
          minSampleSizeMet: true
        series:
        - Time: ""
          VariationData: ""
        - Time: ""
          VariationData: ""
        granularity: granularity
        totals:
        - cumulativeConversionRate: 5.962133916683182
          cumulativeCount: 6
          minSampleSize: 3
          cumulativeImpressionCount: 1
          pValue: 7.061401241503109
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          improvement: 9.301444243932576
          cumulativeValue: 0.8008281904610115
        - cumulativeConversionRate: 5.962133916683182
          cumulativeCount: 6
          minSampleSize: 3
          cumulativeImpressionCount: 1
          pValue: 7.061401241503109
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          improvement: 9.301444243932576
          cumulativeValue: 0.8008281904610115
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        metadata:
          items:
            $ref: '#/components/schemas/ExperimentMetadataRep'
          type: array
        totals:
          items:
            $ref: '#/components/schemas/ExperimentTotalsRep'
          type: array
        series:
          items:
            $ref: '#/components/schemas/ExperimentTimeSeriesSlice'
          type: array
        stats:
          $ref: '#/components/schemas/ExperimentStatsRep'
        granularity:
          type: string
      type: object
    ExperimentStatsRep:
      example:
        chi2: 4.145608029883936
        winningVariationIdx: 7
        pValue: 2.027123023002322
        minSampleSizeMet: true
      properties:
        pValue:
          type: number
        chi2:
          type: number
        winningVariationIdx:
          type: integer
        minSampleSizeMet:
          type: boolean
      type: object
    ExperimentSummaryRep:
      example:
        _flag:
          archived: true
          site:
            href: href
            type: type
          variations:
          - name: name
            description: description
            _id: _id
            value: ""
          - name: name
            description: description
            _id: _id
            value: ""
          name: name
          links:
            key:
              href: href
              type: type
          key: key
        _baselineIdx: 0
        _links:
          key:
            href: href
            type: type
        _metric:
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          isActive: true
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          urls:
          - null
          - null
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          _attachedFeatures:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          selector: selector
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          _version: 7
          key: key
        _id: _id
        _projKey: _projKey
        _status: _status
        _stopDate: 1
        _startDate: 6
        _envKey: _envKey
      properties:
        _id:
          type: string
        _projKey:
          type: string
        _envKey:
          type: string
        _baselineIdx:
          type: integer
        _status:
          type: string
        _startDate:
          format: int64
          type: integer
        _stopDate:
          format: int64
          type: integer
        _flag:
          $ref: '#/components/schemas/ExperimentFlagRep'
        _metric:
          $ref: '#/components/schemas/MetricListingRep'
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    ExperimentTimeSeriesSlice:
      example:
        Time: ""
        VariationData: ""
      properties:
        Time: {}
        VariationData: {}
      type: object
    ExperimentTimeSeriesVariationSlice:
      properties:
        value:
          type: number
        count:
          format: int64
          type: integer
        cumulativeValue:
          type: number
        cumulativeCount:
          format: int64
          type: integer
        conversionRate:
          type: number
        cumulativeConversionRate:
          type: number
        confidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
        cumulativeConfidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
      type: object
    ExperimentTimeSeriesVariationSlices:
      items:
        $ref: '#/components/schemas/ExperimentTimeSeriesVariationSlice'
      type: array
    ExperimentTotalsRep:
      example:
        cumulativeConversionRate: 5.962133916683182
        cumulativeCount: 6
        minSampleSize: 3
        cumulativeImpressionCount: 1
        pValue: 7.061401241503109
        cumulativeConfidenceInterval:
          upper: 5.637376656633329
          lower: 2.3021358869347655
        improvement: 9.301444243932576
        cumulativeValue: 0.8008281904610115
      properties:
        cumulativeValue:
          type: number
        cumulativeCount:
          format: int64
          type: integer
        cumulativeImpressionCount:
          format: int64
          type: integer
        cumulativeConversionRate:
          type: number
        cumulativeConfidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
        pValue:
          type: number
        improvement:
          type: number
        minSampleSize:
          format: int64
          type: integer
      type: object
    FlagConfigurationRep:
      example:
        salt: salt
        rules:
        - rollout:
            experimentAllocation:
              defaultVariation: 9
              canReshuffle: true
            seed: 9
            variations:
            - weight: 5
              _untracked: true
              variation: 4
            - weight: 5
              _untracked: true
              variation: 4
            bucketBy: bucketBy
          clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          description: description
          trackEvents: true
          variation: 1
        - rollout:
            experimentAllocation:
              defaultVariation: 9
              canReshuffle: true
            seed: 9
            variations:
            - weight: 5
              _untracked: true
              variation: 4
            - weight: 5
              _untracked: true
              variation: 4
            bucketBy: bucketBy
          clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          description: description
          trackEvents: true
          variation: 1
        version: 6
        targets:
        - values:
          - values
          - values
          variation: 7
        - values:
          - values
          - values
          variation: 7
        prerequisites:
        - key: key
          variation: 9
        - key: key
          variation: 9
        archived: true
        _debugEventsUntilDate: 6
        _summary:
          prerequisites: 3
        trackEventsFallthrough: true
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _environmentName: _environmentName
        _site:
          href: href
          type: type
        sel: sel
        lastModified: 1
        trackEvents: true
        fallthrough:
          rollout:
            experimentAllocation:
              defaultVariation: 9
              canReshuffle: true
            seed: 9
            variations:
            - weight: 5
              _untracked: true
              variation: 4
            - weight: 5
              _untracked: true
              variation: 4
            bucketBy: bucketBy
          clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          description: description
          trackEvents: true
          variation: 6
        offVariation: 8
        "on": true
      properties:
        "on":
          type: boolean
        archived:
          type: boolean
        salt:
          type: string
        sel:
          type: string
        lastModified:
          format: int64
          type: integer
        version:
          type: integer
        targets:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_targets'
          type: array
        rules:
          items:
            $ref: '#/components/schemas/RuleRep'
          type: array
        fallthrough:
          $ref: '#/components/schemas/VariationOrRolloutRep'
        offVariation:
          type: integer
        prerequisites:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_prerequisites'
          type: array
        _site:
          $ref: '#/components/schemas/core.Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        _environmentName:
          type: string
        trackEvents:
          type: boolean
        trackEventsFallthrough:
          type: boolean
        _debugEventsUntilDate:
          format: int64
          type: integer
        _summary:
          $ref: '#/components/schemas/FlagSummary'
      required:
      - _environmentName
      - _site
      - archived
      - fallthrough
      - lastModified
      - "on"
      - prerequisites
      - rules
      - salt
      - sel
      - targets
      - trackEvents
      - trackEventsFallthrough
      - version
      type: object
    FlagDefaultsRep:
      example:
        onVariation: 1
        offVariation: 1
      properties:
        onVariation:
          type: integer
        offVariation:
          type: integer
      required:
      - offVariation
      - onVariation
      type: object
    FlagGlobalAttributesRep:
      properties:
        name:
          type: string
        kind:
          type: string
        description:
          type: string
        key:
          type: string
        _version:
          type: integer
        creationDate:
          format: int64
          type: integer
        includeInSnippet:
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        variations:
          items:
            $ref: '#/components/schemas/VariateRep'
          type: array
        variationJsonSchema: {}
        temporary:
          type: boolean
        tags:
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        goalIds:
          items:
            type: string
          type: array
        experiments:
          $ref: '#/components/schemas/ExperimentInfoRep'
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        archived:
          type: boolean
        archivedDate:
          format: int64
          type: integer
        defaults:
          $ref: '#/components/schemas/FlagDefaultsRep'
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FlagConfigurationRep'
          type: object
      required:
      - _links
      - _version
      - archived
      - creationDate
      - customProperties
      - experiments
      - key
      - kind
      - name
      - tags
      - temporary
      - variations
      type: object
    FlagListingRep:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      required:
      - key
      - name
      type: object
    FlagPost:
      example:
        temporary: true
        includeInSnippet: true
        customProperties:
          key:
            name: name
            value:
            - value
            - value
        clientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        defaults:
          onVariation: 1
          offVariation: 1
        variations:
        - name: name
          description: description
          id: id
          value: ""
        - name: name
          description: description
          id: id
          value: ""
        name: name
        description: description
        key: key
        variationJsonSchema: ""
        tags:
        - tags
        - tags
      properties:
        name:
          type: string
        key:
          type: string
        description:
          type: string
        includeInSnippet:
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailabilityPost'
        variations:
          items:
            $ref: '#/components/schemas/FlagPost_variations'
          type: array
        variationJsonSchema: {}
        temporary:
          type: boolean
        tags:
          items:
            type: string
          type: array
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        defaults:
          $ref: '#/components/schemas/FlagDefaultsRep'
      required:
      - key
      - name
      type: object
    FlagStatusCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - lastRequested: 2000-01-23T04:56:07.000+00:00
          default: ""
          _links:
            key:
              href: href
              type: type
          name: name
        - lastRequested: 2000-01-23T04:56:07.000+00:00
          default: ""
          _links:
            key:
              href: href
              type: type
          name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/FlagStatusRep'
          type: array
      type: object
    FlagStatusRep:
      example:
        lastRequested: 2000-01-23T04:56:07.000+00:00
        default: ""
        _links:
          key:
            href: href
            type: type
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        name:
          type: string
        lastRequested:
          format: date-time
          type: string
        default: {}
      type: object
    FlagStatusRepFromEnvSummaries:
      example:
        environments:
          key:
            lastRequested: 2000-01-23T04:56:07.000+00:00
            default: ""
            name: name
        _links:
          key:
            href: href
            type: type
        key: key
      properties:
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FlagStatusesRep'
          type: object
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    FlagStatusesRep:
      example:
        lastRequested: 2000-01-23T04:56:07.000+00:00
        default: ""
        name: name
      properties:
        name:
          type: string
        lastRequested:
          format: date-time
          type: string
        default: {}
      type: object
    FlagSummary:
      example:
        prerequisites: 3
      properties:
        prerequisites:
          type: integer
      required:
      - prerequisites
      type: object
    GlobalFlagCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 6
        items:
        - archivedDate: 7
          temporary: true
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            key:
              href: href
              type: type
          environments:
            key:
              salt: salt
              rules:
              - rollout:
                  experimentAllocation:
                    defaultVariation: 9
                    canReshuffle: true
                  seed: 9
                  variations:
                  - weight: 5
                    _untracked: true
                    variation: 4
                  - weight: 5
                    _untracked: true
                    variation: 4
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                trackEvents: true
                variation: 1
              - rollout:
                  experimentAllocation:
                    defaultVariation: 9
                    canReshuffle: true
                  seed: 9
                  variations:
                  - weight: 5
                    _untracked: true
                    variation: 4
                  - weight: 5
                    _untracked: true
                    variation: 4
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                trackEvents: true
                variation: 1
              version: 6
              targets:
              - values:
                - values
                - values
                variation: 7
              - values:
                - values
                - values
                variation: 7
              prerequisites:
              - key: key
                variation: 9
              - key: key
                variation: 9
              archived: true
              _debugEventsUntilDate: 6
              _summary:
                prerequisites: 3
              trackEventsFallthrough: true
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              _environmentName: _environmentName
              _site:
                href: href
                type: type
              sel: sel
              lastModified: 1
              trackEvents: true
              fallthrough:
                rollout:
                  experimentAllocation:
                    defaultVariation: 9
                    canReshuffle: true
                  seed: 9
                  variations:
                  - weight: 5
                    _untracked: true
                    variation: 4
                  - weight: 5
                    _untracked: true
                    variation: 4
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                trackEvents: true
                variation: 6
              offVariation: 8
              "on": true
          kind: kind
          experiments:
            baselineIdx: 1
            items:
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 9
                  stopDate: 3
                  enabledPeriods:
                  - startDate: 2
                    stopDate: 4
                  - startDate: 2
                    stopDate: 4
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                isActive: true
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                urls:
                - null
                - null
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                _attachedFeatures:
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                name: name
                selector: selector
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                _version: 7
                key: key
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 9
                  stopDate: 3
                  enabledPeriods:
                  - startDate: 2
                    stopDate: 4
                  - startDate: 2
                    stopDate: 4
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                isActive: true
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                urls:
                - null
                - null
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                _attachedFeatures:
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                name: name
                selector: selector
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                _version: 7
                key: key
          description: description
          creationDate: 6
          tags:
          - tags
          - tags
          goalIds:
          - goalIds
          - goalIds
          archived: true
          includeInSnippet: true
          maintainerId: maintainerId
          customProperties:
            key:
              name: name
              value:
              - value
              - value
          defaults:
            onVariation: 1
            offVariation: 1
          variations:
          - name: name
            description: description
            _id: _id
            value: ""
          - name: name
            description: description
            _id: _id
            value: ""
          name: name
          _version: 0
          key: key
          variationJsonSchema: ""
        - archivedDate: 7
          temporary: true
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            key:
              href: href
              type: type
          environments:
            key:
              salt: salt
              rules:
              - rollout:
                  experimentAllocation:
                    defaultVariation: 9
                    canReshuffle: true
                  seed: 9
                  variations:
                  - weight: 5
                    _untracked: true
                    variation: 4
                  - weight: 5
                    _untracked: true
                    variation: 4
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                trackEvents: true
                variation: 1
              - rollout:
                  experimentAllocation:
                    defaultVariation: 9
                    canReshuffle: true
                  seed: 9
                  variations:
                  - weight: 5
                    _untracked: true
                    variation: 4
                  - weight: 5
                    _untracked: true
                    variation: 4
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                trackEvents: true
                variation: 1
              version: 6
              targets:
              - values:
                - values
                - values
                variation: 7
              - values:
                - values
                - values
                variation: 7
              prerequisites:
              - key: key
                variation: 9
              - key: key
                variation: 9
              archived: true
              _debugEventsUntilDate: 6
              _summary:
                prerequisites: 3
              trackEventsFallthrough: true
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              _environmentName: _environmentName
              _site:
                href: href
                type: type
              sel: sel
              lastModified: 1
              trackEvents: true
              fallthrough:
                rollout:
                  experimentAllocation:
                    defaultVariation: 9
                    canReshuffle: true
                  seed: 9
                  variations:
                  - weight: 5
                    _untracked: true
                    variation: 4
                  - weight: 5
                    _untracked: true
                    variation: 4
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                trackEvents: true
                variation: 6
              offVariation: 8
              "on": true
          kind: kind
          experiments:
            baselineIdx: 1
            items:
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 9
                  stopDate: 3
                  enabledPeriods:
                  - startDate: 2
                    stopDate: 4
                  - startDate: 2
                    stopDate: 4
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                isActive: true
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                urls:
                - null
                - null
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                _attachedFeatures:
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                name: name
                selector: selector
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                _version: 7
                key: key
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 9
                  stopDate: 3
                  enabledPeriods:
                  - startDate: 2
                    stopDate: 4
                  - startDate: 2
                    stopDate: 4
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                isActive: true
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                urls:
                - null
                - null
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                _attachedFeatures:
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                - _links:
                    key:
                      href: href
                      type: type
                  _site:
                    href: href
                    type: type
                  name: name
                  key: key
                name: name
                selector: selector
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                _version: 7
                key: key
          description: description
          creationDate: 6
          tags:
          - tags
          - tags
          goalIds:
          - goalIds
          - goalIds
          archived: true
          includeInSnippet: true
          maintainerId: maintainerId
          customProperties:
            key:
              name: name
              value:
              - value
              - value
          defaults:
            onVariation: 1
            offVariation: 1
          variations:
          - name: name
            description: description
            _id: _id
            value: ""
          - name: name
            description: description
            _id: _id
            value: ""
          name: name
          _version: 0
          key: key
          variationJsonSchema: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/GlobalFlagRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        totalCount:
          type: integer
      required:
      - _links
      - items
      type: object
    GlobalFlagRep:
      example:
        archivedDate: 7
        temporary: true
        _maintainer:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        clientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        _links:
          key:
            href: href
            type: type
        environments:
          key:
            salt: salt
            rules:
            - rollout:
                experimentAllocation:
                  defaultVariation: 9
                  canReshuffle: true
                seed: 9
                variations:
                - weight: 5
                  _untracked: true
                  variation: 4
                - weight: 5
                  _untracked: true
                  variation: 4
                bucketBy: bucketBy
              clauses:
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              description: description
              trackEvents: true
              variation: 1
            - rollout:
                experimentAllocation:
                  defaultVariation: 9
                  canReshuffle: true
                seed: 9
                variations:
                - weight: 5
                  _untracked: true
                  variation: 4
                - weight: 5
                  _untracked: true
                  variation: 4
                bucketBy: bucketBy
              clauses:
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              description: description
              trackEvents: true
              variation: 1
            version: 6
            targets:
            - values:
              - values
              - values
              variation: 7
            - values:
              - values
              - values
              variation: 7
            prerequisites:
            - key: key
              variation: 9
            - key: key
              variation: 9
            archived: true
            _debugEventsUntilDate: 6
            _summary:
              prerequisites: 3
            trackEventsFallthrough: true
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
            _environmentName: _environmentName
            _site:
              href: href
              type: type
            sel: sel
            lastModified: 1
            trackEvents: true
            fallthrough:
              rollout:
                experimentAllocation:
                  defaultVariation: 9
                  canReshuffle: true
                seed: 9
                variations:
                - weight: 5
                  _untracked: true
                  variation: 4
                - weight: 5
                  _untracked: true
                  variation: 4
                bucketBy: bucketBy
              clauses:
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              description: description
              trackEvents: true
              variation: 6
            offVariation: 8
            "on": true
        kind: kind
        experiments:
          baselineIdx: 1
          items:
          - metricKey: metricKey
            environments:
            - environments
            - environments
            _environmentSettings:
              key:
                startDate: 9
                stopDate: 3
                enabledPeriods:
                - startDate: 2
                  stopDate: 4
                - startDate: 2
                  stopDate: 4
            _metric:
              _maintainer:
                firstName: firstName
                lastName: lastName
                role: role
                _links:
                  key:
                    href: href
                    type: type
                _id: _id
                email: email
              _links:
                key:
                  href: href
                  type: type
              kind: kind
              _attachedFlagCount: 5
              description: description
              _creationDate: 5
              isActive: true
              tags:
              - tags
              - tags
              maintainerId: maintainerId
              unit: unit
              urls:
              - null
              - null
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              successCriteria: 2
              _site:
                href: href
                type: type
              isNumeric: true
              eventKey: eventKey
              _attachedFeatures:
              - _links:
                  key:
                    href: href
                    type: type
                _site:
                  href: href
                  type: type
                name: name
                key: key
              - _links:
                  key:
                    href: href
                    type: type
                _site:
                  href: href
                  type: type
                name: name
                key: key
              name: name
              selector: selector
              _id: _id
              lastModified:
                date: 2000-01-23T04:56:07.000+00:00
              _version: 7
              key: key
          - metricKey: metricKey
            environments:
            - environments
            - environments
            _environmentSettings:
              key:
                startDate: 9
                stopDate: 3
                enabledPeriods:
                - startDate: 2
                  stopDate: 4
                - startDate: 2
                  stopDate: 4
            _metric:
              _maintainer:
                firstName: firstName
                lastName: lastName
                role: role
                _links:
                  key:
                    href: href
                    type: type
                _id: _id
                email: email
              _links:
                key:
                  href: href
                  type: type
              kind: kind
              _attachedFlagCount: 5
              description: description
              _creationDate: 5
              isActive: true
              tags:
              - tags
              - tags
              maintainerId: maintainerId
              unit: unit
              urls:
              - null
              - null
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              successCriteria: 2
              _site:
                href: href
                type: type
              isNumeric: true
              eventKey: eventKey
              _attachedFeatures:
              - _links:
                  key:
                    href: href
                    type: type
                _site:
                  href: href
                  type: type
                name: name
                key: key
              - _links:
                  key:
                    href: href
                    type: type
                _site:
                  href: href
                  type: type
                name: name
                key: key
              name: name
              selector: selector
              _id: _id
              lastModified:
                date: 2000-01-23T04:56:07.000+00:00
              _version: 7
              key: key
        description: description
        creationDate: 6
        tags:
        - tags
        - tags
        goalIds:
        - goalIds
        - goalIds
        archived: true
        includeInSnippet: true
        maintainerId: maintainerId
        customProperties:
          key:
            name: name
            value:
            - value
            - value
        defaults:
          onVariation: 1
          offVariation: 1
        variations:
        - name: name
          description: description
          _id: _id
          value: ""
        - name: name
          description: description
          _id: _id
          value: ""
        name: name
        _version: 0
        key: key
        variationJsonSchema: ""
      properties:
        name:
          type: string
        kind:
          type: string
        description:
          type: string
        key:
          type: string
        _version:
          type: integer
        creationDate:
          format: int64
          type: integer
        includeInSnippet:
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        variations:
          items:
            $ref: '#/components/schemas/VariateRep'
          type: array
        variationJsonSchema: {}
        temporary:
          type: boolean
        tags:
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        goalIds:
          items:
            type: string
          type: array
        experiments:
          $ref: '#/components/schemas/ExperimentInfoRep'
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        archived:
          type: boolean
        archivedDate:
          format: int64
          type: integer
        defaults:
          $ref: '#/components/schemas/FlagDefaultsRep'
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FlagConfigurationRep'
          type: object
      required:
      - _links
      - _version
      - archived
      - creationDate
      - customProperties
      - environments
      - experiments
      - key
      - kind
      - name
      - tags
      - temporary
      - variations
      type: object
    GlobalSegmentCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - generation: 5
          _flags:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          _externalLink: _externalLink
          _links:
            key:
              href: href
              type: type
          description: description
          rules:
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          creationDate: 0
          version: 1
          tags:
          - tags
          - tags
          excluded:
          - excluded
          - excluded
          _unboundedMetadata:
            deleted: true
            segmentId: segmentId
            includedCount: 2
            envId: envId
            excludedCount: 7
            version: 5
          deleted: true
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _external: _external
          name: name
          unbounded: true
          included:
          - included
          - included
          key: key
        - generation: 5
          _flags:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          _externalLink: _externalLink
          _links:
            key:
              href: href
              type: type
          description: description
          rules:
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          creationDate: 0
          version: 1
          tags:
          - tags
          - tags
          excluded:
          - excluded
          - excluded
          _unboundedMetadata:
            deleted: true
            segmentId: segmentId
            includedCount: 2
            envId: envId
            excludedCount: 7
            version: 5
          deleted: true
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _external: _external
          name: name
          unbounded: true
          included:
          - included
          - included
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/SegmentRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      required:
      - _links
      - items
      type: object
    IntegrationStatusRep:
      example:
        responseBody: responseBody
        statusCode: 5
        timestamp: 2
      properties:
        statusCode:
          type: integer
        responseBody:
          type: string
        timestamp:
          format: int64
          type: integer
      type: object
    IntegrationSubscriptionRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        apiKey: apiKey
        _links:
          key:
            href: href
            type: type
        kind: kind
        name: name
        statements:
        - role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        - role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        _id: _id
        _status:
          lastError: 1
          successCount: 0
          lastSuccess: 6
          errorCount: 5
          errors:
          - responseBody: responseBody
            statusCode: 5
            timestamp: 2
          - responseBody: responseBody
            statusCode: 5
            timestamp: 2
        config:
          key: ""
        url: url
        "on": true
        tags:
        - tags
        - tags
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _id:
          type: string
        kind:
          type: string
        name:
          type: string
        config:
          additionalProperties: {}
          type: object
        statements:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        "on":
          type: boolean
        tags:
          items:
            type: string
          type: array
        _access:
          $ref: '#/components/schemas/AccessRep'
        _status:
          $ref: '#/components/schemas/IntegrationSubscriptionStatusRep'
        url:
          type: string
        apiKey:
          type: string
      type: object
    IntegrationSubscriptionRepCollection:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          apiKey: apiKey
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          statements:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          _id: _id
          _status:
            lastError: 1
            successCount: 0
            lastSuccess: 6
            errorCount: 5
            errors:
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
          config:
            key: ""
          url: url
          "on": true
          tags:
          - tags
          - tags
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          apiKey: apiKey
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          statements:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          _id: _id
          _status:
            lastError: 1
            successCount: 0
            lastSuccess: 6
            errorCount: 5
            errors:
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
          config:
            key: ""
          url: url
          "on": true
          tags:
          - tags
          - tags
        key: key
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/IntegrationSubscriptionRep'
          type: array
        key:
          type: string
      type: object
    IntegrationSubscriptionStatusRep:
      example:
        lastError: 1
        successCount: 0
        lastSuccess: 6
        errorCount: 5
        errors:
        - responseBody: responseBody
          statusCode: 5
          timestamp: 2
        - responseBody: responseBody
          statusCode: 5
          timestamp: 2
      properties:
        successCount:
          type: integer
        lastSuccess:
          format: int64
          type: integer
        lastError:
          format: int64
          type: integer
        errorCount:
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/IntegrationStatusRep'
          type: array
      type: object
    IntegrationSubscriptionTestEventRep:
      example:
        error: error
        statusCode: 0
      properties:
        statusCode:
          type: integer
        error:
          type: string
      type: object
    JSONPatch:
      items:
        $ref: '#/components/schemas/JSONPatchElt'
      type: array
    JSONPatchElt:
      example:
        op: replace
        path: /biscuits
        value: Chocolate Digestive
      properties:
        op:
          description: The type of operation to perform
          example: replace
          type: string
        path:
          description: A JSON Pointer string specifying the part of the document to
            operate on
          example: /biscuits
          type: string
        value:
          description: A JSON value used in "add", "replace", and "test" operations
          example: Chocolate Digestive
      required:
      - op
      - path
      - value
      type: object
    LastSeenMetadata:
      example:
        tokenId: 5b52207f8ca8e631d31fdb2b
      properties:
        tokenId:
          description: The ID of the token used in the member's last session
          example: 5b52207f8ca8e631d31fdb2b
          type: string
      type: object
    MemberCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 6
        items:
        - lastName: Loblaw
          _verified: true
          role: reader
          _pendingEmail: _pendingEmail
          teams:
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          _links:
            key:
              href: href
              type: type
          mfa: mfa
          excludedDashboards:
          - excludedDashboards
          - excludedDashboards
          _lastSeenMetadata:
            tokenId: 5b52207f8ca8e631d31fdb2b
          _integrationMetadata:
            key:
              ExternalId: ExternalId
          firstName: Bob
          _pendingInvite: true
          _lastSeen: 0
          _id: 507f1f77bcf86cd799439011
          email: bob@loblaw.com
          customRoles:
          - devOps
          - backend-devs
        - lastName: Loblaw
          _verified: true
          role: reader
          _pendingEmail: _pendingEmail
          teams:
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          _links:
            key:
              href: href
              type: type
          mfa: mfa
          excludedDashboards:
          - excludedDashboards
          - excludedDashboards
          _lastSeenMetadata:
            tokenId: 5b52207f8ca8e631d31fdb2b
          _integrationMetadata:
            key:
              ExternalId: ExternalId
          firstName: Bob
          _pendingInvite: true
          _lastSeen: 0
          _id: 507f1f77bcf86cd799439011
          email: bob@loblaw.com
          customRoles:
          - devOps
          - backend-devs
      properties:
        items:
          items:
            $ref: '#/components/schemas/MemberRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        totalCount:
          type: integer
      required:
      - _links
      - items
      type: object
    MemberDataRep:
      example:
        firstName: firstName
        lastName: lastName
        _links:
          key:
            href: href
            type: type
        _id: _id
        email: email
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      type: object
    MemberRep:
      example:
        lastName: Loblaw
        _verified: true
        role: reader
        _pendingEmail: _pendingEmail
        teams:
        - name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          key: key
        - name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          key: key
        _links:
          key:
            href: href
            type: type
        mfa: mfa
        excludedDashboards:
        - excludedDashboards
        - excludedDashboards
        _lastSeenMetadata:
          tokenId: 5b52207f8ca8e631d31fdb2b
        _integrationMetadata:
          key:
            ExternalId: ExternalId
        firstName: Bob
        _pendingInvite: true
        _lastSeen: 0
        _id: 507f1f77bcf86cd799439011
        email: bob@loblaw.com
        customRoles:
        - devOps
        - backend-devs
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _id:
          description: The member's ID
          example: 507f1f77bcf86cd799439011
          type: string
        firstName:
          description: The member's first name
          example: Bob
          type: string
        lastName:
          description: The member's last name
          example: Loblaw
          type: string
        role:
          description: The member's built-in role. If the member has no custom roles,
            this role will be in effect.
          example: reader
          type: string
        email:
          description: The member's e-mail address
          example: bob@loblaw.com
          type: string
        _pendingInvite:
          description: Whether or not the member has a pending invitation
          type: boolean
        _verified:
          description: Whether or not the member's e-mail address has been verified
          type: boolean
        _pendingEmail:
          type: string
        customRoles:
          description: The set of custom roles (as keys) assigned to the member
          example:
          - devOps
          - backend-devs
          items:
            type: string
          type: array
        mfa:
          description: Whether or not multi-factor authentication is enabled for this
            member
          type: string
        excludedDashboards:
          description: Default dashboards that the team member has chosen to ignore
          items:
            type: string
          type: array
        _lastSeen:
          format: int64
          type: integer
        _lastSeenMetadata:
          $ref: '#/components/schemas/LastSeenMetadata'
        _integrationMetadata:
          additionalProperties:
            $ref: '#/components/schemas/accounts.IntegrationSubscriptionMetadata'
          type: object
        teams:
          items:
            $ref: '#/components/schemas/MemberTeamSummaryRep'
          type: array
      required:
      - _id
      - _lastSeen
      - _links
      - _pendingInvite
      - _verified
      - customRoles
      - email
      - excludedDashboards
      - mfa
      - role
      type: object
    MemberSummaryRep:
      example:
        firstName: firstName
        lastName: lastName
        role: role
        _links:
          key:
            href: href
            type: type
        _id: _id
        email: email
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        email:
          type: string
      required:
      - _id
      - _links
      - email
      - role
      type: object
    MemberTeamSummaryRep:
      example:
        name: name
        customRoleKeys:
        - customRoleKeys
        - customRoleKeys
        key: key
      properties:
        customRoleKeys:
          items:
            type: string
          type: array
        key:
          type: string
        name:
          type: string
      required:
      - customRoleKeys
      - key
      - name
      type: object
    MetricCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          isActive: true
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          urls:
          - null
          - null
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          _attachedFeatures:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          selector: selector
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          _version: 7
          key: key
        - _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          isActive: true
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          urls:
          - null
          - null
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          _attachedFeatures:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          selector: selector
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          _version: 7
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/MetricListingRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    MetricListingRep:
      example:
        _maintainer:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        _links:
          key:
            href: href
            type: type
        kind: kind
        _attachedFlagCount: 5
        description: description
        _creationDate: 5
        isActive: true
        tags:
        - tags
        - tags
        maintainerId: maintainerId
        unit: unit
        urls:
        - null
        - null
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        successCriteria: 2
        _site:
          href: href
          type: type
        isNumeric: true
        eventKey: eventKey
        _attachedFeatures:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        name: name
        selector: selector
        _id: _id
        lastModified:
          date: 2000-01-23T04:56:07.000+00:00
        _version: 7
        key: key
      properties:
        _id:
          type: string
        key:
          type: string
        name:
          type: string
        kind:
          type: string
        _attachedFlagCount:
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        tags:
          items:
            type: string
          type: array
        _creationDate:
          format: int64
          type: integer
        lastModified:
          $ref: '#/components/schemas/goals.Modification'
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        description:
          type: string
        isNumeric:
          type: boolean
        successCriteria:
          type: integer
        unit:
          type: string
        eventKey:
          type: string
        isActive:
          type: boolean
        _attachedFeatures:
          items:
            $ref: '#/components/schemas/FlagListingRep'
          type: array
        _version:
          type: integer
        selector:
          type: string
        urls:
          items:
            $ref: '#/components/schemas/goals.UrlMatcher'
          type: array
      type: object
    MetricRep:
      example:
        _maintainer:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        _links:
          key:
            href: href
            type: type
        kind: kind
        _attachedFlagCount: 0
        description: description
        _creationDate: 6
        isActive: true
        tags:
        - tags
        - tags
        maintainerId: maintainerId
        unit: unit
        urls:
        - null
        - null
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        successCriteria: 1
        _site:
          href: href
          type: type
        isNumeric: true
        eventKey: eventKey
        _attachedFeatures:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        name: name
        selector: selector
        _id: _id
        lastModified:
          date: 2000-01-23T04:56:07.000+00:00
        _version: 5
        key: key
      properties:
        _id:
          type: string
        key:
          type: string
        name:
          type: string
        kind:
          type: string
        _attachedFlagCount:
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        tags:
          items:
            type: string
          type: array
        _creationDate:
          format: int64
          type: integer
        lastModified:
          $ref: '#/components/schemas/goals.Modification'
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        description:
          type: string
        isNumeric:
          type: boolean
        successCriteria:
          type: integer
        unit:
          type: string
        eventKey:
          type: string
        isActive:
          type: boolean
        _attachedFeatures:
          items:
            $ref: '#/components/schemas/FlagListingRep'
          type: array
        _version:
          type: integer
        selector:
          type: string
        urls:
          items:
            $ref: '#/components/schemas/goals.UrlMatcher'
          type: array
      type: object
    MultiEnvDependentFlagsCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        items:
        - environments:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          key: key
        - environments:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/DependentFlagWithEnvs'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      required:
      - _links
      - _site
      - items
      type: object
    ParentResourceRep:
      example:
        _links:
          key:
            href: href
            type: type
        resource: ""
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        name:
          type: string
        resource: {}
      type: object
    PatchWithComment:
      example:
        patch:
        - op: replace
          path: /biscuits
          value: Chocolate Digestive
        - op: replace
          path: /biscuits
          value: Chocolate Digestive
        comment: comment
      properties:
        patch:
          items:
            $ref: '#/components/schemas/JSONPatchElt'
          type: array
        comment:
          type: string
      required:
      - patch
      type: object
    ProjectCollectionRep:
      example:
        _links:
          self:
            href: /api/v2/projects
            type: application/json
        items:
        - includeInSnippetByDefault: true
          _links:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: my-environment
            tags:
            - ops
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: my-environment
            tags:
            - ops
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: My Project
          _id: 57be1db38b75bf0772d11383
          key: my-project
          tags:
          - ops
        - includeInSnippetByDefault: true
          _links:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: my-environment
            tags:
            - ops
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: my-environment
            tags:
            - ops
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: My Project
          _id: 57be1db38b75bf0772d11383
          key: my-project
          tags:
          - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          description: A link to this resource.
          example:
            self:
              href: /api/v2/projects
              type: application/json
          type: object
        items:
          description: List of projects.
          items:
            $ref: '#/components/schemas/ProjectRep'
          type: array
      type: object
    ProjectListingRep:
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          example:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          type: object
        _id:
          example: 57be1db38b75bf0772d11383
          type: string
        key:
          example: my-project
          type: string
        includeInSnippetByDefault:
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        name:
          example: My Project
          type: string
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        environments:
          items:
            $ref: '#/components/schemas/EnvironmentRep'
          type: array
      type: object
    ProjectPost:
      example:
        includeInSnippetByDefault: true
        environments:
        - '{}'
        - '{}'
        defaultClientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        name: My Project
        key: my-project
        tags:
        - ops
      properties:
        name:
          description: A human-friendly name for the project.
          example: My Project
          type: string
        key:
          description: A unique key used to reference the project in your code.
          example: my-project
          type: string
        includeInSnippetByDefault:
          description: Whether or not flags created in this project are made available
            to the client-side JavaScript SDK by default.
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/DefaultClientSideAvailabilityPost'
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        environments:
          description: Creates the provided environments for this project. If omitted
            default environments will be created instead.
          items:
            type: object
          type: array
      required:
      - key
      - name
      type: object
    ProjectRep:
      example:
        includeInSnippetByDefault: true
        _links:
          environments:
            href: /api/v2/projects/my-project/environments
            type: application/json
          self:
            href: /api/v2/projects/my-project
            type: application/json
        environments:
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: false
            Required: true
            serviceConfig: {}
            requiredApprovalTags:
            - require-approval
            bypassApprovalsForPendingChanges: false
            canApplyDeclinedChanges: false
            minNumApprovals: 1
          apiKey: XYZ
          color: F5A623
          _links:
            self:
              href: /api/v2/projects/my-project/environments/my-environment
              type: application/json
          name: My Environment
          defaultTtl: 5
          _id: 57be1db38b75bf0772d11384
          mobileKey: XYZ
          secureMode: true
          defaultTrackEvents: false
          key: my-environment
          tags:
          - ops
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: false
            Required: true
            serviceConfig: {}
            requiredApprovalTags:
            - require-approval
            bypassApprovalsForPendingChanges: false
            canApplyDeclinedChanges: false
            minNumApprovals: 1
          apiKey: XYZ
          color: F5A623
          _links:
            self:
              href: /api/v2/projects/my-project/environments/my-environment
              type: application/json
          name: My Environment
          defaultTtl: 5
          _id: 57be1db38b75bf0772d11384
          mobileKey: XYZ
          secureMode: true
          defaultTrackEvents: false
          key: my-environment
          tags:
          - ops
        defaultClientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        name: My Project
        _id: 57be1db38b75bf0772d11383
        key: my-project
        tags:
        - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          example:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          type: object
        _id:
          example: 57be1db38b75bf0772d11383
          type: string
        key:
          example: my-project
          type: string
        includeInSnippetByDefault:
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        name:
          example: My Project
          type: string
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        environments:
          items:
            $ref: '#/components/schemas/EnvironmentRep'
          type: array
      type: object
    PubNubDetailRep:
      properties:
        channel:
          type: string
        cipherKey:
          type: string
      type: object
    RolloutRep:
      example:
        experimentAllocation:
          defaultVariation: 9
          canReshuffle: true
        seed: 9
        variations:
        - weight: 5
          _untracked: true
          variation: 4
        - weight: 5
          _untracked: true
          variation: 4
        bucketBy: bucketBy
      properties:
        variations:
          items:
            $ref: '#/components/schemas/WeightedVariationRep'
          type: array
        experimentAllocation:
          $ref: '#/components/schemas/ExperimentAllocationRep'
        seed:
          type: integer
        bucketBy:
          type: string
      required:
      - variations
      type: object
    RuleRep:
      example:
        rollout:
          experimentAllocation:
            defaultVariation: 9
            canReshuffle: true
          seed: 9
          variations:
          - weight: 5
            _untracked: true
            variation: 4
          - weight: 5
            _untracked: true
            variation: 4
          bucketBy: bucketBy
        clauses:
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        description: description
        trackEvents: true
        variation: 1
      properties:
        variation:
          type: integer
        rollout:
          $ref: '#/components/schemas/RolloutRep'
        clauses:
          items:
            $ref: '#/components/schemas/RuleRep_clauses'
          type: array
        trackEvents:
          type: boolean
        description:
          type: string
      required:
      - clauses
      - trackEvents
      type: object
    ScheduledChangesCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - instructions:
          - null
          - null
          _maintainerId: _maintainerId
          _links:
            key:
              href: href
              type: type
          executionDate: 1
          conflicts: ""
          _id: _id
          _creationDate: 0
          _version: 6
        - instructions:
          - null
          - null
          _maintainerId: _maintainerId
          _links:
            key:
              href: href
              type: type
          executionDate: 1
          conflicts: ""
          _id: _id
          _creationDate: 0
          _version: 6
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScheduledChangesRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    ScheduledChangesRep:
      example:
        instructions:
        - null
        - null
        _maintainerId: _maintainerId
        _links:
          key:
            href: href
            type: type
        executionDate: 1
        conflicts: ""
        _id: _id
        _creationDate: 0
        _version: 6
      properties:
        _id:
          type: string
        _creationDate:
          format: int64
          type: integer
        _maintainerId:
          type: string
        _version:
          type: integer
        executionDate:
          format: int64
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/feature_workflows.Instruction'
          type: array
        conflicts: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    SegmentRep:
      example:
        generation: 5
        _flags:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        _externalLink: _externalLink
        _links:
          key:
            href: href
            type: type
        description: description
        rules:
        - clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          weight: 6
          _id: _id
          bucketBy: bucketBy
        - clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          weight: 6
          _id: _id
          bucketBy: bucketBy
        creationDate: 0
        version: 1
        tags:
        - tags
        - tags
        excluded:
        - excluded
        - excluded
        _unboundedMetadata:
          deleted: true
          segmentId: segmentId
          includedCount: 2
          envId: envId
          excludedCount: 7
          version: 5
        deleted: true
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _external: _external
        name: name
        unbounded: true
        included:
        - included
        - included
        key: key
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        creationDate:
          format: int64
          type: integer
        key:
          type: string
        included:
          items:
            type: string
          type: array
        excluded:
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        rules:
          items:
            $ref: '#/components/schemas/SegmentRuleRep'
          type: array
        version:
          type: integer
        deleted:
          type: boolean
        _access:
          $ref: '#/components/schemas/AccessRep'
        _flags:
          items:
            $ref: '#/components/schemas/FlagListingRep'
          type: array
        unbounded:
          type: boolean
        generation:
          type: integer
        _unboundedMetadata:
          $ref: '#/components/schemas/unbounded.SegmentMetadata'
        _external:
          type: string
        _externalLink:
          type: string
      required:
      - _links
      - creationDate
      - deleted
      - excluded
      - generation
      - included
      - key
      - name
      - rules
      - tags
      - version
      type: object
    SegmentRuleRep:
      example:
        clauses:
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        weight: 6
        _id: _id
        bucketBy: bucketBy
      properties:
        _id:
          type: string
        clauses:
          items:
            $ref: '#/components/schemas/clauses.Clause'
          type: array
        weight:
          type: integer
        bucketBy:
          type: string
      type: object
    StatementRep:
      example:
        role_name: role_name
        notActions:
        - null
        - null
        notResources:
        - {}
        - {}
        effect: effect
        resources:
        - '{}'
        - '{}'
        actions:
        - actions
        - actions
      properties:
        resources:
          items:
            properties: {}
            type: object
          type: array
        notResources:
          items:
            $ref: '#/components/schemas/roles.ResourceSpecifierImpl'
          type: array
        actions:
          items:
            type: string
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
        role_name:
          type: string
      required:
      - effect
      type: object
    SubjectDataRep:
      example:
        _links:
          key:
            href: href
            type: type
        avatarUrl: avatarUrl
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        name:
          type: string
        avatarUrl:
          type: string
      type: object
    TargetResourceRep:
      example:
        _links:
          key:
            href: href
            type: type
        name: name
        resources:
        - null
        - null
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        name:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/roles.ResourceIdentifier'
          type: array
      type: object
    TitleRep:
      properties:
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
        delta: {}
        triggerBody: {}
        merge: {}
        previousVersion: {}
        currentVersion: {}
        subentries:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep'
          type: array
      type: object
    TokenDataRep:
      example:
        ending: ending
        _links:
          key:
            href: href
            type: type
        name: name
        _id: _id
        serviceToken: true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _id:
          type: string
        name:
          type: string
        ending:
          type: string
        serviceToken:
          type: boolean
      type: object
    UserListRep:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 0
        items:
        - sortValue: ""
          environmentId: environmentId
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          lastPing: 2000-01-23T04:56:07.000+00:00
          ownerId: ownerId
          user:
            country: country
            lastName: lastName
            ip: ip
            custom:
              key: ""
            avatar: avatar
            secondary: secondary
            firstName: firstName
            name: name
            anonymous: true
            privateAttrs:
            - privateAttrs
            - privateAttrs
            derived:
              key:
                lastDerived: 2000-01-23T04:56:07.000+00:00
                value: ""
            key: key
            email: email
        - sortValue: ""
          environmentId: environmentId
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          lastPing: 2000-01-23T04:56:07.000+00:00
          ownerId: ownerId
          user:
            country: country
            lastName: lastName
            ip: ip
            custom:
              key: ""
            avatar: avatar
            secondary: secondary
            firstName: firstName
            name: name
            anonymous: true
            privateAttrs:
            - privateAttrs
            - privateAttrs
            derived:
              key:
                lastDerived: 2000-01-23T04:56:07.000+00:00
                value: ""
            key: key
            email: email
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        totalCount:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserRep'
          type: array
      type: object
    UserRecord:
      properties:
        lastPing:
          format: date-time
          type: string
        environmentId:
          type: string
        ownerId:
          type: string
        user:
          $ref: '#/components/schemas/models.User'
        sortValue: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    UserRep:
      example:
        sortValue: ""
        environmentId: environmentId
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        lastPing: 2000-01-23T04:56:07.000+00:00
        ownerId: ownerId
        user:
          country: country
          lastName: lastName
          ip: ip
          custom:
            key: ""
          avatar: avatar
          secondary: secondary
          firstName: firstName
          name: name
          anonymous: true
          privateAttrs:
          - privateAttrs
          - privateAttrs
          derived:
            key:
              lastDerived: 2000-01-23T04:56:07.000+00:00
              value: ""
          key: key
          email: email
      properties:
        lastPing:
          format: date-time
          type: string
        environmentId:
          type: string
        ownerId:
          type: string
        user:
          $ref: '#/components/schemas/models.User'
        sortValue: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    UserSettingRep:
      example:
        _links:
          key:
            href: href
            type: type
        _value: ""
        setting: ""
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        _value: {}
        setting: {}
      type: object
    UserSettingsCollection:
      example:
        _links:
          key:
            href: href
            type: type
        items:
          key:
            _links:
              key:
                href: href
                type: type
            _value: ""
            setting: ""
      properties:
        items:
          additionalProperties:
            $ref: '#/components/schemas/UserSettingRep'
          type: object
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      type: object
    VariateRep:
      example:
        name: name
        description: description
        _id: _id
        value: ""
      properties:
        _id:
          type: string
        value: {}
        description:
          type: string
        name:
          type: string
      required:
      - value
      type: object
    VariationOrRolloutRep:
      example:
        rollout:
          experimentAllocation:
            defaultVariation: 9
            canReshuffle: true
          seed: 9
          variations:
          - weight: 5
            _untracked: true
            variation: 4
          - weight: 5
            _untracked: true
            variation: 4
          bucketBy: bucketBy
        clauses:
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        description: description
        trackEvents: true
        variation: 6
      properties:
        variation:
          type: integer
        rollout:
          $ref: '#/components/schemas/RolloutRep'
        clauses:
          items:
            $ref: '#/components/schemas/RuleRep_clauses'
          type: array
        trackEvents:
          type: boolean
        description:
          type: string
      type: object
    VariationSummary:
      properties:
        rules:
          type: integer
        nullRules:
          type: integer
        targets:
          type: integer
        isFallthrough:
          type: boolean
        isOff:
          type: boolean
        rollout:
          type: integer
        bucketBy:
          type: string
      required:
      - nullRules
      - rules
      - targets
      type: object
    VersionsRep:
      example:
        validVersions:
        - 0
        - 0
        latestVersion: 6
        currentVersion: 1
        beta: true
      properties:
        validVersions:
          items:
            type: integer
          type: array
        latestVersion:
          type: integer
        currentVersion:
          type: integer
        beta:
          type: boolean
      required:
      - currentVersion
      - latestVersion
      - validVersions
      type: object
    WeightedVariationRep:
      example:
        weight: 5
        _untracked: true
        variation: 4
      properties:
        variation:
          type: integer
        weight:
          type: integer
        _untracked:
          type: boolean
      required:
      - variation
      - weight
      type: object
    access_tokens.AccessTokenPost:
      properties:
        name:
          type: string
        description:
          type: string
        role:
          type: string
        customRoleIds:
          items:
            type: string
          type: array
        inlineRole:
          items:
            $ref: '#/components/schemas/access_tokens_AccessTokenPost_inlineRole'
          type: array
        serviceToken:
          type: boolean
        defaultApiVersion:
          type: integer
      type: object
    accounts.ApprovalRequestServiceKind:
      type: string
    accounts.ClientSideAvailability:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingMobileKey:
          type: boolean
        usingEnvironmentId:
          type: boolean
      type: object
    accounts.IntegrationMetadata:
      additionalProperties:
        $ref: '#/components/schemas/accounts.IntegrationSubscriptionMetadata'
      type: object
    accounts.IntegrationSubscriptionMetadata:
      example:
        ExternalId: ExternalId
      properties:
        ExternalId:
          type: string
      type: object
    api.BranchCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/api.BranchRep'
          type: array
      type: object
    api.BranchRep:
      example:
        head: head
        syncTime: 1
        references:
        - path: path
          hint: hint
          hunks:
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
        - path: path
          hint: hint
          hunks:
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
        _links:
          key: ""
        name: name
        updateSequenceId: 6
      properties:
        name:
          type: string
        head:
          type: string
        updateSequenceId:
          format: int64
          type: integer
        syncTime:
          format: int64
          type: integer
        references:
          items:
            $ref: '#/components/schemas/api.ReferenceRep'
          type: array
        _links:
          additionalProperties: {}
          type: object
      type: object
    api.ExtinctionCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
          key:
          - time: 0
            message: message
            projKey: projKey
            flagKey: flagKey
            revision: revision
          - time: 0
            message: message
            projKey: projKey
            flagKey: flagKey
            revision: revision
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          additionalProperties:
            items:
              $ref: '#/components/schemas/api.ExtinctionRep'
            type: array
          type: object
      type: object
    api.ExtinctionRep:
      example:
        time: 0
        message: message
        projKey: projKey
        flagKey: flagKey
        revision: revision
      properties:
        revision:
          type: string
        message:
          type: string
        time:
          format: int64
          type: integer
        flagKey:
          type: string
        projKey:
          type: string
      type: object
    api.HunkRep:
      example:
        aliases:
        - aliases
        - aliases
        startingLineNumber: 5
        lines: lines
        projKey: projKey
        flagKey: flagKey
      properties:
        startingLineNumber:
          type: integer
        lines:
          type: string
        projKey:
          type: string
        flagKey:
          type: string
        aliases:
          items:
            type: string
          type: array
      type: object
    api.NewMemberForm:
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        customRoles:
          items:
            type: string
          type: array
      required:
      - email
      type: object
    api.ReferenceRep:
      example:
        path: path
        hint: hint
        hunks:
        - aliases:
          - aliases
          - aliases
          startingLineNumber: 5
          lines: lines
          projKey: projKey
          flagKey: flagKey
        - aliases:
          - aliases
          - aliases
          startingLineNumber: 5
          lines: lines
          projKey: projKey
          flagKey: flagKey
      properties:
        path:
          type: string
        hint:
          type: string
        hunks:
          items:
            $ref: '#/components/schemas/api.HunkRep'
          type: array
      type: object
    api.RepositoryCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key: ""
          defaultBranch: defaultBranch
          name: name
          sourceLink: sourceLink
          hunkUrlTemplate: hunkUrlTemplate
          type: type
          branches:
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          commitUrlTemplate: commitUrlTemplate
          version: 0
          enabled: true
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key: ""
          defaultBranch: defaultBranch
          name: name
          sourceLink: sourceLink
          hunkUrlTemplate: hunkUrlTemplate
          type: type
          branches:
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          commitUrlTemplate: commitUrlTemplate
          version: 0
          enabled: true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/api.RepositoryRep'
          type: array
      type: object
    api.RepositoryRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key: ""
        defaultBranch: defaultBranch
        name: name
        sourceLink: sourceLink
        hunkUrlTemplate: hunkUrlTemplate
        type: type
        branches:
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
        commitUrlTemplate: commitUrlTemplate
        version: 0
        enabled: true
      properties:
        name:
          type: string
        sourceLink:
          type: string
        commitUrlTemplate:
          type: string
        hunkUrlTemplate:
          type: string
        type:
          type: string
        defaultBranch:
          type: string
        enabled:
          type: boolean
        version:
          type: integer
        branches:
          items:
            $ref: '#/components/schemas/api.BranchRep'
          type: array
        _links:
          additionalProperties: {}
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    api.StatisticCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        flags:
          key:
          - _links:
              key:
                href: href
                type: type
            defaultBranch: defaultBranch
            name: name
            sourceLink: sourceLink
            hunkCount: 6
            version: 0
            enabled: true
          - _links:
              key:
                href: href
                type: type
            defaultBranch: defaultBranch
            name: name
            sourceLink: sourceLink
            hunkCount: 6
            version: 0
            enabled: true
      properties:
        flags:
          additionalProperties:
            items:
              $ref: '#/components/schemas/api.StatisticRep'
            type: array
          type: object
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      required:
      - _links
      - flags
      type: object
    api.StatisticRep:
      example:
        _links:
          key:
            href: href
            type: type
        defaultBranch: defaultBranch
        name: name
        sourceLink: sourceLink
        hunkCount: 6
        version: 0
        enabled: true
      properties:
        name:
          type: string
        sourceLink:
          type: string
        defaultBranch:
          type: string
        enabled:
          type: boolean
        version:
          type: integer
        hunkCount:
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
      required:
      - _links
      - defaultBranch
      - enabled
      - hunkCount
      - name
      - sourceLink
      - version
      type: object
    api.StatisticsRoot:
      example:
        projects:
        - href: href
          type: type
        - href: href
          type: type
        self:
          href: href
          type: type
      properties:
        projects:
          items:
            $ref: '#/components/schemas/core.Link'
          type: array
        self:
          $ref: '#/components/schemas/core.Link'
      type: object
    api.repositoryPost:
      properties:
        name:
          type: string
        sourceLink:
          type: string
        commitUrlTemplate:
          type: string
        hunkUrlTemplate:
          type: string
        type:
          type: string
        defaultBranch:
          type: string
      type: object
    api2.ValuePut:
      properties:
        setting: {}
        comment:
          type: string
      type: object
    api2.ipList:
      example:
        addresses:
        - addresses
        - addresses
        outboundAddresses:
        - outboundAddresses
        - outboundAddresses
      properties:
        addresses:
          items:
            type: string
          type: array
        outboundAddresses:
          items:
            type: string
          type: array
      type: object
    approvals_endpoints.createCopyFlagConfigApprovalRequestRequest:
      properties:
        comment:
          type: string
        description:
          type: string
        notifyMemberIds:
          items:
            type: string
          type: array
        source:
          $ref: '#/components/schemas/approvals_endpoints.sourceFlag'
        includedActions:
          items:
            type: string
          type: array
        excludedActions:
          items:
            type: string
          type: array
      type: object
    approvals_endpoints.createFlagConfigApprovalRequestRequest:
      properties:
        comment:
          type: string
        description:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/feature_workflows.Instruction'
          type: array
        notifyMemberIds:
          items:
            type: string
          type: array
        executionDate:
          format: int64
          type: integer
        operatingOnId:
          type: string
      type: object
    approvals_endpoints.postApprovalRequestApplyRequest:
      properties:
        comment:
          type: string
      type: object
    approvals_endpoints.postApprovalRequestReviewRequest:
      properties:
        kind:
          type: string
        comment:
          type: string
      type: object
    approvals_endpoints.sourceFlag:
      properties:
        key:
          type: string
        version:
          type: integer
      type: object
    bson.ObjectId:
      type: string
    clauses.Clause:
      example:
        op: op
        negate: true
        values:
        - ""
        - ""
        _id: _id
        attribute: attribute
      properties:
        _id:
          type: string
        attribute:
          type: string
        op:
          type: string
        values:
          items: {}
          type: array
        negate:
          type: boolean
      required:
      - negate
      - op
      - values
      type: object
    clauses.Operator:
      type: string
    coderefs.Branch:
      properties:
        name:
          type: string
        sha:
          type: string
        update_sequence_Id:
          format: int64
          type: integer
        sync_time:
          format: int64
          type: integer
        references:
          items:
            $ref: '#/components/schemas/coderefs.ReferenceFile'
          type: array
      type: object
    coderefs.Extinction:
      properties:
        revision:
          type: string
        message:
          type: string
        time:
          format: int64
          type: integer
        flag_key:
          type: string
        project_key:
          type: string
        repo_name:
          type: string
      type: object
    coderefs.Hunk:
      properties:
        project_key:
          type: string
        flag_key:
          type: string
        starting_line_num:
          type: integer
        lines:
          type: string
        aliases:
          items:
            type: string
          type: array
      type: object
    coderefs.HunkCollection:
      items:
        $ref: '#/components/schemas/coderefs.Hunk'
      type: array
    coderefs.ReferenceFile:
      properties:
        path:
          type: string
        hint:
          type: string
        hunks:
          items:
            $ref: '#/components/schemas/coderefs.Hunk'
          type: array
      type: object
    core.Link:
      example:
        href: href
        type: type
      properties:
        href:
          type: string
        type:
          type: string
      type: object
    customProperty:
      example:
        name: name
        value:
        - value
        - value
      properties:
        name:
          type: string
        value:
          items:
            type: string
          type: array
      required:
      - name
      - value
      type: object
    expiring_user_targets_endpoints.patchSegmentInstruction:
      properties:
        kind:
          type: string
        userKey:
          type: string
        targetType:
          type: string
        value:
          type: integer
        version:
          type: integer
      type: object
    expiring_user_targets_endpoints.patchSegmentRequest:
      properties:
        comment:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/expiring_user_targets_endpoints.patchSegmentInstruction'
          type: array
      type: object
    expiring_user_targets_endpoints.requestKind:
      type: string
    feature_workflows.FeatureWorkflowId:
      type: string
    feature_workflows.Instruction:
      additionalProperties: {}
      type: object
    feature_workflows.Instructions:
      items:
        $ref: '#/components/schemas/feature_workflows.Instruction'
      type: array
    flags.FlagCopyConfigEnvironment:
      properties:
        key:
          type: string
        currentVersion:
          type: integer
      required:
      - key
      type: object
    flags.FlagCopyConfigPost:
      properties:
        source:
          $ref: '#/components/schemas/flags.FlagCopyConfigEnvironment'
        target:
          $ref: '#/components/schemas/flags.FlagCopyConfigEnvironment'
        comment:
          type: string
        includedActions:
          items:
            type: string
          type: array
        excludedActions:
          items:
            type: string
          type: array
      required:
      - source
      - target
      type: object
    flags.Prerequisite:
      properties:
        key:
          type: string
        variation:
          type: integer
      type: object
    flags.Target:
      properties:
        values:
          items:
            type: string
          type: array
        variation:
          type: integer
      type: object
    flags.Variate:
      properties:
        id:
          type: string
        value: {}
        description:
          type: string
        name:
          type: string
      required:
      - value
      type: object
    ftime.UnixMillis:
      format: int64
      type: integer
    goals.Modification:
      example:
        date: 2000-01-23T04:56:07.000+00:00
      properties:
        date:
          format: date-time
          type: string
      type: object
    goals.SuccessCriteria:
      type: integer
    goals.UrlMatcher: {}
    goals.UrlMatchers:
      items:
        $ref: '#/components/schemas/goals.UrlMatcher'
      type: array
    integrations.subscriptionPost:
      properties:
        name:
          type: string
        statements:
          items:
            $ref: '#/components/schemas/roles.StatementPost'
          type: array
        "on":
          type: boolean
        tags:
          items:
            type: string
          type: array
        config:
          additionalProperties: {}
          type: object
        url:
          type: string
        apiKey:
          type: string
      type: object
    metrics.MetricPost:
      properties:
        key:
          type: string
        name:
          type: string
        description:
          type: string
        kind:
          description: 'One of: custom, click, pageview'
          type: string
        selector:
          description: Required for click metrics
          type: string
        urls:
          description: Required for click and pageview metrics
          items:
            $ref: '#/components/schemas/metrics_MetricPost_urls'
          type: array
        isActive:
          type: boolean
        isNumeric:
          type: boolean
        unit:
          type: string
        eventKey:
          description: Required for custom metrics
          type: string
        successCriteria: {}
        tags:
          items:
            type: string
          type: array
      type: object
    models.DerivedAttribute:
      example:
        lastDerived: 2000-01-23T04:56:07.000+00:00
        value: ""
      properties:
        value: {}
        lastDerived:
          format: date-time
          type: string
      type: object
    models.User:
      example:
        country: country
        lastName: lastName
        ip: ip
        custom:
          key: ""
        avatar: avatar
        secondary: secondary
        firstName: firstName
        name: name
        anonymous: true
        privateAttrs:
        - privateAttrs
        - privateAttrs
        derived:
          key:
            lastDerived: 2000-01-23T04:56:07.000+00:00
            value: ""
        key: key
        email: email
      properties:
        key:
          type: string
        secondary:
          type: string
        ip:
          type: string
        country:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        name:
          type: string
        anonymous:
          type: boolean
        custom:
          additionalProperties: {}
          type: object
        derived:
          additionalProperties:
            $ref: '#/components/schemas/models.DerivedAttribute'
          type: object
        privateAttrs:
          items:
            type: string
          type: array
      type: object
    roles.ActionIdentifier:
      type: string
    roles.ActionList:
      properties:
        Actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        Negate:
          type: boolean
      type: object
    roles.ActionSpecifier:
      type: string
    roles.Effect:
      type: string
    roles.ResourceAccess:
      properties:
        action:
          type: string
        resource: {}
      type: object
    roles.ResourceIdentifier: {}
    roles.ResourceKind:
      type: string
    roles.ResourceList:
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/roles.ResourceSpecifierImpl'
          type: array
        Negate:
          type: boolean
      type: object
    roles.ResourceSpecifier: {}
    roles.ResourceSpecifierImpl:
      example: {}
      properties: {}
      type: object
    roles.RoleType:
      type: string
    roles.Statement:
      properties:
        Effect:
          type: string
        Actions:
          $ref: '#/components/schemas/roles.ActionList'
        Resources:
          $ref: '#/components/schemas/roles.ResourceList'
      type: object
    roles.StatementPost:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    roles.StatementPostData:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    roles.StatementPostList:
      items:
        $ref: '#/components/schemas/roles.StatementPost'
      type: array
    segments.SegmentPost:
      properties:
        name:
          type: string
        key:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        unbounded:
          type: boolean
      required:
      - key
      - name
      type: object
    segments.unboundedTargetRep:
      example:
        excluded: true
        included: true
        userKey: userKey
      properties:
        userKey:
          type: string
        included:
          type: boolean
        excluded:
          type: boolean
      type: object
    sempatch.Instruction: {}
    sempatch.Instructions:
      items:
        $ref: '#/components/schemas/sempatch.Instruction'
      type: array
    shared.UrlPost:
      properties:
        kind:
          type: string
        url:
          type: string
        substring:
          type: string
        pattern:
          type: string
      type: object
    statement.StatementPost:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    statement.StatementPostData:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    unbounded.SegmentId:
      type: string
    unbounded.SegmentMetadata:
      example:
        deleted: true
        segmentId: segmentId
        includedCount: 2
        envId: envId
        excludedCount: 7
        version: 5
      properties:
        envId:
          type: string
        segmentId:
          type: string
        version:
          type: integer
        includedCount:
          type: integer
        excludedCount:
          type: integer
        deleted:
          type: boolean
      type: object
    unbounded.SegmentUserList:
      properties:
        add:
          items:
            type: string
          type: array
        remove:
          items:
            type: string
          type: array
      type: object
    unbounded.SegmentUserState:
      properties:
        included:
          $ref: '#/components/schemas/unbounded.SegmentUserList'
        excluded:
          $ref: '#/components/schemas/unbounded.SegmentUserList'
      type: object
    versioning.DateVersion:
      type: integer
    web.Conflict:
      example:
        reason: reason
        instruction:
          key: ""
      properties:
        instruction:
          additionalProperties: {}
          type: object
        reason:
          type: string
      type: object
    web.ConflictResponse:
      example:
        items:
        - kind: kind
          conflicts:
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
        - kind: kind
          conflicts:
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
      properties:
        items:
          items:
            $ref: '#/components/schemas/web.ConflictResponseInstruction'
          type: array
      type: object
    web.ConflictResponseConflict:
      example:
        reason: reason
        pendingChangeWillFail: true
        _id: _id
      properties:
        _id:
          type: string
        reason:
          type: string
        pendingChangeWillFail:
          type: boolean
      type: object
    web.ConflictResponseInstruction:
      example:
        kind: kind
        conflicts:
        - reason: reason
          pendingChangeWillFail: true
          _id: _id
        - reason: reason
          pendingChangeWillFail: true
          _id: _id
      properties:
        kind:
          type: string
        conflicts:
          items:
            $ref: '#/components/schemas/web.ConflictResponseConflict'
          type: array
      type: object
    web.CopiedFromEnv:
      example:
        version: 7
        key: key
      properties:
        key:
          type: string
        version:
          type: integer
      type: object
    web.ExpiringUserTargetError:
      example:
        instructionIndex: 2
        message: message
      properties:
        instructionIndex:
          type: integer
        message:
          type: string
      type: object
    web.ExpiringUserTargetItem:
      example:
        _resourceId:
          projectKey: projectKey
          kind: kind
          flagKey: flagKey
          key: key
          environmentKey: environmentKey
        variationId: variationId
        targetType: targetType
        _id: _id
        _version: 0
        userKey: userKey
        expirationDate: 6
      properties:
        _id:
          type: string
        _version:
          type: integer
        expirationDate:
          format: int64
          type: integer
        userKey:
          type: string
        targetType:
          type: string
        variationId:
          type: string
        _resourceId:
          $ref: '#/components/schemas/web.ResourceIDResponse'
      type: object
    web.ExpiringUserTargetResponse:
      example:
        failedInstructions: 5
        _links:
          key:
            href: href
            type: type
        successfulInstructions: 5
        items:
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
        totalInstructions: 1
        errors:
        - instructionIndex: 2
          message: message
        - instructionIndex: 2
          message: message
      properties:
        items:
          items:
            $ref: '#/components/schemas/web.ExpiringUserTargetItem'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        totalInstructions:
          type: integer
        successfulInstructions:
          type: integer
        failedInstructions:
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/web.ExpiringUserTargetError'
          type: array
      type: object
    web.FlagConfigApprovalRequestResponse:
      example:
        allReviews:
        - kind: kind
          comment: comment
          _id: _id
          creationDate: 1
          memberId: memberId
        - kind: kind
          comment: comment
          _id: _id
          creationDate: 1
          memberId: memberId
        instructions:
        - null
        - null
        serviceKind: serviceKind
        notifyMemberIds:
        - notifyMemberIds
        - notifyMemberIds
        _links:
          key:
            href: href
            type: type
        executionDate: 5
        description: description
        appliedDate: 5
        source:
          version: 7
          key: key
        creationDate: 6
        requestorId: requestorId
        integrationMetadata:
          externalUrl: externalUrl
          externalId: externalId
          externalStatus:
            display: display
            value: value
          lastChecked: 2
        conflicts:
        - reason: reason
          instruction:
            key: ""
        - reason: reason
          instruction:
            key: ""
        reviewStatus: reviewStatus
        appliedByMemberId: appliedByMemberId
        operatingOnId: operatingOnId
        _id: _id
        _version: 0
        status: status
      properties:
        _id:
          type: string
        _version:
          type: integer
        creationDate:
          format: int64
          type: integer
        serviceKind:
          type: string
        requestorId:
          type: string
        description:
          type: string
        reviewStatus:
          type: string
        allReviews:
          items:
            $ref: '#/components/schemas/web.ReviewResponse'
          type: array
        notifyMemberIds:
          items:
            type: string
          type: array
        appliedDate:
          format: int64
          type: integer
        appliedByMemberId:
          type: string
        status:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/feature_workflows.Instruction'
          type: array
        conflicts:
          items:
            $ref: '#/components/schemas/web.Conflict'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        executionDate:
          format: int64
          type: integer
        operatingOnId:
          type: string
        integrationMetadata:
          $ref: '#/components/schemas/web.IntegrationMetadata'
        source:
          $ref: '#/components/schemas/web.CopiedFromEnv'
      type: object
    web.FlagScheduledChangesInput:
      properties:
        Comment:
          type: string
        Instructions: {}
        ScheduledChangesWorkflowId: {}
        IgnoreConflicts:
          type: boolean
      type: object
    web.IntegrationMetadata:
      example:
        externalUrl: externalUrl
        externalId: externalId
        externalStatus:
          display: display
          value: value
        lastChecked: 2
      properties:
        externalId:
          type: string
        externalStatus:
          $ref: '#/components/schemas/web.IntegrationStatus'
        externalUrl:
          type: string
        lastChecked:
          format: int64
          type: integer
      type: object
    web.IntegrationStatus:
      example:
        display: display
        value: value
      properties:
        display:
          type: string
        value:
          type: string
      type: object
    web.PostFlagScheduledChangesInput:
      properties:
        Comment:
          type: string
        ExecutionDate: {}
        IgnoreConflicts:
          type: boolean
        Instructions: {}
      type: object
    web.ReportFlagScheduledChangesInput:
      properties:
        ExecutionDate: {}
        ExistingScheduledChangeId:
          type: string
        Instructions: {}
      type: object
    web.ResourceIDResponse:
      example:
        projectKey: projectKey
        kind: kind
        flagKey: flagKey
        key: key
        environmentKey: environmentKey
      properties:
        kind:
          type: string
        projectKey:
          type: string
        environmentKey:
          type: string
        flagKey:
          type: string
        key:
          type: string
      type: object
    web.ReviewResponse:
      example:
        kind: kind
        comment: comment
        _id: _id
        creationDate: 1
        memberId: memberId
      properties:
        _id:
          type: string
        kind:
          type: string
        creationDate:
          format: int64
          type: integer
        comment:
          type: string
        memberId:
          type: string
      type: object
    inline_response_200:
      properties:
        href:
          type: string
        type:
          type: string
      type: object
    InlineObject:
      example:
        project_key: project_key
        repo_name: repo_name
        time: 0
        flag_key: flag_key
        message: message
        revision: revision
      properties:
        revision:
          type: string
        message:
          type: string
        time:
          format: int64
          type: integer
        flag_key:
          type: string
        project_key:
          type: string
        repo_name:
          type: string
      type: object
    inline_response_200_1:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          apiKey: apiKey
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          statements:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          _id: _id
          _status:
            lastError: 1
            successCount: 0
            lastSuccess: 6
            errorCount: 5
            errors:
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
          config:
            key: ""
          url: url
          "on": true
          tags:
          - tags
          - tags
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          apiKey: apiKey
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          statements:
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          _id: _id
          _status:
            lastError: 1
            successCount: 0
            lastSuccess: 6
            errorCount: 5
            errors:
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
            - responseBody: responseBody
              statusCode: 5
              timestamp: 2
          config:
            key: ""
          url: url
          "on": true
          tags:
          - tags
          - tags
        key: key
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/core.Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/IntegrationSubscriptionRep'
          type: array
        key:
          type: string
      type: object
    InlineObject_1:
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        customRoles:
          items:
            type: string
          type: array
      required:
      - email
      type: object
    FlagConfigurationRep_targets:
      example:
        values:
        - values
        - values
        variation: 7
      properties:
        values:
          items:
            type: string
          type: array
        variation:
          type: integer
      type: object
    FlagConfigurationRep_prerequisites:
      example:
        key: key
        variation: 9
      properties:
        key:
          type: string
        variation:
          type: integer
      type: object
    FlagPost_variations:
      example:
        name: name
        description: description
        id: id
        value: ""
      properties:
        id:
          type: string
        value: {}
        description:
          type: string
        name:
          type: string
      required:
      - value
      type: object
    RuleRep_clauses:
      example:
        op: op
        negate: true
        values:
        - ""
        - ""
        _id: _id
        attribute: attribute
      properties:
        _id:
          type: string
        attribute:
          type: string
        op:
          type: string
        values:
          items: {}
          type: array
        negate:
          type: boolean
      required:
      - negate
      - op
      - values
      type: object
    access_tokens_AccessTokenPost_inlineRole:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    metrics_MetricPost_urls:
      properties:
        kind:
          type: string
        url:
          type: string
        substring:
          type: string
        pattern:
          type: string
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: Authorization
      type: apiKey
