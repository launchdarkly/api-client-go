openapi: 3.0.0
info:
  contact:
    email: support@launchdarkly.com
    name: LaunchDarkly Technical Support Team
    url: https://support.launchdarkly.com
  description: |
    # Overview

    ## Authentication

    All REST API resources are authenticated with either [personal or service access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens), or session cookies. Other authentication mechanisms are not supported. You can manage personal access tokens on your [Account settings](https://app.launchdarkly.com/settings/tokens) page.

    LaunchDarkly also has SDK keys, mobile keys, and client-side IDs that are used by our server-side SDKs, mobile SDKs, and client-side SDKs, respectively. **These keys cannot be used to access our REST API**. These keys are environment-specific, and can only perform read-only operations (fetching feature flag settings).

    | Auth mechanism                                                                                  | Allowed resources                                                                                     | Use cases                                          |
    | ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | -------------------------------------------------- |
    | [Personal access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens) | Can be customized on a per-token basis                                                                | Building scripts, custom integrations, data export |
    | SDK keys                                                                                        | Can only access read-only SDK-specific resources and the firehose, restricted to a single environment | Server-side SDKs, Firehose API                     |
    | Mobile keys                                                                                     | Can only access read-only mobile SDK-specific resources, restricted to a single environment           | Mobile SDKs                                        |
    | Client-side ID                                                                                  | Single environment, only flags marked available to client-side                                        | Client-side JavaScript                             |

    > #### Keep your access tokens and SDK keys private
    >
    > Access tokens should _never_ be exposed in untrusted contexts. Never put an access token in client-side JavaScript, or embed it in a mobile application. LaunchDarkly has special mobile keys that you can embed in mobile apps. If you accidentally expose an access token or SDK key, you can reset it from your [Account Settings](https://app.launchdarkly.com/settings#/tokens) page.
    >
    > The client-side ID is safe to embed in untrusted contexts. It's designed for use in client-side JavaScript.

    ### Via request header

    The preferred way to authenticate with the API is by adding an `Authorization` header containing your access token to your requests. The value of the `Authorization` header must be your access token.

    Manage personal access tokens from the [Account Settings](https://app.launchdarkly.com/settings/tokens) page.

    ### Via session cookie

    For testing purposes, you can make API calls directly from your web browser. If you're logged in to the application, the API will use your existing session to authenticate calls.

    If you have a [role](https://docs.launchdarkly.com/home/team/built-in-roles) other than Admin, or have a [custom role](https://docs.launchdarkly.com/home/team/custom-roles) defined, you may not have permission to perform some API calls. You will receive a `401` response code in that case.

    > ### Modifying the Origin header causes an error
    >
    > LaunchDarkly validates that the Origin header for any API request authenticated by a session cookie matches the expected Origin header. The expected Origin header is `https://app.launchdarkly.com`.
    >
    > If the Origin header does not match what's expected, LaunchDarkly returns an error. This error can prevent the LaunchDarkly app from working correctly.
    >
    > Any browser extension that intentionally changes the Origin header can cause this problem. For example, the `Allow-Control-Allow-Origin: *` Chrome extension changes the Origin header to `http://evil.com` and causes the app to fail.
    >
    > To prevent this error, do not modify your Origin header.
    >
    > LaunchDarkly does not require origin matching when authenticating with an access token, so this issue does not affect normal API usage.

    ## Representations

    All resources expect and return JSON response bodies. Error responses will also send a JSON body. Read [Errors](#section/Errors) for a more detailed description of the error format used by the API.

    In practice this means that you always get a response with a `Content-Type` header set to `application/json`.

    In addition, request bodies for `PUT`, `POST`, `REPORT` and `PATCH` requests must be encoded as JSON with a `Content-Type` header set to `application/json`.

    ### Summary and detailed representations

    When you fetch a list of resources, the response includes only the most important attributes of each resource. This is a _summary representation_ of the resource. When you fetch an individual resource (for example, a single feature flag), you receive a _detailed representation_ containing all of the attributes of the resource.

    The best way to find a detailed representation is to follow links. Every summary representation includes a link to its detailed representation.

    ### Links and addressability

    The best way to navigate the API is by following links. These are attributes in representations that link to other resources. The API always uses the same format for links:

    - Links to other resources within the API are encapsulated in a `_links` object.
    - If the resource has a corresponding link to HTML content on the site, it is stored in a special `_site` link.

    Each link has two attributes: an href (the URL) and a type (the content type). For example, a feature resource might return the following:

    ```json
    {
      "_links": {
        "parent": {
          "href": "/api/features",
          "type": "application/json"
        },
        "self": {
          "href": "/api/features/sort.order",
          "type": "application/json"
        }
      },
      "_site": {
        "href": "/features/sort.order",
        "type": "text/html"
      }
    }
    ```

    From this, you can navigate to the parent collection of features by following the `parent` link, or navigate to the site page for the feature by following the `_site` link.

    Collections are always represented as a JSON object with an `items` attribute containing an array of representations. Like all other representations, collections have `_links` defined at the top level.

    Paginated collections include `first`, `last`, `next`, and `prev` links containing a URL with the respective set of elements in the collection.

    ## Updates

    Resources that accept partial updates use the `PATCH` verb, and support the [JSON Patch](http://tools.ietf.org/html/rfc6902) format. Some resources also support the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) format. In addition, some resources support optional comments that can be submitted with updates. Comments appear in outgoing webhooks, the audit log, and other integrations.

    ### Updates via JSON Patch

    [JSON Patch](http://tools.ietf.org/html/rfc6902) is a way to specify the modifications to perform on a resource. For example, in this feature flag representation:

    ```json
    {
        "name": "New recommendations engine",
        "key": "engine.enable",
        "description": "This is the description",
        ...
    }
    ```

    You can change the feature flag's description with the following patch document:

    ```json
    [{ "op": "replace", "path": "/description", "value": "This is the new description" }]
    ```

    JSON Patch documents are always arrays. You can specify multiple modifications to perform in a single request. You can also test that certain preconditions are met before applying the patch:

    ```json
    [
      { "op": "test", "path": "/version", "value": 10 },
      { "op": "replace", "path": "/description", "value": "The new description" }
    ]
    ```

    The above patch request tests whether the feature flag's `version` is `10`, and if so, changes the feature flag's description.

    Attributes that aren't editable, like a resource's `_links`, have names that start with an underscore.

    ### Updates via JSON Merge Patch

    The API also supports the [JSON Merge Patch](https://tools.ietf.org/html/rfc7386) format, as well as the [Update feature flag](/tag/Feature-flags#operation/patchFeatureFlag) resource.

    JSON Merge Patch is less expressive than JSON Patch but in many cases, it is simpler to construct a merge patch document. For example, you can change a feature flag's description with the following merge patch document:

    ```json
    {
      "description": "New flag description"
    }
    ```

    ### Updates with comments

    You can submit optional comments with `PATCH` changes. The [Update feature flag](/tag/Feature-flags#operation/patchFeatureFlag) resource supports comments.

    To submit a comment along with a JSON Patch document, use the following format:

    ```json
    {
      "comment": "This is a comment string",
      "patch": [{ "op": "replace", "path": "/description", "value": "The new description" }]
    }
    ```

    To submit a comment along with a JSON Merge Patch document, use the following format:

    ```json
    {
      "comment": "This is a comment string",
      "merge": { "description": "New flag description" }
    }
    ```

    ### Updates via semantic patches

    The API also supports the Semantic patch format. A semantic `PATCH` is a way to specify the modifications to perform on a resource as a set of executable instructions.

    JSON Patch uses paths and a limited set of operations to describe how to transform the current state of the resource into a new state. Semantic patch allows you to be explicit about intent using precise, custom instructions. In many cases, semantic patch instructions can also be defined independently of the current state of the resource. This can be useful when defining a change that may be applied at a future date.

    For example, in this feature flag configuration in environment Production:

    ```json
    {
        "name": "Alternate sort order",
        "kind": "boolean",
        "key": "sort.order",
       ...
        "environments": {
            "production": {
                "on": true,
                "archived": false,
                "salt": "c29ydC5vcmRlcg==",
                "sel": "8de1085cb7354b0ab41c0e778376dfd3",
                "lastModified": 1469131558260,
                "version": 81,
                "targets": [
                    {
                        "values": [
                            "Gerhard.Little@yahoo.com"
                        ],
                        "variation": 0
                    },
                    {
                        "values": [
                            "1461797806429-33-861961230",
                            "438580d8-02ee-418d-9eec-0085cab2bdf0"
                        ],
                        "variation": 1
                    }
                ],
                "rules": [],
                "fallthrough": {
                    "variation": 0
                },
                "offVariation": 1,
                "prerequisites": [],
                "_site": {
                    "href": "/default/production/features/sort.order",
                    "type": "text/html"
                }
           }
        }
    }
    ```

    You can add a date you want a user to be removed from the feature flag's user targets. For example, “remove user 1461797806429-33-861961230 from the user target for variation 0 on the Alternate sort order flag in the production environment on Wed Jul 08 2020 at 15:27:41 pm”. This is done using the following:

    ```json
    {
      "comment": "update expiring user targets",
      "instructions": [
        {
          "kind": "removeExpireUserTargetDate",
          "userKey": "userKey",
          "variationId": "978d53f9-7fe3-4a63-992d-97bcb4535dc8"
        },
        {
          "kind": "updateExpireUserTargetDate",
          "userKey": "userKey2",
          "variationId": "978d53f9-7fe3-4a63-992d-97bcb4535dc8",
          "value": 1587582000000
        },
        {
          "kind": "addExpireUserTargetDate",
          "userKey": "userKey3",
          "variationId": "978d53f9-7fe3-4a63-992d-97bcb4535dc8",
          "value": 1594247266386
        }
      ]
    }
    ```

    Here is another example. In this feature flag configuration:

    ```json
    {
      "name": "New recommendations engine",
      "key": "engine.enable",
      "environments": {
        "test": {
          "on": true
        }
      }
    }
    ```

    You can change the feature flag's description with the following patch document as a set of executable instructions. For example, “add user X to targets for variation Y and remove user A from targets for variation B for test flag”:

    ```json
    {
      "comment": "",
      "instructions": [
        {
          "kind": "removeUserTargets",
          "values": ["438580d8-02ee-418d-9eec-0085cab2bdf0"],
          "variationId": "852cb784-54ff-46b9-8c35-5498d2e4f270"
        },
        {
          "kind": "addUserTargets",
          "values": ["438580d8-02ee-418d-9eec-0085cab2bdf0"],
          "variationId": "1bb18465-33b6-49aa-a3bd-eeb6650b33ad"
        }
      ]
    }
    ```

    > ### Supported semantic patch API endpoints
    >
    > - [Update feature flag](/tag/Feature-flags#operation/patchFeatureFlag)
    > - [Update expiring user targets on feature flag](/tag/Feature-flags#operation/patchExpiringUserTargets)
    > - [Update expiring user target for flags](/tag/User-settings#operation/patchExpiringFlagsForUser)
    > - [Update expiring user targets on segment](/tag/Segments#operation/patchExpiringUserTargetsForSegment)

    ## Errors

    The API always returns errors in a common format. Here's an example:

    ```json
    {
      "code": "invalid_request",
      "message": "A feature with that key already exists",
      "id": "30ce6058-87da-11e4-b116-123b93f75cba"
    }
    ```

    The general class of error is indicated by the `code`. The `message` is a human-readable explanation of what went wrong. The `id` is a unique identifier. Use it when you're working with LaunchDarkly support to debug a problem with a specific API call.

    ### HTTP Status - Error Response Codes

    | Code | Definition        | Desc.                                                                                       | Possible Solution                                                |
    | ---- | ----------------- | ------------------------------------------------------------------------------------------- | ---------------------------------------------------------------- |
    | 400  | Bad Request       | A request that fails may return this HTTP response code.                                    | Ensure JSON syntax in request body is correct.                   |
    | 401  | Unauthorized      | User doesn't have permission to an API call.                                                | Ensure your SDK key is good.                                     |
    | 403  | Forbidden         | User does not have permission for operation.                                                | Ensure that the user or access token has proper permissions set. |
    | 409  | Conflict          | The API request could not be completed because it conflicted with a concurrent API request. | Retry your request.                                              |
    | 429  | Too many requests | See [Rate limiting](/#section/Rate-limiting).                                               | Wait and try again later.                                        |

    ## CORS

    The LaunchDarkly API supports Cross Origin Resource Sharing (CORS) for AJAX requests from any origin. If an `Origin` header is given in a request, it will be echoed as an explicitly allowed origin. Otherwise, a wildcard is returned: `Access-Control-Allow-Origin: *`. For more information on CORS, see the [CORS W3C Recommendation](http://www.w3.org/TR/cors). Example CORS headers might look like:

    ```http
    Access-Control-Allow-Headers: Accept, Content-Type, Content-Length, Accept-Encoding, Authorization
    Access-Control-Allow-Methods: OPTIONS, GET, DELETE, PATCH
    Access-Control-Allow-Origin: *
    Access-Control-Max-Age: 300
    ```

    You can make authenticated CORS calls just as you would make same-origin calls, using either [token or session-based authentication](#section/Authentication). If you’re using session auth, you should set the `withCredentials` property for your `xhr` request to `true`. You should never expose your access tokens to untrusted users.

    ## Rate limiting

    We use several rate limiting strategies to ensure the availability of our APIs. Rate-limited calls to our APIs will return a `429` status code. Calls to our APIs will include headers indicating the current rate limit status. The specific headers returned depend on the API route being called. The limits differ based on the route, authentication mechanism, and other factors. Routes that are not rate limited may not contain any of the headers described below.

    > ### Rate limiting and SDKs
    >
    > LaunchDarkly SDKs are never rate limited and do not use the API endpoints defined here. LaunchDarkly uses a different set of approaches, including streaming/server-sent events and a global CDN, to ensure availability to the routes used by LaunchDarkly SDKs.
    >
    > The client-side ID is safe to embed in untrusted contexts. It's designed for use in client-side JavaScript.

    ### Global rate limits

    Authenticated requests are subject to a global limit. This is the maximum number of calls that can be made to the API per ten seconds. All personal access tokens on the account share this limit, so exceeding the limit with one access token will impact other tokens. Calls that are subject to global rate limits will return the headers below:

    | Header name                    | Description                                                                      |
    | ------------------------------ | -------------------------------------------------------------------------------- |
    | `X-Ratelimit-Global-Remaining` | The maximum number of requests the account is permitted to make per ten seconds. |
    | `X-Ratelimit-Reset`            | The time at which the current rate limit window resets in epoch milliseconds.    |

    We do not publicly document the specific number of calls that can be made globally. This limit may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limit.

    ### Route-level rate limits

    Some authenticated routes have custom rate limits. These also reset every ten seconds. Any access tokens hitting the same route share this limit, so exceeding the limit with one access token may impact other tokens. Calls that are subject to route-level rate limits will return the headers below:

    | Header name                   | Description                                                                                           |
    | ----------------------------- | ----------------------------------------------------------------------------------------------------- |
    | `X-Ratelimit-Route-Remaining` | The maximum number of requests to the current route the account is permitted to make per ten seconds. |
    | `X-Ratelimit-Reset`           | The time at which the current rate limit window resets in epoch milliseconds.                         |

    A _route_ represents a specific URL pattern and verb. For example, the [Delete environment](/tag/Environments#operation/deleteEnvironment) endpoint is considered a single route, and each call to delete an environment counts against your route-level rate limit for that route.

    We do not publicly document the specific number of calls that can be made to each endpoint per ten seconds. These limits may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limits.

    ### IP-based rate limiting

    We also employ IP-based rate limiting on some API routes. If you hit an IP-based rate limit, your API response will include a `Retry-After` header indicating how long to wait before re-trying the call. Clients must wait at least `Retry-After` seconds before making additional calls to our API, and should employ jitter and backoff strategies to avoid triggering rate limits again.

    ## OpenAPI (Swagger)

    We have a [complete OpenAPI (Swagger) specification](https://app.launchdarkly.com/api/v2/openapi.json) for our API.

    You can use this specification to generate client libraries to interact with our REST API in your language of choice.

    This specification is supported by several API-based tools such as Postman and Insomnia. In many cases, you can directly import our specification to ease use in navigating the APIs in the tooling.

    ## Client libraries

    We auto-generate multiple client libraries based on our OpenAPI specification. To learn more, visit [GitHub](https://github.com/search?q=topic%3Alaunchdarkly-api+org%3Alaunchdarkly&type=Repositories).

    ## Method Overriding

    Some firewalls and HTTP clients restrict the use of verbs other than `GET` and `POST`. In those environments, our API endpoints that use `PUT`, `PATCH`, and `DELETE` verbs will be inaccessible.

    To avoid this issue, our API supports the `X-HTTP-Method-Override` header, allowing clients to "tunnel" `PUT`, `PATCH`, and `DELETE` requests via a `POST` request.

    For example, if you wish to call one of our `PATCH` resources via a `POST` request, you can include `X-HTTP-Method-Override:PATCH` as a header.

    ## Beta resources

    We sometimes release new API resources in **beta** status before we release them with general availability.

    Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.

    We try to promote resources into general availability as quickly as possible. This happens after sufficient testing and when we're satisfied that we no longer need to make backwards-incompatible changes.

    We mark beta resources with a "Beta" callout in our documentation, pictured below:

    > ### This feature is in beta
    >
    > To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](/#section/Beta-resources).

    ### Using beta resources

    To use a beta resource, you must include a header in the request. If you call a beta resource without this header, you'll receive a `403` response.

    Use this header:

    ```
    LD-API-Version: beta
    ```

    ## Versioning

    We try hard to keep our REST API backwards compatible, but we occasionally have to make backwards-incompatible changes in the process of shipping new features. These breaking changes can cause unexpected behavior if you don't prepare for them accordingly.

    Updates to our REST API include support for the latest features in LaunchDarkly. We also release a new version of our REST API every time we make a breaking change. We provide simultaneous support for multiple API versions so you can migrate from your current API version to a new version at your own pace.

    ### Setting the API version per request

    You can set the API version on a specific request by sending an `LD-API-Version` header, as shown in the example below:

    ```
    LD-API-Version: 20191212
    ```

    The header value is the version number of the API version you'd like to request. The number for each version corresponds to the date the version was released. In the example above the version `20191212` corresponds to December 12, 2019.

    ### Setting the API version per access token

    When creating an access token, you must specify a specific version of the API to use. This ensures that integrations using this token cannot be broken by version changes.

    Tokens created before versioning was released have their version set to `20160426` (the version of the API that existed before versioning) so that they continue working the same way they did before versioning.

    If you would like to upgrade your integration to use a new API version, you can explicitly set the header described above.

    > ### Best practice: Set the header for every client or integration
    >
    > We recommend that you set the API version header explicitly in any client or integration you build.
    >
    > Only rely on the access token API version during manual testing.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: LaunchDarkly REST API
  version: "2.0"
servers:
- url: https://app.launchdarkly.com
security:
- ApiKey:
  - read
  - write
tags:
- description: "The access tokens API allows you to list, create, modify, and delete\
    \ access tokens programmatically. \n\nWhen using access tokens to manage access\
    \ tokens, the following restrictions apply:\n- Personal tokens can see all service\
    \ tokens and other personal tokens created by the same team member. If the personal\
    \ token has the \"Admin\" role, it may also see other member's personal tokens.\
    \ To learn more, read [Personal tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens#personal-tokens).\n\
    - Service tokens can see all service tokens. If the token has the \"Admin\" role,\
    \ it may also see all personal tokens. To learn more, read  [Service tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens).\n\
    - Tokens can only manage other tokens, including themselves, if they have \"Admin\"\
    \ role or explicit permission via a custom role. To learn more, read [Personal\
    \ access token actions](https://docs.launchdarkly.com/home/team/role-actions#personal-access-token-actions).\n\
    \nTo learn more about access tokens, read [API access tokens](https://docs.launchdarkly.com/home/account-security/api-access-tokens).\n"
  name: Access tokens
- description: |
    The Account Members API allows you to invite new members to an account by making a `POST` request to `/api/v2/members`. When you invite a new member to an account, an invitation is sent to the email you provided. Members with "admin" or "owner" roles may create new members, as well as anyone with a "createMember" permission for "member/\*".

    Any member may request the complete list of account members with a `GET` to `/api/v2/members`.
  name: Account members
- description: |
    > ### This feature is in beta
    >
    > To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](/#section/Beta-resources).

    The Account Usage API lets you query for metrics about how your account is using LaunchDarkly.
    Each endpoint returns time-series data in the form of an array of data points with timestamps. Each one contains data for that time from one or more series. It also includes a metadata array describing what each of the series is.
  name: Account usage (beta)
- description: |
    You may create an approval request for updating a flag and request approval from a team member before applying the changes. You may to select up to ten reviewers to be notified via email, however, anyone with the sufficient permissions can review a pending approval request. At least one approval is needed to allow the changes to be applied.

    Change instructions that are in a conflict state will fail if approved and applied, and the flag will not be updated.
  name: Approvals
- description: |
    The audit log contains a record of all the changes made to any resource in the system. You can filter the audit log by timestamps, or use a custom policy to select which entries to receive.
  name: Audit log
- description: |
    > ### Use ld-find-code-refs
    >
    > LaunchDarkly provides the [ld-find-code-refs utility](https://github.com/launchdarkly/ld-find-code-refs) that creates repository connections, generates code reference data, and creates calls to the code references API. Most customers do not need to call this API directly.

    The [code references](https://docs.launchdarkly.com/home/code/code-references) API provides access to all resources related to connected repository, and associated feature flag code reference data for all branches.
  name: Code references
- description: |
    > ### Custom roles is an Enterprise feature
    >
    > Custom roles is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).

    Custom roles allow you to create flexible policies providing fine-grained access control to everything in LaunchDarkly, from feature flags to goals, environments and teams. With custom roles, it's possible to enforce access policies that meet your exact workflow needs.

    The custom roles API allows you to create, update and delete custom roles. You can also use the API to list all of your custom roles or get a custom role by ID.

    For more information about custom roles and the syntax for custom role policies, read the product documentation for [Custom roles](https://docs.launchdarkly.com/docs/custom-roles).
  name: Custom roles
- description: |
    > ### Data Export is an add-on feature
    >
    > Data Export is available as an add-on for customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).

    Data Export provides a real-time export of raw analytics data, including feature flag requests, analytics events, custom events, and more.

    _Data Export Destinations_ are locations that receive exported data. The Data Export Destinations API allows you to configure destinations so that your data can be exported.

    To learn more, read [Data Export](https://docs.launchdarkly.com/docs/data-export).
  name: Data Export destinations
- description: |
    Environments allow you to maintain separate rollout rules in different contexts, from local development to QA, staging, and production. With the LaunchDarkly Environments API, you can programmatically create, delete, and update environments.
  name: Environments
- description: |
    > ### This feature is in beta
    >
    > To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](/#section/Beta-resources).

    An experiment is a running tally of user behaviors based on which variation of a feature flag they receive. In LaunchDarkly, an experiment requires two things: a metric that defines what user behaviors to track, and at least one flag associated with that metric.

    Experiments are largely managed via PATCH requests to the Flags API. There are also dedicated API resources for getting and deleting experiment data.

    ## Adding an experiment

    To add an experiment to a flag, add a new object to the `/experiments/items/` property.

    The object must contain:

    1. The key of the metric you want to use for the experiment.
    2. (Optional) A list of keys for the environments where the experiment should record data.

    ```json
    PATCH /api/v2/flags/{projKey}/{flagKey}
    [
        {
            "op": "add",
            "path": "/experiments/items/0",
            "value": {
                "metricKey": "example-metric",
                "environments": []
            }
        }
    ]
    ```

    ## Removing an experiment

    To remove an experiment, remove the corresponding item from the experiments or items property.

    ```json
    PATCH /api/v2/flags/{projKey}/{flagKey}
    [
        {
            "op": "remove",
            "path": "/experiments/items/0"
        }
    ]
    ```

    ## Starting or resuming an experiment

    To start recording data for an experiment in an environment, add the environment key to the list of environments for that experiment.

    ```json
    PATCH /api/v2/flags/{projKey}/{flagKey}
    [
        {
            "op": "add",
            "path": "/experiments/items/0/environments/0",
            "value": "production"
        }
    ]
    ```

    ## Pausing an experiment

    To pause collecting data for an experiment in a specific environment, remove the environment from the list that experiment uses.

    ```json
    PATCH /api/v2/flags/{projKey}/{flagKey}
    [
      {
        "op": "remove",
        "path": "/experiments/items/0/environments/0"
      }
    ]
    ```

    ## Updating the baseline

    To update the baseline for all experiments on a flag across all environments in the project, replace the `baselineIdx` property with the index of the new baseline variation.

    ```json
    PATCH /api/v2/flags/{projKey}/{flagKey}
    [
      {
        "op": "replace",
        "path": "/experiments/baselineIdx",
        "value": 1
      }
    ]
    ```
  name: Experiments (beta)
- description: |
    ## Anatomy of a feature flag

    The feature flag API allows you to control percentage rollouts, target specific users, or even toggle off a feature programmatically. By looking at the representation of a feature flag, we can see how to do any of these tasks.

    ## Sample feature flag representation

    Every feature flag has a set of top-level attributes, as well as an `environments` map containing the flag rollout and targeting rules specific to each environment. Top-level attributes include things like the flag's name, description, tags, and creation date.

    For reference, here's a complete feature flag representation. Below we break this down and explain each attribute in detail.

    ```json
    {
      "name": "Alternate product page",
      "kind": "boolean",
      "description": "This is a description",
      "key": "alternate.page",
      "creationDate": 1418684722483,
      "includeInSnippet": true,
      "variations": [
        {
          "value": true,
          "name": "true"
        },
        {
          "value": false,
          "name": "false"
        }
      ],
      "defaults": {
        "onVariation": 0,
        "offVariation": 1
      },
      "temporary": false,
      "tags": ["ops", "experiments"],
      "_links": {
        "parent": {
          "href": "/api/v2/flags/default",
          "type": "application/json"
        },
        "self": {
          "href": "/api/v2/flags/default/alternate.page",
          "type": "application/json"
        }
      },
      "maintainerId": "548f6741c1efad40031b18ae",
      "_maintainer": {
        "_links": {
          "parent": {
            "href": "/internal/account/members",
            "type": "application/json"
          },
          "self": {
            "href": "/internal/account/members/548f6741c1efad40031b18ae",
            "type": "application/json"
          }
        },
        "_id": "548f6741c1efad40031b18ae",
        "firstName": "Reese",
        "lastName": "App",
        "role": "owner",
        "email": "refapp@launchdarkly.com",
        "_pendingInvite": false,
        "isBeta": false,
        "customRoles": []
      },
      "goalIds": [],
      "environments": {
        "production": {
          "on": true,
          "archived": false,
          "salt": "YWx0ZXJuYXRlLnBhZ2U=",
          "sel": "45501b9314dc4641841af774cb038b96",
          "lastModified": 1469326565348,
          "version": 61,
          "targets": [
            {
              "values": ["1461797806427-7-115540266"],
              "variation": 0
            },
            {
              "values": ["Gerhard.Little@yahoo.com"],
              "variation": 1
            }
          ],
          "rules": [
            {
              "variation": 0,
              "clauses": [
                {
                  "attribute": "groups",
                  "op": "in",
                  "values": ["Top Customers"],
                  "negate": false
                },
                {
                  "attribute": "email",
                  "op": "endsWith",
                  "values": ["gmail.com"],
                  "negate": false
                }
              ]
            }
          ],
          "fallthrough": {
            "rollout": {
              "variations": [
                {
                  "variation": 0,
                  "weight": 60000
                },
                {
                  "variation": 1,
                  "weight": 40000
                }
              ]
            }
          },
          "offVariation": 1,
          "prerequisites": [],
          "_site": {
            "href": "/default/production/features/alternate.page",
            "type": "text/html"
          }
        },
        "test": {
          "on": true,
          "archived": false,
          "salt": "YWx0ZXJuYXRlLnBhZ2U=",
          "sel": "76c63094d35949bb9dc9bd5c570bacf5",
          "lastModified": 1455145480896,
          "version": 37,
          "targets": [
            {
              "values": [],
              "variation": 0
            },
            {
              "values": [],
              "variation": 1
            }
          ],
          "rules": [],
          "fallthrough": {
            "rollout": {
              "variations": [
                {
                  "variation": 0,
                  "weight": 49000
                },
                {
                  "variation": 1,
                  "weight": 51000
                }
              ]
            }
          },
          "prerequisites": [],
          "_site": {
            "href": "/default/tester/features/alternate.page",
            "type": "text/html"
          }
        }
      }
    }
    ```

    ## Top-level attributes

    Most of the top-level attributes have a straightforward interpretation. For example, to change the name of a feature, [update the feature flag](#operation/patchFeatureFlag) with the `name` attribute set to the new name:

    ```json
    [
        { "op": "replace", "path": "/name", "value": "New name" }
    ]
    ```

    The `variations` array represents the different variation values that a feature flag has. For a boolean flag, there are two variations: `true` and `false`. Multivariate flags have more variation values, and those values could be any JSON type: numbers, strings, objects, or arrays. In targeting rules, the variations are referred to by their index into this array. Below are some specific examples.

    ## Per-environment configurations

    Each entry in the `environments` map contains a JSON object that represents the environment-specific flag configuration data that you see on the [Targeting](https://docs.launchdarkly.com/home/flags/targeting-users) tab of your Manage Feature page. For example, to toggle off a feature flag in your production environment, use the following JSON patch operation:

    ```json
    [
        { "op": "replace", "path": "/environments/production/on", "value": false }
    ]
    ```

    Each section of the Targeting tab corresponds to a different attribute of the per-environment configuration data, as shown here:

    ## Individual user targets

    The `targets` array in the per-environment configuration data represents the individual user targeting rules on the Targeting tab. Each object in the `targets` array represents a list of user keys assigned to a particular variation. For example:

    ```json
    {
        ...
        "environments" : {
            "production" : {
                ...
                "targets": [
                    {
                        "values": ["foo@example.com"],
                        "variation: 0
                    }
                ]
            }
        }
    }
    ```

    This `targets` array here means that user `foo@example.com` receives the first variation listed in the `variations` array. Recall that the variations are stored at the top level of the flag JSON in an array, and the per-environment configuration rules point to indexes into this array. If this is a boolean flag, `foo@example.com` is receiving the `true` variation.

    ## Targeting rules

    The `rules` array corresponds to the custom targeting rules section of the Targeting tab. This is where you can express complex rules on attributes with conditions and operators. For example, a rule like "roll out the `true` variation to 80% of users whose email address ends with `gmail.com` could be expressed here.

    ## The fallthrough rule

    The `fallthrough` object is a special rule that contains no conditions. It is the rollout strategy that is applied when none of the individual or custom targeting rules match.

    ## The off variation

    The off variation represents the variation to serve if the feature flag is turned off, meaning the `on` attribute is `false`. For boolean flags, this is usually `false`. For multivariate flags, set the off variation to whatever variation represents the control or baseline behavior for your application. If you don't set the off variation, LaunchDarkly will serve the fallback value defined in your code.

    ## Percentage rollouts

    The `weight` attribute defines the percentage rollout for each variation. Weights range from 0 (a 0% rollout) to 100000 (a 100% rollout). The weights are scaled by a factor of 1000 so that fractions of a percent can be represented without using floating-point. For example, a weight of `50000` means that 50% of users that don't otherwise match any `targets` will see that variation. The sum of weights across all variations should be 100%.
  name: Feature flags
- description: |
    > ### This feature is in beta
    >
    > To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](/#section/Beta-resources).
  name: Feature flags (beta)
- description: |
    Metrics track flag behavior over time when an experiment is running. The data generated from experiments gives you more insight into the impact of a particular flag.

    Using the Metrics API, you can create, delete, and manage metrics.
  name: Metrics
- description: |
    Projects allow you to manage multiple different software projects under one LaunchDarkly account. Each project has its own unique set of environments and feature flags.

    Using the Projects API, you can create, destroy, and manage projects.
  name: Projects
- description: "The [Relay Proxy automatic configuration](https://docs.launchdarkly.com/home/relay-proxy/automatic-configuration)\
    \ API provides access to all resources related to Relay tokens. \n"
  name: Relay Proxy configurations
- description: |
    Schedule the specified flag targeting changes to take effect at the selected time. You may schedule multiple changes for a flag each with a different `ExecutionDate`.
  name: Scheduled changes
- description: |
    Segments allow you to create targeting rules and lists of users that can be shared by one or more feature flags in an environment. Creating a segment is a lot like creating a flag. You can include individual users from a segment. You can also create targeting rules, same as those for flags, that include or exclude users based on attributes your application has provided about those users. Finally, you can explicitly exclude users that would otherwise be included by those rules.

    The segments API allows you to list, create, modify, and delete segments programmatically.
  name: Segments
- description: |
    A team is a group of members in your LaunchDarkly account. A team can have maintainers who are able to add and remove team members. It also can have custom roles assigned to it that allows shared access to those roles for all team members.

    The Teams API allows you to create, read, update, and delete a team.
  name: Teams (beta)
- description: |
    LaunchDarkly creates a record for each user passed in to `variation` calls. This record powers the autocomplete functionality on the Feature Flag management page, as well as the Users page.

    LaunchDarkly also offers an API that lets you tap into this data. You can use the users API to see what user data is available to LaunchDarkly, as well as determine which flag values a user will receive. You can also explicitly set which flag value a user will receive via this API.

    Users are always scoped within a project and environment. In other words, each environment has its own set of user records.
  name: Users
- description: |
    > ### This feature is in beta
    >
    > To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](/#section/Beta-resources).

    LaunchDarkly creates a record for each user passed in to `variation` calls. This record powers the autocomplete functionality on the Feature Flag management page, as well as the Users page.

    LaunchDarkly also offers an API that lets you tap into this data. You can use the users API to see what user data is available to LaunchDarkly, as well as determine which flag values a user will receive. You can also explicitly set which flag value a user will receive via this API.

    Users are always scoped within a project and environment. In other words, each environment has its own set of user records.
  name: Users (beta)
- description: |
    LaunchDarkly's User Settings API provides a picture of all feature flags and their current values for a specific user. This gives you instant visibility of how a particular user is experiencing your site or application.

    The User Settings API can also be used to assign a user to a specific variation for any feature flag.
  name: User settings
- description: |
    The webhooks API lets you build your own integrations that subscribe to activities in LaunchDarkly. When you generate an activity in LaunchDarkly, such as when you change a flag or you create a project, LaunchDarkly sends an HTTP POST payload to the webhook's URL. Use webhooks to update external issue trackers, update support tickets, notify customers of new feature rollouts, and more.

    ## Designating the payload

    The webhook payload is identical to an [Audit log entry](/tag/Audit-log#operation/getAuditLogEntry).

    Here's a sample payload:

    > ### Webhook delivery order
    >
    > Webhooks may not be delivered in chronological order. We recommend using the payload's "date" field as a timestamp to reorder webhooks as they are received.

    ```json
    {
      "_links": {
        "canonical": {
          "href": "/api/v2/projects/alexis/environments/test",
          "type": "application/json"
        },
        "parent": {
          "href": "/api/v2/auditlog",
          "type": "application/json"
        },
        "self": {
          "href": "/api/v2/auditlog/57c0a8e29969090743529965",
          "type": "application/json"
        },
        "site": {
          "href": "/settings#/projects",
          "type": "text/html"
        }
      },
      "_id": "57c0a8e29969090743529965",
      "date": 1472243938774,
      "accesses": [
        {
          "action": "updateName",
          "resource": "proj/alexis:env/test"
        }
      ],
      "kind": "environment",
      "name": "Testing",
      "description": "- Changed the name from ~~Test~~ to *Testing*",
      "member": {
        "_links": {
          "parent": {
            "href": "/internal/account/members",
            "type": "application/json"
          },
          "self": {
            "href": "/internal/account/members/548f6741c1efad40031b18ae",
            "type": "application/json"
          }
        },
        "_id": "548f6741c1efad40031b18ae",
        "email": "refapp@launchdarkly.com",
        "firstName": "Reese",
        "lastName": "Applebaum"
      },
      "titleVerb": "changed the name of",
      "title": "[Reese Applebaum](mailto:refapp@launchdarkly.com) changed the name of [Testing](https://app.launchdarkly.com/settings#/projects)",
      "target": {
        "_links": {
          "canonical": {
            "href": "/api/v2/projects/alexis/environments/test",
            "type": "application/json"
          },
          "site": {
            "href": "/settings#/projects",
            "type": "text/html"
          }
        },
        "name": "Testing",
        "resources": ["proj/alexis:env/test"]
      }
    }
    ```

    ## Signing the webhook

    Optionally, you can define a `secret` when you create a webhook. If you define the secret, the webhook `POST` request will include an `X-LD-Signature header`, whose value will contain an HMAC SHA256 hex digest of the webhook payload, using the `secret` as the key.

    Compute the signature of the payload using the same shared secret in your code to verify that the webhook was triggered by LaunchDarkly.

    ## Understanding connection retries

    If LaunchDarkly receives a non-`2xx` response to a webhook `POST`, it will retry the delivery one time. Webhook delivery is not guaranteed. If you build an integration on webhooks, make sure it is tolerant of delivery failures.
  name: Webhooks
- description: |
    A workflow is a set of actions that you can schedule in advance to make changes to a feature flag. You can also include approval requests at different stages of a workflow.

    The actions supported are as follows:

    - Turning targeting `ON` or `OFF`
    - Setting the default variation
    - Creating a rule to target a group of users by segment
    - Modifying the rollout percentage for rules

    You can create multiple stages of a flag release workflow. Unique stages are defined by their conditions: either approvals and/or scheduled changes.
  name: Workflows (beta)
- name: Other
paths:
  /api/v2:
    get:
      description: Issue a `GET` request to the root resource to find all of the resource
        categories supported by the API
      operationId: getRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootResponse'
          description: Root response
      summary: Root resource
      tags:
      - Other
  /api/v2/account/relay-auto-configs:
    get:
      description: Get a list of Relay Proxy configurations in the account.
      operationId: getRelayProxyConfigs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayAutoConfigCollectionRep'
          description: Relay auto config response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List Relay Proxy configs
      tags:
      - Relay Proxy configurations
    post:
      description: Create a Relay Proxy config
      operationId: postRelayAutoConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelayAutoConfigPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayAutoConfigRep'
          description: Relay auto config response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create a new Relay Proxy config
      tags:
      - Relay Proxy configurations
  /api/v2/account/relay-auto-configs/{id}:
    delete:
      description: Delete a Relay Proxy config
      operationId: deleteRelayAutoConfig
      parameters:
      - description: The relay auto config id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The relay auto config id
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete Relay Proxy config by ID
      tags:
      - Relay Proxy configurations
    get:
      description: Get a single Relay Proxy Auto Config by ID
      operationId: getRelayProxyConfig
      parameters:
      - description: The relay auto config id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The relay auto config id
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayAutoConfigRep'
          description: Relay auto config response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get Relay Proxy config
      tags:
      - Relay Proxy configurations
    patch:
      description: Update a Relay Proxy config.
      operationId: patchRelayAutoConfig
      parameters:
      - description: The relay auto config id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The relay auto config id
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayAutoConfigRep'
          description: Relay auto config response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchFailedErrorRep'
          description: Invalid patch content
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update a Relay Proxy config
      tags:
      - Relay Proxy configurations
  /api/v2/account/relay-auto-configs/{id}/reset:
    post:
      description: Reset a Relay Proxy configuration's secret key with an optional
        expiry time for the old key.
      operationId: resetRelayAutoConfig
      parameters:
      - description: The Relay Proxy configuration ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Relay Proxy configuration ID
          format: string
          type: string
        style: simple
      - description: An expiration time for the old Relay Proxy configuration key,
          expressed as a Unix epoch time in milliseconds. By default, the Relay Proxy
          configuration will expire immediately.
        explode: true
        in: query
        name: expiry
        required: false
        schema:
          description: An expiration time for the old Relay Proxy configuration key,
            expressed as a Unix epoch time in milliseconds. By default, the Relay
            Proxy configuration will expire immediately.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayAutoConfigRep'
          description: Relay auto config response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Reset Relay Proxy configuration key
      tags:
      - Relay Proxy configurations
  /api/v2/auditlog:
    get:
      description: Get a list of all audit log entries. The query parameters let you
        restrict the results that return by date ranges, resource specifiers, or a
        full-text search query.
      operationId: getAuditLogEntries
      parameters:
      - description: A timestamp filter, expressed as a Unix epoch time in milliseconds.  All
          entries this returns occurred before the timestamp.
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: A timestamp filter, expressed as a Unix epoch time in milliseconds.  All
            entries this returns occurred before the timestamp.
          format: int64
          type: integer
        style: form
      - description: A timestamp filter, expressed as a Unix epoch time in milliseconds.
          All entries this returns occurred after the timestamp.
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: A timestamp filter, expressed as a Unix epoch time in milliseconds.
            All entries this returns occurred after the timestamp.
          format: int64
          type: integer
        style: form
      - description: Text to search for. You can search for the full or partial name
          of the resource, or full or partial email address of the member who made
          a change.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Text to search for. You can search for the full or partial
            name of the resource, or full or partial email address of the member who
            made a change.
          format: string
          type: string
        style: form
      - description: A limit on the number of audit log entries that return. Set between
          1 and 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: A limit on the number of audit log entries that return. Set
            between 1 and 20.
          format: int64
          type: integer
        style: form
      - description: A resource specifier that lets you filter audit log listings
          by resource
        explode: true
        in: query
        name: spec
        required: false
        schema:
          description: A resource specifier that lets you filter audit log listings
            by resource
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntryListingRepCollection'
          description: Audit log entries response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List audit log feature flag entries
      tags:
      - Audit log
  /api/v2/auditlog/{id}:
    get:
      description: |
        Fetch a detailed audit log entry representation. The detailed representation includes several fields that are not present in the summary representation:

        - `delta`: the JSON patch body that was used in the request to update the entity
        - `previousVersion`: a JSON representation of the previous version of the entity
        - `currentVersion`: a JSON representation of the current version of the entity
      operationId: getAuditLogEntry
      parameters:
      - description: The ID of the audit log entry
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the audit log entry
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntryRep'
          description: Audit log entry response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get audit log entry
      tags:
      - Audit log
  /api/v2/code-refs/extinctions:
    get:
      description: Get a list of all extinctions.
      operationId: getExtinctions
      parameters:
      - description: Filter results to a specific repository
        explode: true
        in: query
        name: repoName
        required: false
        schema:
          description: Filter results to a specific repository
          format: string
          type: string
        style: form
      - description: Filter results to a specific branch. By default, only the default
          branch will be queried for extinctions.
        explode: true
        in: query
        name: branchName
        required: false
        schema:
          description: Filter results to a specific branch. By default, only the default
            branch will be queried for extinctions.
          format: string
          type: string
        style: form
      - description: Filter results to a specific project
        explode: true
        in: query
        name: projKey
        required: false
        schema:
          description: Filter results to a specific project
          format: string
          type: string
        style: form
      - description: Filter results to a specific flag key
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: Filter results to a specific flag key
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtinctionCollectionRep'
          description: Extinction collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List extinctions
      tags:
      - Code references
  /api/v2/code-refs/repositories:
    get:
      description: Get a list of connected repositories. Optionally, you can include
        branch metadata with the `withBranches` query parameter. Embed references
        for the default branch with `ReferencesForDefaultBranch`. You can also filter
        the list of code references by project key and flag key.
      operationId: getRepositories
      parameters:
      - description: If set to any value, the endpoint returns repositories with associated
          branch data
        explode: true
        in: query
        name: withBranches
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data
          format: string
          type: string
        style: form
      - description: If set to any value, the endpoint returns repositories with associated
          branch data, as well as code references for the default git branch
        explode: true
        in: query
        name: withReferencesForDefaultBranch
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data, as well as code references for the default git
            branch
          format: string
          type: string
        style: form
      - description: A LaunchDarkly project key. If provided, this filters code reference
          results to the specified project.
        explode: true
        in: query
        name: projKey
        required: false
        schema:
          description: A LaunchDarkly project key. If provided, this filters code
            reference results to the specified project.
          format: string
          type: string
        style: form
      - description: If set to any value, the endpoint returns repositories with associated
          branch data, as well as code references for the default git branch
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data, as well as code references for the default git
            branch
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryCollectionRep'
          description: Repository collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List repositories
      tags:
      - Code references
    post:
      description: Create a repository with the specified name.
      operationId: postRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/repositoryPost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryRep'
          description: Repository response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create repository
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}:
    delete:
      description: Delete a repository with the specified name
      operationId: deleteRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete repository
      tags:
      - Code references
    get:
      description: Get a single repository by name.
      operationId: getRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryRep'
          description: Repository response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get repository
      tags:
      - Code references
    patch:
      description: Update a repository's settings. The request must be a valid JSON
        Patch document describing the changes to be made to the repository.
      operationId: patchRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryRep'
          description: Repository response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update repository
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branch-delete-tasks:
    post:
      description: Asynchronously delete a number of branches.
      operationId: deleteBranches
      parameters:
      - description: The repository name to delete branches for.
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name to delete branches for.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "200":
          description: Action succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete branches
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branches:
    get:
      description: Get a list of branches.
      operationId: getBranches
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchCollectionRep'
          description: Branch collection response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List branches
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branches/{branch}:
    get:
      description: Get a specific branch in a repository
      operationId: getBranch
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      - description: Filter results to a specific project
        explode: true
        in: query
        name: projKey
        required: false
        schema:
          description: Filter results to a specific project
          format: string
          type: string
        style: form
      - description: Filter results to a specific flag key
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: Filter results to a specific flag key
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchRep'
          description: Branch response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get branch
      tags:
      - Code references
    put:
      description: Create a new branch if it doesn't exist, or updates the branch
        if it already exists.
      operationId: putBranch
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putBranch'
        required: true
      responses:
        "200":
          description: Action succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Upsert branch
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branches/{branch}/extinction-events:
    post:
      description: Create a new extinction
      operationId: postExtinction
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtinctionListPost'
        required: true
      responses:
        "200":
          description: Action succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create extinction
      tags:
      - Code references
  /api/v2/code-refs/statistics:
    get:
      description: Get links for all projects that have Code References.
      operationId: getRootStatistic
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsRoot'
          description: Statistic root response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get links to code reference repositories for each project
      tags:
      - Code references
  /api/v2/code-refs/statistics/{projKey}:
    get:
      description: 'Get the number of code references across repositories for all
        flags in your project that have code references in the default branch (for
        example: master). You can optionally include the `flagKey` query parameter
        to get the number of code references across repositories for a single flag.
        This endpoint returns the number of times your flag keys are referenced in
        your repositories. You can filter to a single flag with by passing in a flag
        key.'
      operationId: getStatistics
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: Filter results to a specific flag key
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: Filter results to a specific flag key
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticCollectionRep'
          description: Statistic collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get number of code references for flags
      tags:
      - Code references
  /api/v2/destinations:
    get:
      description: Get a list of Data Export destinations configured across all projects
        and environments.
      operationId: getDestinations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destinations'
          description: Destination collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List destinations
      tags:
      - Data Export destinations
  /api/v2/destinations/{projKey}/{envKey}:
    post:
      description: Create a new destination. The `config` body parameter represents
        the configuration parameters required for a destination type.
      operationId: postDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              config:
                project: test-prod
                topic: ld-pubsub-test-192301
              kind: google-pubsub
            schema:
              $ref: '#/components/schemas/DestinationPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
          description: Destination response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create data export destination
      tags:
      - Data Export destinations
  /api/v2/destinations/{projKey}/{envKey}/{id}:
    delete:
      description: Delete Data Export destination by ID
      operationId: deleteDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The Data Export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Data Export destination ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Destination response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete Data Export destination
      tags:
      - Data Export destinations
    get:
      description: Get a single Data Export destination by ID
      operationId: getDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The Data Export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Data Export destination ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
          description: Destination response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get destination
      tags:
      - Data Export destinations
    patch:
      description: Update a Data Export destination. This requires a JSON Patch representation
        of the modified destination.
      operationId: patchDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The Data Export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Data Export destination ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
            - op: replace
              path: /config/topic
              value: ld-pubsub-test-192302
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Destination'
          description: Destination response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update Data Export destination
      tags:
      - Data Export destinations
  /api/v2/flag-status/{projKey}/{key}:
    get:
      description: Get the status for a particular feature flag across environments.
      operationId: getFeatureFlagStatusAcrossEnvironments
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      - description: Optional environment filter
        explode: true
        in: query
        name: env
        required: false
        schema:
          description: Optional environment filter
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagStatusAcrossEnvironments'
          description: Flag status across environments response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get flag status across environments
      tags:
      - Feature flags
  /api/v2/flag-statuses/{projKey}/{envKey}:
    get:
      description: |
        Get a list of statuses for all feature flags. The status includes the last time the feature flag was requested, as well as a state, which is one of the following:

        - `new`: the feature flag was created within the last seven days, and has not been requested yet
        - `active`: the feature flag was requested by your servers or clients within the last seven days
        - `inactive`: the feature flag was created more than seven days ago, and hasn't been requested by your servers or clients within the past seven days
        - `launched`: one variation of the feature flag has been rolled out to all your users for at least 7 days
      operationId: getFeatureFlagStatuses
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagStatuses'
          description: Flag Statuses collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List feature flag statuses
      tags:
      - Feature flags
  /api/v2/flag-statuses/{projKey}/{envKey}/{key}:
    get:
      description: Get the status for a particular feature flag.
      operationId: getFeatureFlagStatus
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStatusRep'
          description: Flag status response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get feature flag status
      tags:
      - Feature flags
  /api/v2/flags/{projKey}:
    get:
      description: |
        Get a list of all features in the given project. By default, each feature includes configurations for each environment. You can filter environments with the env query parameter. For example, setting `env=production` restricts the returned configurations to just your production environment. You can also filter feature flags by tag with the tag query parameter.

        We support the following fields for filters:

        - `query` is a string that matches against the flags' keys and names. It is not case sensitive.
        - `archived` is a boolean to filter the list to archived flags. When this is absent, only unarchived flags are returned.
        - `type` is a string allowing filtering to `temporary` or `permanent` flags.
        - `status` is a string allowing filtering to `new`, `inactive`, `active`, or `launched` flags in the specified environment. This filter also requires a `filterEnv` field to be set to a valid environment. For example: `filter=status:active,filterEnv:production`.
        - `tags` is a + separated list of tags. It filters the list to members who have all of the tags in the list.
        - `hasExperiment` is a boolean with values of true or false and returns any flags that have an attached metric.
        - `hasDataExport` is a boolean with values of true or false and returns any flags that are currently exporting data in the specified environment. This includes flags that are exporting data via Experimentation. This filter also requires a `filterEnv` field to be set to a valid environment key. e.g. `filter=hasExperiment:true,filterEnv:production`
        - `evaluated` is an object that contains a key of `after` and a value in Unix time in milliseconds. This returns all flags that have been evaluated since the time you specify in the environment provided. This filter also requires a `filterEnv` field to be set to a valid environment. For example: `filter=evaluated:{"after": 1590768455282},filterEnv:production`.
        - `filterEnv` is a string with the key of a valid environment. The filterEnv field is used for filters that are environment specific. If there are multiple environment specific filters you should only declare this parameter once. For example: `filter=evaluated:{"after": 1590768455282},filterEnv:production,status:active`.

        An example filter is `query:abc,tags:foo+bar`. This matches flags with the string `abc` in their key or name, ignoring case, which also have the tags `foo` and `bar`.

        By default, this returns all flags. You can page through the list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the returned `_links` field. These links will not be present if the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page.
      operationId: getFeatureFlags
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: false
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      - description: Filter feature flags by tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter feature flags by tag
          format: string
          type: string
        style: form
      - description: The number of feature flags to return. Defaults to -1, which
          returns all flags
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of feature flags to return. Defaults to -1, which
            returns all flags
          format: int64
          type: integer
        style: form
      - description: Where to start in the list. Use this with pagination. For example,
          an offset of 10 skips the first ten items and then returns the next limit
          items
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Where to start in the list. Use this with pagination. For example,
            an offset of 10 skips the first ten items and then returns the next limit
            items
          format: int64
          type: integer
        style: form
      - description: A string that matches against the flags' keys and names. It is
          not case sensitive
        explode: true
        in: query
        name: query
        required: false
        schema:
          description: A string that matches against the flags' keys and names. It
            is not case sensitive
          format: string
          type: string
        style: form
      - description: A boolean to filter the list to archived flags. When this is
          absent, only unarchived flags will be returned
        explode: true
        in: query
        name: archived
        required: false
        schema:
          description: A boolean to filter the list to archived flags. When this is
            absent, only unarchived flags will be returned
          format: boolean
          type: boolean
        style: form
      - description: By default in API version >= 1, flags will _not_ include their
          list of prerequisites, targets or rules.  Set summary=0 to include these
          fields for each flag returned
        explode: true
        in: query
        name: summary
        required: false
        schema:
          description: By default in API version >= 1, flags will _not_ include their
            list of prerequisites, targets or rules.  Set summary=0 to include these
            fields for each flag returned
          format: boolean
          type: boolean
        style: form
      - description: A comma-separated list of filters. Each filter is of the form
          field:value
        explode: true
        in: query
        name: filter
        required: false
        schema:
          description: A comma-separated list of filters. Each filter is of the form
            field:value
          format: string
          type: string
        style: form
      - description: A comma-separated list of fields to sort by. Fields prefixed
          by a dash ( - ) sort in descending order
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: A comma-separated list of fields to sort by. Fields prefixed
            by a dash ( - ) sort in descending order
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlags'
          description: Global flags collection response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List feature flags
      tags:
      - Feature flags
    post:
      description: Create a feature flag with the given name, key, and variations
      operationId: postFeatureFlag
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The key of the feature flag to be cloned. The key identifies
          the flag in your code. For example, setting `clone=flagKey` copies the full
          targeting configuration for all environments, including `on/off` state,
          from the original flag to the new flag.
        explode: true
        in: query
        name: clone
        required: false
        schema:
          description: The key of the feature flag to be cloned. The key identifies
            the flag in your code. For example, setting `clone=flagKey` copies the
            full targeting configuration for all environments, including `on/off`
            state, from the original flag to the new flag.
          format: string
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              key: my-flag
              name: My Flag
            schema:
              $ref: '#/components/schemas/FeatureFlagBody'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Global flag response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create a feature flag
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{envKey}/{flagKey}/dependent-flags:
    get:
      description: List dependent flags across all environments for the flag specified
        in the path parameters. A dependent flag is a flag that uses another flag
        as a prerequisite.
      operationId: getDependentFlagsByEnv
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentFlagsByEnvironment'
          description: Dependent flags collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List dependent feature flags by environment
      tags:
      - Feature flags (beta)
  /api/v2/flags/{projKey}/{featureFlagKey}/copy:
    post:
      description: "The includedActions and excludedActions define the parts of the\
        \ flag configuration that are copied or not copied. By default, the entire\
        \ flag configuration is copied.\n\nYou can have either `includedActions` or\
        \ `excludedActions` but not both.\n\nValid `includedActions` and `excludedActions`\
        \ include:\n\n- `updateOn`\n- `updatePrerequisites`\n- `updateTargets`\n-\
        \ `updateRules`\n- `updateFallthrough`\n- `updateOffVariation`\n \n The `source`\
        \ and `target` must be JSON objects if using curl, specifying the environment\
        \ key and (optional) current flag configuration version in that environment.\
        \ For example:\n\n```json\n{\n  \"key\": \"production\",\n  \"currentVersion\"\
        : 3\n}\n```\n\nIf target is specified as above, the API will test to ensure\
        \ that the current flag version in the `production` environment is `3`, and\
        \ reject attempts to copy settings to `production` otherwise. You can use\
        \ this to enforce optimistic locking on copy attempts.\n"
      operationId: copyFeatureFlag
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagCopyConfigPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Global flag response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Copy feature flag
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{flagKey}/dependent-flags:
    get:
      description: List dependent flags across all environments for the flag specified
        in the path parameters. A dependent flag is a flag that uses another flag
        as a prerequisite.
      operationId: getDependentFlags
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEnvironmentDependentFlags'
          description: Multi environment dependent flags collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List dependent feature flags
      tags:
      - Feature flags (beta)
  /api/v2/flags/{projKey}/{flagKey}/experiments/{envKey}/{metricKey}:
    get:
      description: Get detailed experiment result data
      operationId: getExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      - description: A timestamp denoting the start of the data collection period,
          expressed as a Unix epoch time in milliseconds.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: A timestamp denoting the start of the data collection period,
            expressed as a Unix epoch time in milliseconds.
          format: int64
          type: integer
        style: form
      - description: A timestamp denoting the end of the data collection period, expressed
          as a Unix epoch time in milliseconds.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: A timestamp denoting the end of the data collection period,
            expressed as a Unix epoch time in milliseconds.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResultsRep'
          description: Experiment results response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get experiment results
      tags:
      - Experiments (beta)
  /api/v2/flags/{projKey}/{flagKey}/experiments/{envKey}/{metricKey}/results:
    delete:
      description: Reset all experiment results by deleting all existing data for
        an experiment
      operationId: resetExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The metric's key
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          description: The metric's key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Experiment results reset successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Reset experiment results
      tags:
      - Experiments (beta)
  /api/v2/flags/{projKey}/{flagKey}/expiring-user-targets/{envKey}:
    get:
      description: Get a list of user targets on a feature flag that are scheduled
        for removal.
      operationId: getExpiringUserTargets
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The feature flag key.
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The feature flag key.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiringUserTargetGetResponse'
          description: User targeting expirations on feature flag response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get expiring user targets for feature flag
      tags:
      - Feature flags
    patch:
      description: Update the list of user targets on a feature flag that are scheduled
        for removal.
      operationId: patchExpiringUserTargets
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The feature flag key.
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The feature flag key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiringUserTargetPatchResponse'
          description: User targeting expirations on feature flag response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update expiring user targets on feature flag
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{key}:
    delete:
      description: 'Delete a feature flag in all environments. Use with caution: only
        delete feature flags your application no longer uses.'
      operationId: deleteFeatureFlag
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete feature flag
      tags:
      - Feature flags
    get:
      description: Get a single feature flag by key. By default, this returns the
        configurations for all environments. You can filter environments with the
        `env` query parameter. For example, setting `env=production` restricts the
        returned configurations to just the `production` environment.
      operationId: getFeatureFlag
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: false
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Global flag response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get feature flag
      tags:
      - Feature flags
    patch:
      description: |
        Perform a partial update to a feature flag.

        ## Using JSON Patches on a feature flag

        When using the update feature flag endpoint to add individual users to a specific variation, there are two different patch documents, depending on whether users are already being individually targeted for the variation.

        If a flag variation already has users individually targeted, the path for the JSON Patch operation is:

        ```json
        {
          "op": "add",
          "path": "/environments/devint/targets/0/values/-",
          "value": "TestClient10"
        }
        ```

        If a flag variation does not already have users individually targeted, the path for the JSON Patch operation is:

        ```json
        [
          {
            "op": "add",
            "path": "/environments/devint/targets/-",
            "value": { "variation": 0, "values": ["TestClient10"] }
          }
        ]
        ```

        ## Using semantic patches on a feature flag

        To use a [semantic patch](/#section/Updates/Updates-via-semantic-patches) on a feature flag resource, you must include a header in the request. If you call a semantic patch resource without this header, you receive a `400` response as your semantic patch will be interpreted as a JSON patch.

        Use this header:

        ```
        Content-Type: application/json; domain-model=launchdarkly.semanticpatch
        ```

        The body of a semantic patch request takes the following three properties:

        1. comment `string`: (Optional) A description of the update.
        1. environmentKey `string`: (Required) The key of the LaunchDarkly environment.
        1. instructions `array`: (Required) The action or list of actions to be performed by the update. Each update action in the list must be an object/hash table with a `kind` property, although depending on the action, other properties may be necessary. Read below for more information on the specific supported semantic patch instructions.

        If any instruction in the patch encounters an error, the error will be returned and the flag will not be changed. In general, instructions will silently do nothing if the flag is already in the state requested by the patch instruction. For example, `removeUserTargets` does nothing when the targets have already been removed). They will generally error if a parameter refers to something that does not exist, like a variation ID that doesn't correspond to a variation on the flag or a rule ID that doesn't belong to a rule on the flag. Other specific error conditions are noted in the instruction descriptions.

        ### Instructions

        #### `turnFlagOn`

        Sets the flag's targeting state to on.

        #### `turnFlagOff`

        Sets the flag's targeting state to off.

        #### `addUserTargets`

        Adds the user keys in `values` to the individual user targets for the variation specified by `variationId`. Returns an error if this causes the same user key to be targeted in multiple variations.

        ##### Parameters

        - `values`: list of user keys
        - `variationId`: ID of a variation on the flag

        #### `removeUserTargets`

        Removes the user keys in `values` to the individual user targets for the variation specified by `variationId`. Does nothing if the user keys are not targeted.

        ##### Parameters

        - `values`: list of user keys
        - `variationId`: ID of a variation on the flag

        #### `replaceUserTargets`

        Completely replaces the existing set of user targeting. All variations must be provided. Example:

        ```json
        {
          "kind": "replaceUserTargets",
          "targets": [
            {
              "variationId": "variation-1",
              "values": ["blah", "foo", "bar"]
            },
            {
              "variationId": "variation-2",
              "values": ["abc", "def"]
            }
          ]
        }
        ```

        ##### Parameters

        - `targets`: a list of user targeting

        #### `clearUserTargets`

        Removes all individual user targets from the variation specified by `variationId`

        ##### Parameters

        - `variationId`: ID of a variation on the flag

        #### `addPrerequisite`

        Adds the flag indicated by `key` with variation `variationId` as a prerequisite to the flag.

        ##### Parameters

        - `key`: flag key of another flag
        - `variationId`: ID of a variation of the flag with key `key`

        #### `removePrerequisite`

        Removes the prerequisite indicated by `key`. Does nothing if this prerequisite does not exist.

        ##### Parameters

        - `key`: flag key of an existing prerequisite

        #### `updatePrerequisite`

        Changes the prerequisite with flag key `key` to the variation indicated by `variationId`. Returns an error if this prerequisite does not exist.

        ##### Parameters

        - `key`: flag key of an existing prerequisite
        - `variationId`: ID of a variation of the flag with key `key`

        #### `replacePrerequisites`

        Completely replaces the existing set of prerequisites for a given flag. Example:

        ```json
        {
          "kind": "replacePrerequisites",
          "prerequisites": [
            {
              "key": "flag-key",
              "variationId": "variation-1"
            },
            {
              "key": "another-flag",
              "variationId": "variation-2"
            }
          ]
        }
        ```

        ##### Parameters

        - `prerequisites`: a list of prerequisites

        #### `addRule`

        Adds a new rule to the flag with the given `clauses` which serves the variation indicated by `variationId` or the percent rollout indicated by `rolloutWeights` and `rolloutBucketBy`. If `beforeRuleId` is set, the rule will be added in the list of rules before the indicated rule. Otherwise, the rule will be added to the end of the list.

        ##### Parameters

        - `clauses`: Array of clauses (see `addClauses`)
        - `beforeRuleId`: Optional ID of a rule in the flag
        - `variationId`: ID of a variation of the flag
        - `rolloutWeights`: Map of variationId to weight in thousandths of a percent (0-100000)
        - `rolloutBucketBy`: Optional user attribute

        #### `removeRule`

        Removes the targeting rule specified by `ruleId`. Does nothing if the rule does not exist.

        ##### Parameters

        - `ruleId`: ID of a rule in the flag

        #### `replaceRules`

        Completely replaces the existing rules for a given flag. Example:

        ```json
        {
          "kind": "replaceRules",
          "rules": [
            {
              "variationId": "variation-1",
              "description": "myRule",
              "clauses": [
                {
                  "attribute": "segmentMatch",
                  "op": "segmentMatch",
                  "values": ["test"]
                }
              ],
              "trackEvents": true
            }
          ]
        }
        ```

        ##### Parameters

        - `rules`: a list of rules

        #### `addClauses`

        Adds the given clauses to the rule indicated by `ruleId`.

        ##### Parameters

        - `ruleId`: ID of a rule in the flag
        - `clauses`: Array of clause objects, with `attribute` (string), `op` (string), and `values` (array of strings, numbers, or dates) properties.

        #### `removeClauses`

        Removes the clauses specified by `clauseIds` from the rule indicated by `ruleId`.

        #### Parameters

        - `ruleId`: ID of a rule in the flag
        - `clauseIds`: Array of IDs of clauses in the rule

        #### `updateClause`

        Replaces the clause indicated by `ruleId` and `clauseId` with `clause`.

        ##### Parameters

        - `ruleId`: ID of a rule in the flag
        - `clauseId`: ID of a clause in that rule
        - `clause`: Clause object

        #### `addValuesToClause`

        Adds `values` to the values of the clause indicated by `ruleId` and `clauseId`.

        ##### Parameters

        - `ruleId`: ID of a rule in the flag
        - `clauseId`: ID of a clause in that rule
        - `values`: Array of strings

        #### `removeValuesFromClause`

        Removes `values` from the values of the clause indicated by `ruleId` and `clauseId`.

        ##### Parameters

        `ruleId`: ID of a rule in the flag
        `clauseId`: ID of a clause in that rule
        `values`: Array of strings

        #### `reorderRules`

        Rearranges the rules to match the order given in `ruleIds`. Will return an error if `ruleIds` does not match the current set of rules on the flag.

        ##### Parameters

        - `ruleIds`: Array of IDs of all rules in the flag

        #### `updateRuleVariationOrRollout`

        Updates what the rule indicated by `ruleId` serves if its clauses evaluate to true.
        Can either be a fixed variation indicated by `variationId` or a percent rollout indicated by `rolloutWeights` and `rolloutBucketBy`.

        ##### Parameters

        - `ruleId`: ID of a rule in the flag
        - `variationId`: ID of a variation of the flag
          or
        - `rolloutWeights`: Map of variationId to weight in thousandths of a percent (0-100000)
        - `rolloutBucketBy`: Optional user attribute

        #### `updateFallthroughVariationOrRollout`

        Updates the flag's fallthrough, which is served if none of the targeting rules match.
        Can either be a fixed variation indicated by `variationId` or a percent rollout indicated by `rolloutWeights` and `rolloutBucketBy`.

        ##### Parameters

        `variationId`: ID of a variation of the flag
        or
        `rolloutWeights`: Map of variationId to weight in thousandths of a percent (0-100000)
        `rolloutBucketBy`: Optional user attribute

        #### `updateOffVariation`

        Updates the variation served when the flag's targeting is off to the variation indicated by `variationId`.

        ##### Parameters

        `variationId`: ID of a variation of the flag

        ### Example

        ```json
        {
          "environmentKey": "production",
          "instructions": [
            {
              "kind": "turnFlagOn"
            },
            {
              "kind": "turnFlagOff"
            },
            {
              "kind": "addUserTargets",
              "variationId": "8bfb304e-d516-47e5-8727-e7f798e8992d",
              "values": ["userId", "userId2"]
            },
            {
              "kind": "removeUserTargets",
              "variationId": "8bfb304e-d516-47e5-8727-e7f798e8992d",
              "values": ["userId3", "userId4"]
            },
            {
              "kind": "updateFallthroughVariationOrRollout",
              "rolloutWeights": {
                "variationId": 50000,
                "variationId2": 50000
              },
              "rolloutBucketBy": null
            },
            {
              "kind": "addRule",
              "clauses": [
                {
                  "attribute": "segmentMatch",
                  "negate": false,
                  "values": ["test-segment"]
                }
              ],
              "variationId": null,
              "rolloutWeights": {
                "variationId": 50000,
                "variationId2": 50000
              },
              "rolloutBucketBy": "key"
            },
            {
              "kind": "removeRule",
              "ruleId": "99f12464-a429-40fc-86cc-b27612188955"
            },
            {
              "kind": "reorderRules",
              "ruleIds": ["2f72974e-de68-4243-8dd3-739582147a1f", "8bfb304e-d516-47e5-8727-e7f798e8992d"]
            },
            {
              "kind": "addClauses",
              "ruleId": "1134",
              "clauses": [
                {
                  "attribute": "email",
                  "op": "in",
                  "negate": false,
                  "values": ["test@test.com"]
                }
              ]
            },
            {
              "kind": "removeClauses",
              "ruleId": "1242529",
              "clauseIds": ["8bfb304e-d516-47e5-8727-e7f798e8992d"]
            },
            {
              "kind": "updateClause",
              "ruleId": "2f72974e-de68-4243-8dd3-739582147a1f",
              "clauseId": "309845",
              "clause": {
                "attribute": "segmentMatch",
                "negate": false,
                "values": ["test-segment"]
              }
            },
            {
              "kind": "updateRuleVariationOrRollout",
              "ruleId": "2342",
              "rolloutWeights": null,
              "rolloutBucketBy": null
            },
            {
              "kind": "updateOffVariation",
              "variationId": "3242453"
            },
            {
              "kind": "addPrerequisite",
              "variationId": "234235",
              "key": "flagKey2"
            },
            {
              "kind": "updatePrerequisite",
              "variationId": "234235",
              "key": "flagKey2"
            },
            {
              "kind": "removePrerequisite",
              "key": "flagKey"
            }
          ]
        }
        ```

        ## Using JSON patches on a feature flag

        If you do not include the header described above, you can use [JSON patch](/#section/Updates/Updates-via-JSON-Patch).
      operationId: patchFeatureFlag
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
          description: Global flag response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update feature flag
      tags:
      - Feature flags
  /api/v2/members:
    get:
      description: |
        Return a list of account members.

        By default, this returns the first 20 members. Page through this list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the returned `_links` field. These links are not present if the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page.

        ### Filtering members

        LaunchDarkly supports three fields for filters: `query`, `role`, and `lastSeen`:

        - `query` is a string that matches against the members' emails and names. It is not case sensitive.
        - `role` is a `|` separated list of roles and custom roles. It filters the list to members who have any of the roles in the list. For the purposes of this filtering, `Owner` counts as `Admin`.
        - `lastSeen` is a JSON object in one of the following formats:
          - `{"never": true}` - Members that have never been active, such as those who have not accepted their invitation to LaunchDarkly, or have not logged in after being provisioned via SCIM.
          - `{"noData": true}` - Members that have not been active since LaunchDarkly began recording last seen timestamps.
          - `{"before": 1608672063611}` - Members that have not been active since the provided value, which should be a timestamp in Unix epoch milliseconds.

        For example, the filter `query:abc,role:admin|customrole` matches members with the string `abc` in their email or name, ignoring case, who also are either an an `Owner` or `Admin` or have the custom role `customrole`.

        ### Sorting members

        LaunchDarkly supports two fields for sorting: `displayName` and `lastSeen`:

        - `displayName` sorts by first + last name, using the member's email if no name is set.
        - `lastSeen` sorts by the `_lastSeen` property. LaunchDarkly considers members that have never been seen or have no data the oldest.
      operationId: getMembers
      parameters:
      - description: The number of members to return in the response. Defaults to
          20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of members to return in the response. Defaults to
            20.
          format: int64
          type: integer
        style: form
      - description: Where to start in the list. This is for use with pagination.
          For example, an offset of 10 would skip the first ten items and then return
          the next `limit` items.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Where to start in the list. This is for use with pagination.
            For example, an offset of 10 would skip the first ten items and then return
            the next `limit` items.
          format: int64
          type: integer
        style: form
      - description: A comma-separated list of filters. Each filter is of the form
          `field:value`. Supported fields are explained above.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          description: A comma-separated list of filters. Each filter is of the form
            `field:value`. Supported fields are explained above.
          format: string
          type: string
        style: form
      - description: A comma-separated list of fields to sort by. Fields prefixed
          by a dash ( - ) sort in descending order.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: A comma-separated list of fields to sort by. Fields prefixed
            by a dash ( - ) sort in descending order.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
          description: Member collection response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List account members
      tags:
      - Account members
    post:
      description: |
        > ### Full use of this API resource is only available to accounts with paid subscriptions
        >
        > The ability to bulk invite members is a paid feature. Single members may be invited if not on a paid plan.

        Invite one or more new members to join an account. Each member is sent an invitation. Members with "admin" or "owner" roles may create new members, as well as anyone with a "createMember" permission for "member/\*". If a member cannot be invited, the entire request is rejected and no members are invited from that request.

        Each member _must_ have an `email` field and either a `role` or a `customRoles` field. If any of the fields are not populated correctly, the request is rejected with the reason specified in the "message" field of the response.

        Requests to create account members will not work if SCIM is enabled for the account.

        _No more than 50 members may be created per request._

        A request may also fail because of conflicts with existing members. These conflicts are reported using the additional `code` and `invalid_emails` response fields with the following possible values for `code`:

        - **email_already_exists_in_account**: A member with this email address already exists in this account.
        - **email_taken_in_different_account**: A member with this email address exists in another account.
        - **duplicate_email**s: This request contains two or more members with the same email address.

        A request that fails for one of the above reasons returns an HTTP response code of 400 (Bad Request).
      operationId: postMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMemberFormListPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Members'
          description: Members response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Invite new members
      tags:
      - Account members
  /api/v2/members/{id}:
    delete:
      description: Delete a single account member by ID. Requests to delete account
        members will not work if SCIM is enabled for the account.
      operationId: deleteMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete account member
      tags:
      - Account members
    get:
      description: Get a single account member by ID
      operationId: getMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get account member
      tags:
      - Account members
    patch:
      description: Update a single account member. The request should be a valid JSON
        Patch document describing the changes to be made to the member. Requests to
        update account members will not work if SCIM is enabled for the account.
      operationId: patchMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: Member response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Modify an account member
      tags:
      - Account members
  /api/v2/metrics/{projectKey}:
    get:
      description: Get a list of all metrics for the specified project.
      operationId: getMetrics
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricCollectionRep'
          description: Metrics response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
      summary: List metrics
      tags:
      - Metrics
    post:
      description: Create a new metric in the specified project. Note that the expected
        POST body differs depending on the specified kind property.
      operationId: postMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              key: my-metric
              kind: pageview
              urls:
              - kind: substring
                substring: foo
            schema:
              $ref: '#/components/schemas/MetricPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Successful metric response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create metric
      tags:
      - Metrics
  /api/v2/metrics/{projectKey}/{key}:
    delete:
      description: Delete a metric by key.
      operationId: deleteMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete metric
      tags:
      - Metrics
    get:
      description: Get information for a single metric from the specific project.
      operationId: getMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Metric response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get metric
      tags:
      - Metrics
    patch:
      description: Patch a environment by key.
      operationId: patchMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Metric response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update metric
      tags:
      - Metrics
  /api/v2/openapi.json:
    get:
      description: The OpenAPI spec endpoint serves the latest version of the OpenAPI
        specification for LaunchDarkly's API in json format.
      operationId: getOpenapiSpec
      responses:
        "200":
          description: OpenAPI Spec
      summary: Gets the OpenAPI spec in json
      tags:
      - Other
  /api/v2/projects:
    get:
      description: Get a list of all projects in the account.
      operationId: getProjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
          description: Project collection response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List projects
      tags:
      - Projects
    post:
      description: Create a new project with the given key and name. Project keys
        must be unique within an account.
      operationId: postProject
      requestBody:
        content:
          application/json:
            example:
              key: my-project
              name: My Project
            schema:
              $ref: '#/components/schemas/ProjectPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Successful project response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create project
      tags:
      - Projects
  /api/v2/projects/{projectKey}:
    delete:
      description: 'Delete a project by key. Caution: deleting a project will delete
        all associated environments and feature flags. You cannot delete the last
        project in an account.'
      operationId: deleteProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete project
      tags:
      - Projects
    get:
      description: Get a single project by key.
      operationId: getProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get project
      tags:
      - Projects
    patch:
      description: Update a project. Requires a [JSON Patch](http://tools.ietf.org/html/rfc6902)
        representation of the desired changes to the project.
      operationId: patchProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: Project response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update project
      tags:
      - Projects
  /api/v2/projects/{projectKey}/environments:
    post:
      description: |
        > ### Approval settings
        >
        > The `approvalSettings` key is only returned when the Flag Approvals feature is enabled.
        >
        > You cannot update approval settings when creating new environments. Update approval settings with the PATCH Environment API.

        Create a new environment in a specified project with a given name, key, swatch color, and default TTL.
      operationId: postEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              color: DADBEE
              key: my-environment
              name: My Environment
            schema:
              $ref: '#/components/schemas/EnvironmentPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Successful environment response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create environment
      tags:
      - Environments
  /api/v2/projects/{projectKey}/environments/{envKey}/apiKey:
    post:
      description: Reset an environment's SDK key with an optional expiry time for
        the old key.
      operationId: resetEnvironmentSDKKey
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The time at which you want the old SDK key to expire, in UNIX
          milliseconds. By default, the key expires immediately.
        explode: true
        in: query
        name: expiry
        required: false
        schema:
          description: The time at which you want the old SDK key to expire, in UNIX
            milliseconds. By default, the key expires immediately.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Successful environment response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Reset environment SDK key
      tags:
      - Environments
  /api/v2/projects/{projectKey}/environments/{envKey}/mobileKey:
    post:
      description: Reset an environment's mobile key. The optional expiry for the
        old key is deprecated for this endpoint, so the old key will always expire
        immediately.
      operationId: resetEnvironmentMobileKey
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Successful environment response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Reset environment mobile SDK key
      tags:
      - Environments
  /api/v2/projects/{projectKey}/environments/{environmentKey}:
    delete:
      description: Delete a environment by key.
      operationId: deleteEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete environment
      tags:
      - Environments
    get:
      description: |
        > ### Approval settings
        >
        > The `approvalSettings` key is only returned when the Flag Approvals feature is enabled.

        Get an environment given a project and key.
      operationId: getEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get environment
      tags:
      - Environments
    patch:
      description: |
        > ### Approval settings
        >
        > The `approvalSettings` key is only returned when the Flag Approvals feature is enabled.
        >
        > Only the `canReviewOwnRequest`, `canApplyDeclinedChanges`, `minNumApprovals`, `required` and `requiredApprovalTagsfields` are editable.
        >
        > If you try to patch the environment by setting both `required` and `requiredApprovalTags`, it fails and an error appears. Users can specify either required approvals for all flags in an environment or those with specific tags, but not both. Only customers on an Enterprise plan can require approval for flag updates by either mechanism.
      operationId: patchEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Environment response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update environment
      tags:
      - Environments
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests:
    get:
      description: Get all approval requests for a feature flag
      operationId: getApprovals
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagConfigApprovalRequestsResponse'
          description: Successful approval request response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List all approval requests
      tags:
      - Approvals
    post:
      description: Create an approval request for a feature flag
      operationId: postApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFlagConfigApprovalRequestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests-flag-copy:
    post:
      description: Create an approval request to copy a feature flag's configuration
        across environments.
      operationId: postFlagCopyConfigApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCopyFlagConfigApprovalRequestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create approval request to copy flag configurations across environments
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}:
    delete:
      description: Delete an approval request for a feature flag
      operationId: deleteApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete approval request
      tags:
      - Approvals
    get:
      description: Get a single approval request for a feature flag
      operationId: getApproval
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/apply:
    post:
      description: Apply approval request by either approving or declining changes.
      operationId: postApprovalRequestApplyRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApprovalRequestApplyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagConfigApprovalRequestResponse'
          description: Successful approval request apply response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Apply approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/reviews:
    post:
      description: Review approval request by either approving or declining changes.
      operationId: postApprovalRequestReview
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postApprovalRequestReviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagConfigApprovalRequestResponse'
          description: Successful approval request review response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Review approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes:
    get:
      description: Get a list of scheduled changes that will be applied to the feature
        flag.
      operationId: getFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChanges'
          description: Scheduled changes collection response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
      summary: List scheduled changes
      tags:
      - Scheduled changes
    post:
      description: Create scheduled changes for a feature flag. If the ignoreConficts
        query parameter is false and the new instructions would conflict with the
        current state of the feature flag or any existing scheduled changes, the request
        will fail. If the parameter is true and there are conflicts, the request will
        succeed as normal.
      operationId: postFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: Whether or not to succeed or fail when the new instructions conflict
          with existing scheduled changes
        explode: true
        in: query
        name: ignoreConflicts
        required: false
        schema:
          description: Whether or not to succeed or fail when the new instructions
            conflict with existing scheduled changes
          format: boolean
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFlagScheduledChangesInput'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChange'
          description: Successful scheduled changes response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create scheduled changes workflow
      tags:
      - Scheduled changes
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{id}:
    delete:
      description: Delete a scheduled changes workflow
      operationId: deleteFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete scheduled changes workflow
      tags:
      - Scheduled changes
    get:
      description: Get a scheduled change that will be applied to the feature flag
        by ID
      operationId: getFeatureFlagScheduledChange
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChange'
          description: Scheduled change response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get a scheduled change
      tags:
      - Scheduled changes
    patch:
      description: Update a scheduled change, overriding existing instructions with
        the new ones.<br /><br />Requires a semantic patch representation of the desired
        changes to the resource. To learn more about semantic patches, read [Updates](/#section/Updates/Updates-via-semantic-patches)
      operationId: patchFlagConfigScheduledChange
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change ID
          format: string
          type: string
        style: simple
      - description: Whether or not to succeed or fail when the new instructions conflict
          with existing scheduled changes
        explode: true
        in: query
        name: ignoreConflicts
        required: false
        schema:
          description: Whether or not to succeed or fail when the new instructions
            conflict with existing scheduled changes
          format: boolean
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagScheduledChangesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagScheduledChange'
          description: Successful scheduled changes response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update scheduled changes workflow
      tags:
      - Scheduled changes
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/workflows:
    get:
      description: Get workflows from a feature flag
      operationId: getWorkflows
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWorkflowsListingOutputRep'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get workflows
      tags:
      - Workflows (beta)
    post:
      description: Create a workflow for a feature flag
      operationId: postWorkflow
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomWorkflowInputRep'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWorkflowOutputRep'
          description: Successful workflow response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create workflow
      tags:
      - Workflows (beta)
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/workflows/{workflowId}:
    delete:
      description: Delete a workflow from a feature flag
      operationId: deleteWorkflow
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The workflow id
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          description: The workflow id
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete workflow
      tags:
      - Workflows (beta)
    get:
      description: Get a specific workflow by ID
      operationId: getCustomWorkflow
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The workflow ID
        explode: false
        in: path
        name: workflowId
        required: true
        schema:
          description: The workflow ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomWorkflowOutputRep'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get custom workflow
      tags:
      - Workflows (beta)
  /api/v2/public-ip-list:
    get:
      description: 'Get a list of IP ranges the LaunchDarkly service uses. You can
        use this list to allow LaunchDarkly through your firewall.<br /><br />This
        endpoint returns a JSON object with two attributes: `addresses` and `outboundAddresses`.
        The `addresses` element contains the IP addresses LaunchDarkly''s service
        uses. The `outboundAddresses` element contains the IP addresses outgoing webhook
        notifications use.<br /><br />We post upcoming changes to this list in advance
        on our [status page](https://status.launchdarkly.com/).'
      operationId: getIps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ipList'
          description: Public IP response
      summary: Gets the public IP list
      tags:
      - Other
  /api/v2/roles:
    get:
      description: Get a complete list of custom roles. Custom roles let you create
        flexible policies providing fine-grained access control to everything in LaunchDarkly,
        from feature flags to goals, environments, and teams. With custom roles, it's
        possible to enforce access policies that meet your exact workflow needs. Custom
        roles are available to customers on our enterprise plans. If you're interested
        in learning more about our enterprise plans, contact sales@launchdarkly.com.
      operationId: getCustomRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoles'
          description: Custom roles collection response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List custom roles
      tags:
      - Custom roles
    post:
      description: Create a new custom role
      operationId: postCustomRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomRolePost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRole'
          description: Custom role response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create custom role
      tags:
      - Custom roles
  /api/v2/roles/{key}:
    delete:
      description: Delete a custom role by key
      operationId: deleteCustomRole
      parameters:
      - description: The key of the custom role to delete
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom role to delete
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete custom role
      tags:
      - Custom roles
    get:
      description: Get a single custom role by key or ID
      operationId: getCustomRole
      parameters:
      - description: The custom role's key or ID
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The custom role's key or ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRole'
          description: Custom role response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get custom role
      tags:
      - Custom roles
    patch:
      description: Update a single custom role. The request must be a valid JSON Patch
        document describing the changes to be made to the custom role.
      operationId: patchCustomRole
      parameters:
      - description: The key of the custom role to update
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom role to update
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRole'
          description: Custom role response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update custom role
      tags:
      - Custom roles
  /api/v2/segments/{projKey}/{envKey}:
    get:
      description: Get a list of all user segments in the given project
      operationId: getSegments
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegments'
          description: Segment collection response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
      summary: List segments
      tags:
      - Segments
    post:
      description: Create a new user segment
      operationId: postSegment
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentBody'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegment'
          description: Segment response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create segment
      tags:
      - Segments
  /api/v2/segments/{projKey}/{envKey}/{key}:
    delete:
      description: Delete a user segment.
      operationId: deleteSegment
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The user segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user segment key.
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete segment
      tags:
      - Segments
    get:
      description: Get a single user segment by key
      operationId: getSegment
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegment'
          description: Segment response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get segment
      tags:
      - Segments
    patch:
      description: Update a user segment. The request body must be a valid JSON patch
        or JSON merge patch document. To learn more about semantic patches, read [Updates](/#section/Updates).
      operationId: patchSegment
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The user segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user segment key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSegment'
          description: Segment response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Patch segment
      tags:
      - Segments
  /api/v2/segments/{projKey}/{envKey}/{key}/users:
    post:
      description: Update targets included or excluded in a Big Segment
      operationId: updateBigSegmentTargets
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentUserState'
        required: true
      responses:
        "204":
          description: Action succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update targets on a Big Segment
      tags:
      - Segments
  /api/v2/segments/{projKey}/{envKey}/{key}/users/{userKey}:
    get:
      description: Returns the membership status (included/excluded) for a given user
        in this segment. This operation does not support basic Segments.
      operationId: getSegmentMembershipForUser
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key.
          format: string
          type: string
        style: simple
      - description: The user key.
        explode: false
        in: path
        name: userKey
        required: true
        schema:
          description: The user key.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BigSegmentTarget'
          description: Segment membership for user response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get Big Segment membership for user
      tags:
      - Segments
  /api/v2/segments/{projKey}/{segmentKey}/expiring-user-targets/{envKey}:
    get:
      description: Get a list of a segment's user targets that are scheduled for removal
      operationId: getExpiringUserTargetsForSegment
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key.
        explode: false
        in: path
        name: segmentKey
        required: true
        schema:
          description: The segment key.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiringUserTargetGetResponse'
          description: Expiring user target response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get expiring user targets for segment
      tags:
      - Segments
    patch:
      description: Update the list of a segment's user targets that are scheduled
        for removal<br /><br />Requires a semantic patch representation of the desired
        changes to the resource. To learn more about semantic patches, read [Updates](/#section/Updates/Updates-via-semantic-patches).<br
        /><br />If the request is well-formed but any of its instructions failed to
        process, this operation returns status code `200`. In this case, the response
        `errors` array will be non-empty.
      operationId: patchExpiringUserTargetsForSegment
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The user segment key.
        explode: false
        in: path
        name: segmentKey
        required: true
        schema:
          description: The user segment key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchSegmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiringUserTargetPatchResponse'
          description: Expiring user target response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update expiring user targets for segment
      tags:
      - Segments
  /api/v2/teams:
    get:
      description: |
        Return a list of teams.

        By default, this returns the first 20 teams. Page through this list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the returned `_links` field. These links are not present if the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page.

        ### Filtering teams

        LaunchDarkly supports the `query` field for filtering. `query` is a string that matches against the teams' names and keys. It is not case sensitive. For example, the filter `query:abc` matches teams with the string `abc` in their name or key.
      operationId: getTeams
      parameters:
      - description: The number of teams to return in the response. Defaults to 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of teams to return in the response. Defaults to
            20.
          format: int64
          type: integer
        style: form
      - description: Where to start in the list. This is for use with pagination.
          For example, an offset of 10 would skip the first ten items and then return
          the next `limit` items.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Where to start in the list. This is for use with pagination.
            For example, an offset of 10 would skip the first ten items and then return
            the next `limit` items.
          format: int64
          type: integer
        style: form
      - description: A comma-separated list of filters. Each filter is of the form
          `field:value`. Supported fields are explained above.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          description: A comma-separated list of filters. Each filter is of the form
            `field:value`. Supported fields are explained above.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamCollectionRep'
          description: Teams collection response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List teams
      tags:
      - Teams (beta)
    post:
      description: Create a team
      operationId: postTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teamPostInput'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamRep'
          description: Successful teams response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create team
      tags:
      - Teams (beta)
  /api/v2/teams/{key}:
    delete:
      description: Delete a team by key
      operationId: deleteTeam
      parameters:
      - description: The team key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The team key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete team
      tags:
      - Teams (beta)
    get:
      description: Fetch a team by key
      operationId: getTeam
      parameters:
      - description: The team key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The team key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamRep'
          description: Team response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get team
      tags:
      - Teams (beta)
    patch:
      description: |
        Perform a partial update to a team.

        The body of a semantic patch request takes the following three properties:

        1. comment `string`: (Optional) A description of the update.
        1. instructions `array`: (Required) The action or list of actions to be performed by the update. Each update action in the list must be an object/hash table with a `kind` property, although depending on the action, other properties may be necessary. Read below for more information on the specific supported semantic patch instructions.

        If any instruction in the patch encounters an error, the error will be returned and the flag will not be changed. In general, instructions will silently do nothing if the flag is already in the state requested by the patch instruction. They will generally error if a parameter refers to something that does not exist. Other specific error conditions are noted in the instruction descriptions.

        ### Instructions

        #### `addCustomRoles`

        Adds custom roles to the team. Team members will have these custom roles granted to them.

        ##### Parameters

        - `values`: list of custom role keys

        #### `removeCustomRoles`

        Removes the custom roles on the team. Team members will no longer have these custom roles granted to them.

        ##### Parameters

        - `values`: list of custom role keys

        #### `addMembers`

        Adds members to the team.

        ##### Parameters

        - `values`: list of member IDs

        #### `removeMembers`

        Removes members from the team.

        ##### Parameters

        - `values`: list of member IDs

        #### `addPermissionGrants`

        Adds permission grants to members for the team, allowing them to, for example, act as a team maintainer. A permission grant may have either an `actionSet` or a list of `actions` but not both at the same time. The members do not have to be team members to have a permission grant for the team.

        ##### Parameters

        - `actionSet`: name of the action set
        - `actions`: list of actions
        - `memberIDs`: list of member IDs

        #### `removePermissionGrants`

        Removes permission grants from members for the team. The `actionSet` and `actions` must match an existing permission grant.

        ##### Parameters

        - `actionSet`: name of the action set
        - `actions`: list of actions
        - `memberIDs`: list of member IDs

        #### `updateDescription`

        Updates the team's description.

        ##### Parameters

        - `value`: the team's new description

        #### `updateName`

        Updates the team's name.

        ##### Parameters

        - `value`: the team's new name
      operationId: patchTeam
      parameters:
      - description: The team key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The team key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teamPatchInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamCollectionRep'
          description: Teams collection response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedErrorRep'
          description: Method not allowed
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update team
      tags:
      - Teams (beta)
  /api/v2/tokens:
    get:
      description: Fetch a list of all access tokens.
      operationId: getTokens
      parameters:
      - description: If set to true, and the authentication access token has the 'Admin'
          role, personal access tokens for all members will be retrieved.
        explode: true
        in: query
        name: showAll
        required: false
        schema:
          description: If set to true, and the authentication access token has the
            'Admin' role, personal access tokens for all members will be retrieved.
          format: boolean
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
          description: Access token response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List access tokens
      tags:
      - Access tokens
    post:
      description: Create a new access token.
      operationId: postToken
      requestBody:
        content:
          application/json:
            example:
              role: reader
            schema:
              $ref: '#/components/schemas/AccessTokenPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Access token response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Create access token
      tags:
      - Access tokens
  /api/v2/tokens/{id}:
    delete:
      description: Delete an access token by ID.
      operationId: deleteToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete access token
      tags:
      - Access tokens
    get:
      description: Get a single access token by ID.
      operationId: getToken
      parameters:
      - description: The ID of the access token
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Access token response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get access token
      tags:
      - Access tokens
    patch:
      description: Update an access token's settings. The request should be a valid
        JSON Patch document describing the changes to be made to the access token.
      operationId: patchToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
            - op: replace
              path: /role
              value: writer
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Access token response JSON
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchFailedErrorRep'
          description: Invalid patch content
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Patch access token
      tags:
      - Access tokens
  /api/v2/tokens/{id}/reset:
    post:
      description: Reset an access token's secret key with an optional expiry time
        for the old key.
      operationId: resetToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      - description: An expiration time for the old token key, expressed as a Unix
          epoch time in milliseconds. By default, the token will expire immediately.
        explode: true
        in: query
        name: expiry
        required: false
        schema:
          description: An expiration time for the old token key, expressed as a Unix
            epoch time in milliseconds. By default, the token will expire immediately.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Access token response JSON
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Reset access token
      tags:
      - Access tokens
  /api/v2/usage/evaluations/{projKey}/{envKey}/{flagKey}:
    get:
      description: Get time-series arrays of the number of times a flag is evaluated,
        broken down by the variation that resulted from that evaluation. The granularity
        of the data depends on the age of the data requested. If the requested range
        is within the past two hours, minutely data is returned. If it is within the
        last two days, hourly data is returned. Otherwise, daily data is returned.
      operationId: getEvaluationsUsage
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The feature flag's key.
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The feature flag's key.
          format: string
          type: string
        style: simple
      - description: The series of data returned starts from this timestamp. Defaults
          to 30 days ago.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: The series of data returned starts from this timestamp. Defaults
            to 30 days ago.
          format: string
          type: string
        style: form
      - description: The series of data returned ends at this timestamp. Defaults
          to the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: The series of data returned ends at this timestamp. Defaults
            to the current time.
          format: string
          type: string
        style: form
      - description: The timezone to use for breaks between days when returning daily
          data.
        explode: true
        in: query
        name: tz
        required: false
        schema:
          description: The timezone to use for breaks between days when returning
            daily data.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesListRep'
          description: Usage response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get evaluations usage
      tags:
      - Account usage (beta)
  /api/v2/usage/events/{type}:
    get:
      description: Get time-series arrays of the number of times a flag is evaluated,
        broken down by the variation that resulted from that evaluation. The granularity
        of the data depends on the age of the data requested. If the requested range
        is within the past two hours, minutely data is returned. If it is within the
        last two days, hourly data is returned. Otherwise, daily data is returned.
      operationId: getEventsUsage
      parameters:
      - description: The type of event to retrieve. Must be either `received` or `published`.
        explode: false
        in: path
        name: type
        required: true
        schema:
          description: The type of event to retrieve. Must be either `received` or
            `published`.
          format: string
          type: string
        style: simple
      - description: The series of data returned starts from this timestamp. Defaults
          to 24 hours ago.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: The series of data returned starts from this timestamp. Defaults
            to 24 hours ago.
          format: string
          type: string
        style: form
      - description: The series of data returned ends at this timestamp. Defaults
          to the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: The series of data returned ends at this timestamp. Defaults
            to the current time.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesListRep'
          description: Usage response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get events usage
      tags:
      - Account usage (beta)
  /api/v2/usage/mau:
    get:
      description: Get a time-series array of the number of monthly active users (MAU)
        seen by LaunchDarkly from your account. The granularity is always daily.
      operationId: getMauUsage
      parameters:
      - description: The series of data returned starts from this timestamp. Defaults
          to 30 days ago.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: The series of data returned starts from this timestamp. Defaults
            to 30 days ago.
          format: string
          type: string
        style: form
      - description: The series of data returned ends at this timestamp. Defaults
          to the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: The series of data returned ends at this timestamp. Defaults
            to the current time.
          format: string
          type: string
        style: form
      - description: A project key to filter results to. Can be specified multiple
          times, one query parameter per project key, to view data for multiple projects.
        explode: true
        in: query
        name: project
        required: false
        schema:
          description: A project key to filter results to. Can be specified multiple
            times, one query parameter per project key, to view data for multiple
            projects.
          format: string
          type: string
        style: form
      - description: An environment key to filter results to. When using this parameter,
          exactly one project key must also be set. Can be specified multiple times
          as separate query parameters to view data for multiple environments within
          a single project.
        explode: true
        in: query
        name: environment
        required: false
        schema:
          description: An environment key to filter results to. When using this parameter,
            exactly one project key must also be set. Can be specified multiple times
            as separate query parameters to view data for multiple environments within
            a single project.
          format: string
          type: string
        style: form
      - description: 'An SDK type to filter results to. Can be specified multiple
          times, one query parameter per SDK type. Valid values: client, server'
        explode: true
        in: query
        name: sdktype
        required: false
        schema:
          description: 'An SDK type to filter results to. Can be specified multiple
            times, one query parameter per SDK type. Valid values: client, server'
          format: string
          type: string
        style: form
      - description: An SDK name to filter results to. Can be specified multiple times,
          one query parameter per SDK.
        explode: true
        in: query
        name: sdk
        required: false
        schema:
          description: An SDK name to filter results to. Can be specified multiple
            times, one query parameter per SDK.
          format: string
          type: string
        style: form
      - description: If specified, filters results to either anonymous or nonanonymous
          users.
        explode: true
        in: query
        name: anonymous
        required: false
        schema:
          description: If specified, filters results to either anonymous or nonanonymous
            users.
          format: string
          type: string
        style: form
      - description: 'If specified, returns data for each distinct value of the given
          field. Can be specified multiple times to group data by multiple dimensions
          (for example, to group by both project and SDK). Valid values: project,
          environment, sdktype, sdk, anonymous'
        explode: true
        in: query
        name: groupby
        required: false
        schema:
          description: 'If specified, returns data for each distinct value of the
            given field. Can be specified multiple times to group data by multiple
            dimensions (for example, to group by both project and SDK). Valid values:
            project, environment, sdktype, sdk, anonymous'
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesListRep'
          description: Usage response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get MAU usage
      tags:
      - Account usage (beta)
  /api/v2/usage/mau/bycategory:
    get:
      description: Get time-series arrays of the number of monthly active users (MAU)
        seen by LaunchDarkly from your account, broken down by the category of users.
        The category is either `browser`, `mobile`, or `backend`.
      operationId: getMauUsageByCategory
      parameters:
      - description: The series of data returned starts from this timestamp. Defaults
          to 30 days ago.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: The series of data returned starts from this timestamp. Defaults
            to 30 days ago.
          format: string
          type: string
        style: form
      - description: The series of data returned ends at this timestamp. Defaults
          to the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: The series of data returned ends at this timestamp. Defaults
            to the current time.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesListRep'
          description: Usage response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get MAU usage by category
      tags:
      - Account usage (beta)
  /api/v2/usage/mau/sdks:
    get:
      description: Get a list of SDKs. These are all of the SDKs that have connected
        to LaunchDarkly by monthly active users (MAU) in the requested time period.
      operationId: getMauSdksByType
      parameters:
      - description: The series of data returned starts from this timestamp. Defaults
          to seven days ago.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: The series of data returned starts from this timestamp. Defaults
            to seven days ago.
          format: string
          type: string
        style: form
      - description: The series of data returned ends at this timestamp. Defaults
          to the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: The series of data returned ends at this timestamp. Defaults
            to the current time.
          format: string
          type: string
        style: form
      - description: The type of SDK with monthly active users (MAU) to list. Must
          be either `client` or `server`
        explode: true
        in: query
        name: sdktype
        required: false
        schema:
          description: The type of SDK with monthly active users (MAU) to list. Must
            be either `client` or `server`
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdkListRep'
          description: MAU SDKs response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get MAU SDKs by type
      tags:
      - Account usage (beta)
  /api/v2/usage/streams/{source}:
    get:
      description: Get a time-series array of the number of streaming connections
        to LaunchDarkly in each time period. The granularity of the data depends on
        the age of the data requested. If the requested range is within the past two
        hours, minutely data is returned. If it is within the last two days, hourly
        data is returned. Otherwise, daily data is returned.
      operationId: getStreamUsage
      parameters:
      - description: The source of streaming connections to describe. Must be either
          `client` or `server`.
        explode: false
        in: path
        name: source
        required: true
        schema:
          description: The source of streaming connections to describe. Must be either
            `client` or `server`.
          format: string
          type: string
        style: simple
      - description: The series of data returned starts from this timestamp. Defaults
          to 30 days ago.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: The series of data returned starts from this timestamp. Defaults
            to 30 days ago.
          format: string
          type: string
        style: form
      - description: The series of data returned ends at this timestamp. Defaults
          to the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: The series of data returned ends at this timestamp. Defaults
            to the current time.
          format: string
          type: string
        style: form
      - description: The timezone to use for breaks between days when returning daily
          data.
        explode: true
        in: query
        name: tz
        required: false
        schema:
          description: The timezone to use for breaks between days when returning
            daily data.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesListRep'
          description: Usage response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get stream usage
      tags:
      - Account usage (beta)
  /api/v2/usage/streams/{source}/bysdkversion:
    get:
      description: Get multiple series of the number of streaming connections to LaunchDarkly
        in each time period, separated by SDK type and version. Information about
        each series is in the metadata array. The granularity of the data depends
        on the age of the data requested. If the requested range is within the past
        2 hours, minutely data is returned. If it is within the last two days, hourly
        data is returned. Otherwise, daily data is returned.
      operationId: getStreamUsageBySdkVersion
      parameters:
      - description: The source of streaming connections to describe. Must be either
          `client` or `server`.
        explode: false
        in: path
        name: source
        required: true
        schema:
          description: The source of streaming connections to describe. Must be either
            `client` or `server`.
          format: string
          type: string
        style: simple
      - description: The series of data returned starts from this timestamp. Defaults
          to 24 hours ago.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: The series of data returned starts from this timestamp. Defaults
            to 24 hours ago.
          format: string
          type: string
        style: form
      - description: The series of data returned ends at this timestamp. Defaults
          to the current time.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: The series of data returned ends at this timestamp. Defaults
            to the current time.
          format: string
          type: string
        style: form
      - description: The timezone to use for breaks between days when returning daily
          data.
        explode: true
        in: query
        name: tz
        required: false
        schema:
          description: The timezone to use for breaks between days when returning
            daily data.
          format: string
          type: string
        style: form
      - description: If included, this filters the returned series to only those that
          match this SDK name.
        explode: true
        in: query
        name: sdk
        required: false
        schema:
          description: If included, this filters the returned series to only those
            that match this SDK name.
          format: string
          type: string
        style: form
      - description: If included, this filters the returned series to only those that
          match this SDK version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          description: If included, this filters the returned series to only those
            that match this SDK version.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeriesListRep'
          description: Usage response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get stream usage by SDK version
      tags:
      - Account usage (beta)
  /api/v2/usage/streams/{source}/sdkversions:
    get:
      description: Get a list of SDK version objects, which contain an SDK name and
        version. These are all of the SDKs that have connected to LaunchDarkly from
        your account in the past 60 days.
      operationId: getStreamUsageSdkversion
      parameters:
      - description: The source of streaming connections to describe. Must be either
          `client` or `server`.
        explode: false
        in: path
        name: source
        required: true
        schema:
          description: The source of streaming connections to describe. Must be either
            `client` or `server`.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SdkVersionListRep'
          description: SDK Versions response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get stream usage SDK versions
      tags:
      - Account usage (beta)
  /api/v2/user-attributes/{projectKey}/{environmentKey}:
    get:
      description: Get all in-use user attributes in the specified environment. The
        set of in-use attributes typically consists of all attributes seen within
        the past 30 days.
      operationId: getUserAttributeNames
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAttributeNamesRep'
          description: User attribute names response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
      summary: Get user attribute names
      tags:
      - Users (beta)
  /api/v2/user-search/{projKey}/{envKey}:
    get:
      description: |
        Search users in LaunchDarkly based on their last active date, a user attribute filter set, or a search query. Do not use to list all users in LaunchDarkly. Instead, use the [List users](getUsers) API resource.

        An example user attribute filter set is `filter=firstName:Anna,activeTrial:false`. This matches users that have the user attribute `firstName` set to `Anna`, that also have the attribute `activeTrial` set to `false`.

        > ### `offset` is deprecated
        >
        > `offset` is deprecated and will be removed in a future API version. You can still use `offset` and `limit` for pagination, but we recommend you use `sort` and `searchAfter` instead. `searchAfter` allows you to page through more than 10,000 users, but `offset` and `limit` do not.
      operationId: getSearchUsers
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: Full-text search for users based on name, first name, last name,
          e-mail address, or key
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Full-text search for users based on name, first name, last
            name, e-mail address, or key
          format: string
          type: string
        style: form
      - description: 'Specifies the maximum number of items in the collection to return
          (max: 50, default: 20)'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: 'Specifies the maximum number of items in the collection to
            return (max: 50, default: 20)'
          format: int64
          type: integer
        style: form
      - description: Specifies the first item to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Specifies the first item to return in the collection
          format: int64
          type: integer
        style: form
      - description: A unix epoch time in milliseconds specifying the maximum last
          time a user requested a feature flag from LaunchDarkly
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: A unix epoch time in milliseconds specifying the maximum last
            time a user requested a feature flag from LaunchDarkly
          format: int64
          type: integer
        style: form
      - description: Specifies a field by which to sort. LaunchDarkly supports the
          `userKey` and `lastSeen` fields. Fields prefixed by a dash ( - ) sort in
          descending order.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          description: Specifies a field by which to sort. LaunchDarkly supports the
            `userKey` and `lastSeen` fields. Fields prefixed by a dash ( - ) sort
            in descending order.
          format: string
          type: string
        style: form
      - description: Limits results to users with sort values after the value you
          specify. You can use this for pagination, but we recommend using the `next`
          link we provide instead.
        explode: true
        in: query
        name: searchAfter
        required: false
        schema:
          description: Limits results to users with sort values after the value you
            specify. You can use this for pagination, but we recommend using the `next`
            link we provide instead.
          format: string
          type: string
        style: form
      - description: A comma-separated list of user attribute filters. Each filter
          is in the form of attributeKey:attributeValue
        explode: true
        in: query
        name: filter
        required: false
        schema:
          description: A comma-separated list of user attribute filters. Each filter
            is in the form of attributeKey:attributeValue
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: Users collection response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Find users
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}:
    get:
      description: |
        List all users in the environment. Includes the total count of users. In each page, there is up to `limit` users returned. The default is 20. This is useful for exporting all users in the system for further analysis. To paginate through, follow the `next` link in the `_links` object, as [described in Representations](/#section/Representations).
      operationId: getUsers
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The number of elements to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of elements to return per page
          format: int64
          type: integer
        style: form
      - description: Limits results to users with sort values after the value you
          specify. You can use this for pagination, but we recommend using the `next`
          link we provide instead.
        explode: true
        in: query
        name: searchAfter
        required: false
        schema:
          description: Limits results to users with sort values after the value you
            specify. You can use this for pagination, but we recommend using the `next`
            link we provide instead.
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: Users collection response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List users
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}/{key}:
    delete:
      description: Delete a user by key
      operationId: deleteUser
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusConflictErrorRep'
          description: Status conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete user
      tags:
      - Users
    get:
      description: Get a user by key. The `user` object contains all attributes sent
        in `variation` calls for that key.
      operationId: getUser
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get user
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}/{key}/flags:
    get:
      description: Get the current flag settings for a given user. The most important
        attribute in the response is the `_value`. The `_value` is the setting that
        the user sees. For a boolean feature toggle, this is `true`, `false`, or `null`.
        `null` returns if there is no defined fallthrough value. The example response
        indicates that the user `Abbie_Braun` has the `sort.order` flag enabled and
        the `alternate.page` flag disabled.<br /><br />The setting attribute indicates
        whether you've explicitly targeted a user to receive a particular variation.
        For example, if you have turned off a feature flag for a user, this setting
        will be `false`. A setting of `null` means that you haven't assigned that
        user to a specific variation.
      operationId: getUserFlagSettings
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFlagSettings'
          description: User flag settings collection response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List flag settings for user
      tags:
      - User settings
  /api/v2/users/{projKey}/{envKey}/{key}/flags/{featureKey}:
    get:
      description: Get a single flag setting for a user by key. The most important
        attribute in the response is the `_value`. The `_value` is the current setting
        that the user sees. For a boolean feature toggle, this is `true`, `false`,
        or `null`. `null` returns if there is no defined fallback value. The example
        response indicates that the user `Abbie_Braun` has the `sort.order` flag enabled.<br
        /><br />The setting attribute indicates whether you've explicitly targeted
        a user to receive a particular variation. For example, if you have turned
        off a feature flag for a user, this setting will be `false`. A setting of
        `null` means that you haven't assigned that user to a specific variation.
      operationId: getUserFlagSetting
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: featureKey
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFlagSetting'
          description: User flag settings response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get flag setting for user
      tags:
      - User settings
    put:
      description: |
        Enable or disable a feature flag for a user based on their key.

        To change the setting, send a `PUT` request to this URL with a request body containing the flag value. For example, to disable the sort.order flag for the user `test@test.com`, send a `PUT` to
        `https://app.launchdarkly.com/api/v2/users/default/production/test@test.com/flags/sort.order` with the following body:

        ```json
        {
          "setting": false
        }
        ```

        Omitting the setting attribute, or a setting of null, in your `PUT` "clears" the current setting for a user.

        If you previously patched the flag, and the patch included the user's data, LaunchDarkly continues to use that data. If LaunchDarkly has never encountered the user's key before, it calculates the flag values based on the user key alone.
      operationId: putFlagSetting
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: featureKey
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValuePut'
        required: true
      responses:
        "204":
          description: Action succeeded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update flag settings for user
      tags:
      - User settings
  /api/v2/users/{projKey}/{userKey}/expiring-user-targets/{envKey}:
    get:
      description: Get a list of flags for which the given user is scheduled for removal.
      operationId: getExpiringFlagsForUser
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The user key.
        explode: false
        in: path
        name: userKey
        required: true
        schema:
          description: The user key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiringUserTargetGetResponse'
          description: User targeting expirations on feature flag response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get expiring dates on flags for user
      tags:
      - User settings
    patch:
      description: |
        Schedule the specified user for removal from individual user targeting on one or more flags. You can only schedule a user for removal on a single variation per flag.

        To learn more about semantic patches, read [Updates](/#section/Updates).

        If you previously patched the flag, and the patch included the user's data, LaunchDarkly continues to use that data. If LaunchDarkly has never encountered the user's key before, it calculates the flag values based on the user key alone.
      operationId: patchExpiringFlagsForUser
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The user key.
        explode: false
        in: path
        name: userKey
        required: true
        schema:
          description: The user key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiringUserTargetPatchResponse'
          description: User targeting expirations on feature flag response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update expiring user target for flags
      tags:
      - User settings
  /api/v2/versions:
    get:
      description: Get the latest API version, the list of valid API versions in ascending
        order, and the version being used for this request. These are all in the external,
        date-based format.
      operationId: getVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionsRep'
          description: Versions information response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get version information
      tags:
      - Other
  /api/v2/webhooks:
    get:
      description: Fetch a list of all webhooks.
      operationId: getAllWebhooks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
          description: Webhooks response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: List webhooks
      tags:
      - Webhooks
    post:
      description: Create a new webhook
      operationId: postWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhookPost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Webhook response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Creates a webhook
      tags:
      - Webhooks
  /api/v2/webhooks/{id}:
    delete:
      description: Delete a webhook by ID.
      operationId: deleteWebhook
      parameters:
      - description: The ID of the webhook to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the webhook to delete
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action succeeded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Delete webhook
      tags:
      - Webhooks
    get:
      description: Get a single webhook by ID.
      operationId: getWebhook
      parameters:
      - description: The ID of the webhook
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the webhook
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Webhook response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Get webhook
      tags:
      - Webhooks
    patch:
      description: Update a webhook's settings. The request should be a valid JSON
        Patch document describing the changes to be made to the webhook.
      operationId: patchWebhook
      parameters:
      - description: The ID of the webhook to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the webhook to update
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
          description: Webhook response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestErrorRep'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorRep'
          description: Invalid access token
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorRep'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorRep'
          description: Invalid resource identifier
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitedErrorRep'
          description: Rate limited
      summary: Update webhook
      tags:
      - Webhooks
components:
  schemas:
    AccessDeniedReasonRep:
      example:
        role_name: role_name
        notActions:
        - null
        - null
        notResources:
        - {}
        - {}
        effect: effect
        resources:
        - {}
        - {}
        actions:
        - null
        - null
      properties:
        resources:
          items:
            $ref: '#/components/schemas/ResourceSpecifierImpl'
          type: array
        notResources:
          items:
            $ref: '#/components/schemas/ResourceSpecifierImpl'
          type: array
        actions:
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        effect:
          type: string
        role_name:
          type: string
      required:
      - effect
      type: object
    AccessDeniedRep:
      example:
        reason:
          role_name: role_name
          notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        action: action
      properties:
        action:
          type: string
        reason:
          $ref: '#/components/schemas/AccessDeniedReasonRep'
      required:
      - action
      - reason
      type: object
    AccessRep:
      example:
        denied:
        - reason:
            role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          action: action
        - reason:
            role_name: role_name
            notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          action: action
      properties:
        denied:
          items:
            $ref: '#/components/schemas/AccessDeniedRep'
          type: array
      required:
      - denied
      type: object
    AccessTokenPost:
      example:
        inlineRole:
        - notActions:
          - null
          - null
          notResources:
          - notResources
          - notResources
          effect: effect
          resources:
          - resources
          - resources
          actions:
          - null
          - null
        - notActions:
          - null
          - null
          notResources:
          - notResources
          - notResources
          effect: effect
          resources:
          - resources
          - resources
          actions:
          - null
          - null
        role: reader
        customRoleIds:
        - customRoleIds
        - customRoleIds
        name: name
        description: description
        serviceToken: true
        defaultApiVersion: 0
      properties:
        name:
          description: A human-friendly name for the access token
          type: string
        description:
          description: A description for the access token
          type: string
        role:
          description: Built-in role for the token
          enum:
          - reader
          - writer
          - admin
          type: string
        customRoleIds:
          description: A list of custom role IDs to use as access limits for the access
            token
          items:
            type: string
          type: array
        inlineRole:
          description: 'A JSON array of statements represented as JSON objects with
            three attributes: effect, resources, actions. May be used in place of
            a built-in or custom role.'
          items:
            $ref: '#/components/schemas/StatementPost'
          type: array
        serviceToken:
          description: Whether the token is a service token https://docs.launchdarkly.com/home/account-security/api-access-tokens#service-tokens
          type: boolean
        defaultApiVersion:
          description: The default API version for this token
          type: integer
      type: object
    ActionIdentifier:
      type: string
    ActionInputRep:
      example:
        instructions: ""
      properties:
        instructions: {}
      type: object
    ActionOutputRep:
      example:
        instructions:
        - null
        - null
        kind: kind
      properties:
        kind:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/Instruction'
          type: array
      required:
      - instructions
      - kind
      type: object
    ActionSpecifier:
      type: string
    AllVariationsSummary:
      additionalProperties:
        $ref: '#/components/schemas/VariationSummary'
      type: object
    ApprovalConditionInputRep:
      properties:
        description:
          type: string
        notifyMemberIds:
          items:
            type: string
          type: array
      type: object
    ApprovalConditionOutputRep:
      properties:
        description:
          type: string
        notifyMemberIds:
          items:
            type: string
          type: array
        allReviews:
          items:
            $ref: '#/components/schemas/ReviewOutputRep'
          type: array
        reviewStatus:
          type: string
        appliedDate:
          format: int64
          type: integer
      required:
      - allReviews
      - description
      - notifyMemberIds
      - reviewStatus
      type: object
    ApprovalRequestServiceKind:
      type: string
    ApprovalSettings:
      example:
        serviceKind: launchdarkly
        canReviewOwnRequest: false
        serviceConfig: {}
        requiredApprovalTags:
        - require-approval
        bypassApprovalsForPendingChanges: false
        canApplyDeclinedChanges: true
        minNumApprovals: 1
        required: true
      properties:
        required:
          description: If approvals are required for this environment.
          example: true
          type: boolean
        bypassApprovalsForPendingChanges:
          example: false
          type: boolean
        minNumApprovals:
          description: Sets the amount of approvals required before a member can apply
            a change. The minimum is one and the maximum is five.
          example: 1
          type: integer
        canReviewOwnRequest:
          description: Allow someone who makes an approval request to apply their
            own change.
          example: false
          type: boolean
        canApplyDeclinedChanges:
          description: Allow applying the change as long as at least one person has
            approved.
          example: true
          type: boolean
        serviceKind:
          description: Which service to use for managing approvals.
          example: launchdarkly
          type: string
        serviceConfig:
          additionalProperties: {}
          example: {}
          type: object
        requiredApprovalTags:
          description: Require approval only on flags with the provided tags. Otherwise
            all flags will require approval.
          example:
          - require-approval
          items:
            type: string
          type: array
      required:
      - bypassApprovalsForPendingChanges
      - canApplyDeclinedChanges
      - canReviewOwnRequest
      - minNumApprovals
      - required
      - requiredApprovalTags
      - serviceConfig
      - serviceKind
      type: object
    AuditLogEntryListingRep:
      example:
        date: 0
        app:
          _links:
            key:
              href: href
              type: type
          isScim: true
          name: name
          _id: _id
          maintainerName: maintainerName
        parent:
          _links:
            key:
              href: href
              type: type
          resource: ""
          name: name
        titleVerb: titleVerb
        _links:
          key:
            href: href
            type: type
        kind: kind
        subject:
          _links:
            key:
              href: href
              type: type
          avatarUrl: avatarUrl
          name: name
        description: description
        shortDescription: shortDescription
        title: title
        token:
          ending: ending
          _links:
            key:
              href: href
              type: type
          name: name
          _id: _id
          serviceToken: true
        target:
          _links:
            key:
              href: href
              type: type
          name: name
          resources:
          - null
          - null
        _accountId: _accountId
        name: name
        member:
          firstName: firstName
          lastName: lastName
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        comment: comment
        _id: _id
        accesses:
        - resource: ""
          action: action
        - resource: ""
          action: action
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _id:
          type: string
        _accountId:
          type: string
        date:
          format: int64
          type: integer
        accesses:
          items:
            $ref: '#/components/schemas/ResourceAccess'
          type: array
        kind:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        comment:
          type: string
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
      required:
      - _accountId
      - _id
      - _links
      - accesses
      - date
      - description
      - kind
      - name
      - shortDescription
      type: object
    AuditLogEntryListingRepCollection:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - date: 0
          app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          _links:
            key:
              href: href
              type: type
          kind: kind
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          description: description
          shortDescription: shortDescription
          title: title
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          _accountId: _accountId
          name: name
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          comment: comment
          _id: _id
          accesses:
          - resource: ""
            action: action
          - resource: ""
            action: action
        - date: 0
          app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          _links:
            key:
              href: href
              type: type
          kind: kind
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          description: description
          shortDescription: shortDescription
          title: title
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          _accountId: _accountId
          name: name
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          comment: comment
          _id: _id
          accesses:
          - resource: ""
            action: action
          - resource: ""
            action: action
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - _links
      - items
      type: object
    AuditLogEntryRep:
      example:
        date: 0
        app:
          _links:
            key:
              href: href
              type: type
          isScim: true
          name: name
          _id: _id
          maintainerName: maintainerName
        parent:
          _links:
            key:
              href: href
              type: type
          resource: ""
          name: name
        titleVerb: titleVerb
        _links:
          key:
            href: href
            type: type
        kind: kind
        subject:
          _links:
            key:
              href: href
              type: type
          avatarUrl: avatarUrl
          name: name
        delta: ""
        description: description
        subentries:
        - date: 0
          app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          _links:
            key:
              href: href
              type: type
          kind: kind
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          description: description
          shortDescription: shortDescription
          title: title
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          _accountId: _accountId
          name: name
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          comment: comment
          _id: _id
          accesses:
          - resource: ""
            action: action
          - resource: ""
            action: action
        - date: 0
          app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          _links:
            key:
              href: href
              type: type
          kind: kind
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          description: description
          shortDescription: shortDescription
          title: title
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - null
            - null
          _accountId: _accountId
          name: name
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          comment: comment
          _id: _id
          accesses:
          - resource: ""
            action: action
          - resource: ""
            action: action
        shortDescription: shortDescription
        title: title
        currentVersion: ""
        token:
          ending: ending
          _links:
            key:
              href: href
              type: type
          name: name
          _id: _id
          serviceToken: true
        target:
          _links:
            key:
              href: href
              type: type
          name: name
          resources:
          - null
          - null
        _accountId: _accountId
        previousVersion: ""
        merge: ""
        name: name
        member:
          firstName: firstName
          lastName: lastName
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        comment: comment
        _id: _id
        triggerBody: ""
        accesses:
        - resource: ""
          action: action
        - resource: ""
          action: action
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _id:
          type: string
        _accountId:
          type: string
        date:
          format: int64
          type: integer
        accesses:
          items:
            $ref: '#/components/schemas/ResourceAccess'
          type: array
        kind:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        comment:
          type: string
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
        delta: {}
        triggerBody: {}
        merge: {}
        previousVersion: {}
        currentVersion: {}
        subentries:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep'
          type: array
      required:
      - _accountId
      - _id
      - _links
      - accesses
      - date
      - description
      - kind
      - name
      - shortDescription
      type: object
    AuthorizedAppDataRep:
      example:
        _links:
          key:
            href: href
            type: type
        isScim: true
        name: name
        _id: _id
        maintainerName: maintainerName
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _id:
          type: string
        isScim:
          type: boolean
        name:
          type: string
        maintainerName:
          type: string
      type: object
    BigSegmentTarget:
      example:
        excluded: true
        included: true
        userKey: userKey
      properties:
        userKey:
          description: The user key
          type: string
        included:
          description: Indicates whether the user is included.<br />Included users
            are always segment members, regardless of segment rules.
          type: boolean
        excluded:
          description: Indicates whether the user is excluded.<br />Segment rules
            bypass excluded users, so they will never be included based on rules.
            Excluded users may still be included explicitly.
          type: boolean
      required:
      - excluded
      - included
      - userKey
      type: object
    BranchCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          syncTime: 0
          references:
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          _links:
            key: ""
          name: main
          updateSequenceId: 25
        - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          syncTime: 0
          references:
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          _links:
            key: ""
          name: main
          updateSequenceId: 25
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        items:
          description: An array of branches
          items:
            $ref: '#/components/schemas/BranchRep'
          type: array
      required:
      - _links
      - items
      type: object
    BranchRep:
      example:
        head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
        syncTime: 0
        references:
        - path: /main/index.js
          hint: javascript
          hunks:
          - aliases:
            - enableFeature
            - EnableFeature
            startingLineNumber: 45
            lines: var enableFeature = 'enable-feature';
            projKey: default
            flagKey: enable-feature
          - aliases:
            - enableFeature
            - EnableFeature
            startingLineNumber: 45
            lines: var enableFeature = 'enable-feature';
            projKey: default
            flagKey: enable-feature
        - path: /main/index.js
          hint: javascript
          hunks:
          - aliases:
            - enableFeature
            - EnableFeature
            startingLineNumber: 45
            lines: var enableFeature = 'enable-feature';
            projKey: default
            flagKey: enable-feature
          - aliases:
            - enableFeature
            - EnableFeature
            startingLineNumber: 45
            lines: var enableFeature = 'enable-feature';
            projKey: default
            flagKey: enable-feature
        _links:
          key: ""
        name: main
        updateSequenceId: 25
      properties:
        name:
          description: The branch name
          example: main
          type: string
        head:
          description: An ID representing the branch HEAD. For example, a commit SHA.
          example: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          type: string
        updateSequenceId:
          description: An optional ID used to prevent older data from overwriting
            newer data
          example: 25
          format: int64
          type: integer
        syncTime:
          format: int64
          type: integer
        references:
          description: An array of flag references found on the branch
          items:
            $ref: '#/components/schemas/ReferenceRep'
          type: array
        _links:
          additionalProperties: {}
          type: object
      required:
      - _links
      - head
      - name
      - syncTime
      type: object
    Clause:
      example:
        op: op
        negate: true
        values:
        - ""
        - ""
        _id: _id
        attribute: attribute
      properties:
        _id:
          type: string
        attribute:
          type: string
        op:
          type: string
        values:
          items: {}
          type: array
        negate:
          type: boolean
      required:
      - attribute
      - negate
      - op
      - values
      type: object
    ClientSideAvailability:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingMobileKey:
          type: boolean
        usingEnvironmentId:
          type: boolean
      type: object
    ClientSideAvailabilityPost:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingEnvironmentId:
          type: boolean
        usingMobileKey:
          type: boolean
      required:
      - usingEnvironmentId
      - usingMobileKey
      type: object
    ConditionBaseOutputRep:
      properties:
        _id:
          type: string
        kind:
          type: string
        _execution:
          $ref: '#/components/schemas/ExecutionOutputRep'
      required:
      - _execution
      - _id
      type: object
    ConditionInputRep:
      example:
        notifyMemberIds:
        - notifyMemberIds
        - notifyMemberIds
        kind: kind
        executeNow: true
        executionDate: 0
        description: description
      properties:
        executionDate:
          format: int64
          type: integer
        executeNow:
          type: boolean
        description:
          type: string
        notifyMemberIds:
          items:
            type: string
          type: array
        kind:
          type: string
      type: object
    ConditionKind:
      type: string
    ConditionOutputRep:
      example:
        allReviews:
        - kind: kind
          comment: comment
          _id: _id
          creationDate: 5
          memberId: memberId
        - kind: kind
          comment: comment
          _id: _id
          creationDate: 5
          memberId: memberId
        _execution:
          status: status
        notifyMemberIds:
        - notifyMemberIds
        - notifyMemberIds
        kind: kind
        executionDate: 1
        description: description
        appliedDate: 5
        reviewStatus: reviewStatus
        _id: _id
      properties:
        _id:
          type: string
        kind:
          type: string
        _execution:
          $ref: '#/components/schemas/ExecutionOutputRep'
        executionDate:
          format: int64
          type: integer
        description:
          type: string
        notifyMemberIds:
          items:
            type: string
          type: array
        allReviews:
          items:
            $ref: '#/components/schemas/ReviewOutputRep'
          type: array
        reviewStatus:
          type: string
        appliedDate:
          format: int64
          type: integer
      required:
      - _execution
      - _id
      - allReviews
      - description
      - notifyMemberIds
      - reviewStatus
      type: object
    ConfidenceIntervalRep:
      example:
        upper: 5.637376656633329
        lower: 2.3021358869347655
      properties:
        upper:
          type: number
        lower:
          type: number
      type: object
    Conflict:
      example:
        reason: reason
        instruction:
          key: ""
      properties:
        instruction:
          additionalProperties: {}
          type: object
        reason:
          description: Reason why the conflict exists
          type: string
      type: object
    ConflictOutputRep:
      example:
        message: message
        stageId: stageId
      properties:
        stageId:
          type: string
        message:
          type: string
      required:
      - message
      - stageId
      type: object
    CopiedFromEnv:
      example:
        version: 2
        key: key
      properties:
        key:
          description: Key of feature flag copied
          type: string
        version:
          type: integer
      required:
      - key
      type: object
    CustomProperties:
      additionalProperties:
        $ref: '#/components/schemas/customProperty'
      type: object
    CustomRole:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        _links:
          key:
            href: href
            type: type
        basePermissions: basePermissions
        name: name
        description: description
        _id: _id
        key: key
        policy:
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
      properties:
        _id:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
        description:
          type: string
        key:
          type: string
        name:
          type: string
        policy:
          items:
            $ref: '#/components/schemas/Statement'
          type: array
        basePermissions:
          type: string
      required:
      - _id
      - _links
      - key
      - name
      - policy
      type: object
    CustomRolePost:
      example:
        basePermissions: basePermissions
        name: name
        description: description
        key: key
        policy:
        - notActions:
          - null
          - null
          notResources:
          - notResources
          - notResources
          effect: effect
          resources:
          - resources
          - resources
          actions:
          - null
          - null
        - notActions:
          - null
          - null
          notResources:
          - notResources
          - notResources
          effect: effect
          resources:
          - resources
          - resources
          actions:
          - null
          - null
      properties:
        name:
          description: A human-friendly name for the custom role
          type: string
        key:
          description: The custom role key
          type: string
        description:
          description: Description of custom role
          type: string
        policy:
          items:
            $ref: '#/components/schemas/StatementPost'
          type: array
        basePermissions:
          type: string
      required:
      - key
      - name
      - policy
      type: object
    CustomRolePostData:
      properties:
        name:
          description: A human-friendly name for the custom role
          type: string
        key:
          description: The custom role key
          type: string
        description:
          description: Description of custom role
          type: string
        policy:
          items:
            $ref: '#/components/schemas/StatementPost'
          type: array
        basePermissions:
          type: string
      required:
      - key
      - name
      - policy
      type: object
    CustomRoles:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          basePermissions: basePermissions
          name: name
          description: description
          _id: _id
          key: key
          policy:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          basePermissions: basePermissions
          name: name
          description: description
          _id: _id
          key: key
          policy:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/CustomRole'
          type: array
      type: object
    CustomWorkflowInputRep:
      example:
        maintainerId: maintainerId
        name: name
        stages:
        - name: name
          action:
            instructions: ""
          conditions:
          - notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executeNow: true
            executionDate: 0
            description: description
          - notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executeNow: true
            executionDate: 0
            description: description
        - name: name
          action:
            instructions: ""
          conditions:
          - notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executeNow: true
            executionDate: 0
            description: description
          - notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executeNow: true
            executionDate: 0
            description: description
        description: description
      properties:
        maintainerId:
          type: string
        name:
          type: string
        description:
          type: string
        stages:
          items:
            $ref: '#/components/schemas/StageInputRep'
          type: array
      required:
      - description
      type: object
    CustomWorkflowMeta:
      example:
        stage:
          name: name
          index: 7
        name: name
      properties:
        name:
          type: string
        stage:
          $ref: '#/components/schemas/CustomWorkflowStageMeta'
      type: object
    CustomWorkflowOutputRep:
      example:
        _maintainerId: _maintainerId
        _execution:
          status: status
        _links:
          key:
            href: href
            type: type
        kind: kind
        name: name
        stages:
        - _execution:
            status: status
          name: name
          action:
            instructions:
            - null
            - null
            kind: kind
          _id: _id
          conditions:
          - allReviews:
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            _execution:
              status: status
            notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executionDate: 1
            description: description
            appliedDate: 5
            reviewStatus: reviewStatus
            _id: _id
          - allReviews:
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            _execution:
              status: status
            notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executionDate: 1
            description: description
            appliedDate: 5
            reviewStatus: reviewStatus
            _id: _id
        - _execution:
            status: status
          name: name
          action:
            instructions:
            - null
            - null
            kind: kind
          _id: _id
          conditions:
          - allReviews:
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            _execution:
              status: status
            notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executionDate: 1
            description: description
            appliedDate: 5
            reviewStatus: reviewStatus
            _id: _id
          - allReviews:
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            - kind: kind
              comment: comment
              _id: _id
              creationDate: 5
              memberId: memberId
            _execution:
              status: status
            notifyMemberIds:
            - notifyMemberIds
            - notifyMemberIds
            kind: kind
            executionDate: 1
            description: description
            appliedDate: 5
            reviewStatus: reviewStatus
            _id: _id
        description: description
        _id: _id
        _conflicts:
        - message: message
          stageId: stageId
        - message: message
          stageId: stageId
        _creationDate: 6
        _version: 0
      properties:
        _id:
          type: string
        _version:
          type: integer
        _conflicts:
          items:
            $ref: '#/components/schemas/ConflictOutputRep'
          type: array
        _creationDate:
          format: int64
          type: integer
        _maintainerId:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        name:
          type: string
        description:
          type: string
        kind:
          type: string
        stages:
          items:
            $ref: '#/components/schemas/StageOutputRep'
          type: array
        _execution:
          $ref: '#/components/schemas/ExecutionOutputRep'
      required:
      - _conflicts
      - _creationDate
      - _execution
      - _id
      - _links
      - _maintainerId
      - _version
      - name
      type: object
    CustomWorkflowStageMeta:
      example:
        name: name
        index: 7
      properties:
        index:
          type: integer
        name:
          type: string
      type: object
    CustomWorkflowsListingOutputRep:
      example:
        items:
        - _maintainerId: _maintainerId
          _execution:
            status: status
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          stages:
          - _execution:
              status: status
            name: name
            action:
              instructions:
              - null
              - null
              kind: kind
            _id: _id
            conditions:
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
          - _execution:
              status: status
            name: name
            action:
              instructions:
              - null
              - null
              kind: kind
            _id: _id
            conditions:
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
          description: description
          _id: _id
          _conflicts:
          - message: message
            stageId: stageId
          - message: message
            stageId: stageId
          _creationDate: 6
          _version: 0
        - _maintainerId: _maintainerId
          _execution:
            status: status
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          stages:
          - _execution:
              status: status
            name: name
            action:
              instructions:
              - null
              - null
              kind: kind
            _id: _id
            conditions:
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
          - _execution:
              status: status
            name: name
            action:
              instructions:
              - null
              - null
              kind: kind
            _id: _id
            conditions:
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
            - allReviews:
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              - kind: kind
                comment: comment
                _id: _id
                creationDate: 5
                memberId: memberId
              _execution:
                status: status
              notifyMemberIds:
              - notifyMemberIds
              - notifyMemberIds
              kind: kind
              executionDate: 1
              description: description
              appliedDate: 5
              reviewStatus: reviewStatus
              _id: _id
          description: description
          _id: _id
          _conflicts:
          - message: message
            stageId: stageId
          - message: message
            stageId: stageId
          _creationDate: 6
          _version: 0
      properties:
        items:
          items:
            $ref: '#/components/schemas/CustomWorkflowOutputRep'
          type: array
      required:
      - items
      type: object
    DateVersion:
      type: integer
    DefaultClientSideAvailabilityPost:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingEnvironmentId:
          type: boolean
        usingMobileKey:
          type: boolean
      required:
      - usingEnvironmentId
      - usingMobileKey
      type: object
    Defaults:
      example:
        onVariation: 2
        offVariation: 4
      properties:
        onVariation:
          type: integer
        offVariation:
          type: integer
      required:
      - offVariation
      - onVariation
      type: object
    DependentFlag:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _site:
          $ref: '#/components/schemas/Link'
      required:
      - _links
      - _site
      - key
      type: object
    DependentFlagEnvironment:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _site:
          $ref: '#/components/schemas/Link'
      required:
      - _links
      - _site
      - key
      type: object
    DependentFlagsByEnvironment:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        items:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/DependentFlag'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _site:
          $ref: '#/components/schemas/Link'
      required:
      - _links
      - _site
      - items
      type: object
    Destination:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        _links:
          parent:
            href: /api/v2/destinations
            type: application/json
          self:
            href: /api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4
            type: application/json
        kind: google-pubsub
        name: name
        _id: 610addeadbeefaa86ec9a7d4
        version: 1
        config: '{"project":"test-prod","topic":"ld-pubsub-test-192301"}'
        "on": true
      properties:
        _id:
          example: 610addeadbeefaa86ec9a7d4
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/destinations
              type: application/json
            self:
              href: /api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4
              type: application/json
          type: object
        name:
          type: string
        kind:
          enum:
          - google-pubsub
          - kinesis
          - mparticle
          - segment
          - azure-event-hubs
          example: google-pubsub
          type: string
        version:
          example: 1
          type: number
        config:
          example: '{"project":"test-prod","topic":"ld-pubsub-test-192301"}'
        "on":
          type: boolean
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    DestinationPost:
      example:
        kind: google-pubsub
        name: name
        config: ""
        "on": true
      properties:
        name:
          description: A human-readable name for your data export destination.
          type: string
        kind:
          enum:
          - google-pubsub
          - kinesis
          - mparticle
          - segment
          - azure-event-hubs
          type: string
        config: {}
        "on":
          type: boolean
      type: object
    Destinations:
      example:
        _links:
          self:
            href: /api/v2/destinations
            type: application/json
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            parent:
              href: /api/v2/destinations
              type: application/json
            self:
              href: /api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4
              type: application/json
          kind: google-pubsub
          name: name
          _id: 610addeadbeefaa86ec9a7d4
          version: 1
          config: '{"project":"test-prod","topic":"ld-pubsub-test-192301"}'
          "on": true
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            parent:
              href: /api/v2/destinations
              type: application/json
            self:
              href: /api/v2/destinations/my-project/my-environment/610addeadbeefaa86ec9a7d4
              type: application/json
          kind: google-pubsub
          name: name
          _id: 610addeadbeefaa86ec9a7d4
          version: 1
          config: '{"project":"test-prod","topic":"ld-pubsub-test-192301"}'
          "on": true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            self:
              href: /api/v2/destinations
              type: application/json
          type: object
        items:
          items:
            $ref: '#/components/schemas/Destination'
          type: array
      type: object
    Effect:
      type: string
    Environment:
      example:
        approvalSettings:
          serviceKind: launchdarkly
          canReviewOwnRequest: false
          serviceConfig: {}
          requiredApprovalTags:
          - require-approval
          bypassApprovalsForPendingChanges: false
          canApplyDeclinedChanges: true
          minNumApprovals: 1
          required: true
        apiKey: XYZ
        color: F5A623
        _links:
          self:
            href: /api/v2/projects/my-project/environments/my-environment
            type: application/json
        confirmChanges: true
        requireComments: true
        mobileKey: XYZ
        defaultTrackEvents: false
        tags:
        - ops
        name: My Environment
        defaultTtl: 5
        _id: 57be1db38b75bf0772d11384
        secureMode: true
        key: my-environment
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: Links to related resources.
          example:
            self:
              href: /api/v2/projects/my-project/environments/my-environment
              type: application/json
          type: object
        _id:
          example: 57be1db38b75bf0772d11384
          type: string
        key:
          description: A project-unique key for the new environment.
          example: my-environment
          type: string
        name:
          description: A human-friendly name for the new environment.
          example: My Environment
          type: string
        apiKey:
          description: API key to use with client-side SDKs.
          example: XYZ
          type: string
        mobileKey:
          description: API key to use with mobile SDKs.
          example: XYZ
          type: string
        color:
          description: The color used to indicate this environment in the UI.
          example: F5A623
          type: string
        defaultTtl:
          description: The default time (in minutes) that the PHP SDK can cache feature
            flag rules locally.
          example: 5
          type: integer
        secureMode:
          description: Secure mode ensures that a user of the client-side SDK cannot
            impersonate another user.
          example: true
          type: boolean
        defaultTrackEvents:
          description: Enables tracking detailed information for new flags by default.
          example: false
          type: boolean
        requireComments:
          type: boolean
        confirmChanges:
          type: boolean
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        approvalSettings:
          $ref: '#/components/schemas/ApprovalSettings'
      required:
      - _id
      - _links
      - apiKey
      - color
      - confirmChanges
      - defaultTrackEvents
      - defaultTtl
      - key
      - mobileKey
      - name
      - requireComments
      - secureMode
      - tags
      type: object
    EnvironmentPost:
      example:
        color: F5A623
        confirmChanges: false
        name: My Environment
        defaultTtl: 5
        requireComments: false
        secureMode: true
        defaultTrackEvents: false
        key: my-environment
        tags:
        - ops
      properties:
        name:
          description: A human-friendly name for the new environment.
          example: My Environment
          type: string
        key:
          description: A project-unique key for the new environment.
          example: my-environment
          type: string
        color:
          description: A color to indicate this environment in the UI.
          example: F5A623
          type: string
        defaultTtl:
          description: The default time (in minutes) that the PHP SDK can cache feature
            flag rules locally.
          example: 5
          type: integer
        secureMode:
          description: Secure mode ensures that a user of the client-side SDK cannot
            impersonate another user.
          example: true
          type: boolean
        defaultTrackEvents:
          description: Enables tracking detailed information for new flags by default.
          example: false
          type: boolean
        confirmChanges:
          description: Require confirmation for all flag and segment changes via the
            UI in this environment.
          example: false
          type: boolean
        requireComments:
          description: Require comments for all flag and segment changes via the UI
            in this environment.
          example: false
          type: boolean
        tags:
          description: Tags to apply to the new environment.
          example:
          - ops
          items:
            type: string
          type: array
      required:
      - color
      - key
      - name
      type: object
    ExecutionOutputRep:
      example:
        status: status
      properties:
        status:
          type: string
      required:
      - status
      type: object
    ExperimentAllocationRep:
      properties:
        defaultVariation:
          type: integer
        canReshuffle:
          type: boolean
      required:
      - canReshuffle
      - defaultVariation
      type: object
    ExperimentEnabledPeriodRep:
      example:
        startDate: 7
        stopDate: 9
      properties:
        startDate:
          format: int64
          type: integer
        stopDate:
          format: int64
          type: integer
      type: object
    ExperimentEnvironmentSettingRep:
      example:
        startDate: 5
        stopDate: 2
        enabledPeriods:
        - startDate: 7
          stopDate: 9
        - startDate: 7
          stopDate: 9
      properties:
        startDate:
          format: int64
          type: integer
        stopDate:
          format: int64
          type: integer
        enabledPeriods:
          items:
            $ref: '#/components/schemas/ExperimentEnabledPeriodRep'
          type: array
      type: object
    ExperimentInfoRep:
      example:
        baselineIdx: 6
        items:
        - metricKey: my-metric
          environments:
          - production
          - test
          - my-environment
          _environmentSettings:
            key:
              startDate: 5
              stopDate: 2
              enabledPeriods:
              - startDate: 7
                stopDate: 9
              - startDate: 7
                stopDate: 9
          _metric:
            _maintainer:
              firstName: An
              lastName: Example
              role: owner
              _links:
                self:
                  href: /api/v2/members/569f183514f4432160000007
                  type: application/json
              _id: 569f183514f4432160000007
              email: a.example@example.com
            _links:
              parent:
                href: /api/v2/metrics/my-project
                type: application/json
              self:
                href: /api/v2/metrics/my-project/my-metric
                type: application/json
            kind: pageview
            _attachedFlagCount: 0
            description: description
            _creationDate: 1
            tags: []
            maintainerId: 569fdeadbeef1644facecafe
            unit: unit
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - {}
                  - {}
                  actions:
                  - null
                  - null
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - {}
                  - {}
                  actions:
                  - null
                  - null
                action: action
            successCriteria: 5
            _site:
              href: href
              type: type
            isNumeric: true
            eventKey: eventKey
            name: my-metric
            _id: 5902deadbeef667524a01290
            lastModified:
              date: 2021-08-05T19:46:31.148082Z
            key: my-metric
        - metricKey: my-metric
          environments:
          - production
          - test
          - my-environment
          _environmentSettings:
            key:
              startDate: 5
              stopDate: 2
              enabledPeriods:
              - startDate: 7
                stopDate: 9
              - startDate: 7
                stopDate: 9
          _metric:
            _maintainer:
              firstName: An
              lastName: Example
              role: owner
              _links:
                self:
                  href: /api/v2/members/569f183514f4432160000007
                  type: application/json
              _id: 569f183514f4432160000007
              email: a.example@example.com
            _links:
              parent:
                href: /api/v2/metrics/my-project
                type: application/json
              self:
                href: /api/v2/metrics/my-project/my-metric
                type: application/json
            kind: pageview
            _attachedFlagCount: 0
            description: description
            _creationDate: 1
            tags: []
            maintainerId: 569fdeadbeef1644facecafe
            unit: unit
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - {}
                  - {}
                  actions:
                  - null
                  - null
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - null
                  - null
                  notResources:
                  - {}
                  - {}
                  effect: effect
                  resources:
                  - {}
                  - {}
                  actions:
                  - null
                  - null
                action: action
            successCriteria: 5
            _site:
              href: href
              type: type
            isNumeric: true
            eventKey: eventKey
            name: my-metric
            _id: 5902deadbeef667524a01290
            lastModified:
              date: 2021-08-05T19:46:31.148082Z
            key: my-metric
      properties:
        baselineIdx:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/ExperimentRep'
          type: array
      required:
      - baselineIdx
      - items
      type: object
    ExperimentMetadataRep:
      example:
        key: ""
      properties:
        key: {}
      type: object
    ExperimentRep:
      example:
        metricKey: my-metric
        environments:
        - production
        - test
        - my-environment
        _environmentSettings:
          key:
            startDate: 5
            stopDate: 2
            enabledPeriods:
            - startDate: 7
              stopDate: 9
            - startDate: 7
              stopDate: 9
        _metric:
          _maintainer:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          _links:
            parent:
              href: /api/v2/metrics/my-project
              type: application/json
            self:
              href: /api/v2/metrics/my-project/my-metric
              type: application/json
          kind: pageview
          _attachedFlagCount: 0
          description: description
          _creationDate: 1
          tags: []
          maintainerId: 569fdeadbeef1644facecafe
          unit: unit
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          successCriteria: 5
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          name: my-metric
          _id: 5902deadbeef667524a01290
          lastModified:
            date: 2021-08-05T19:46:31.148082Z
          key: my-metric
      properties:
        metricKey:
          example: my-metric
          type: string
        _metric:
          $ref: '#/components/schemas/MetricListingRep'
        environments:
          example:
          - production
          - test
          - my-environment
          items:
            type: string
          type: array
        _environmentSettings:
          additionalProperties:
            $ref: '#/components/schemas/ExperimentEnvironmentSettingRep'
          type: object
      type: object
    ExperimentResultsRep:
      example:
        metricSeen:
          ever: true
          minutesAgo: 5
        metadata:
        - key: ""
        - key: ""
        _links:
          key:
            href: href
            type: type
        stats:
          chi2: 1.1730742509559433
          winningVariationIdx: 4
          pValue: 7.457744773683766
          minSampleSizeMet: true
        series:
        - Time: 2
          VariationData:
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
        - Time: 2
          VariationData:
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
        granularity: granularity
        totals:
        - cumulativeConversionRate: 5.962133916683182
          cumulativeCount: 6
          minSampleSize: 3
          cumulativeImpressionCount: 1
          pValue: 7.061401241503109
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          improvement: 9.301444243932576
          cumulativeValue: 0.8008281904610115
        - cumulativeConversionRate: 5.962133916683182
          cumulativeCount: 6
          minSampleSize: 3
          cumulativeImpressionCount: 1
          pValue: 7.061401241503109
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          improvement: 9.301444243932576
          cumulativeValue: 0.8008281904610115
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        metadata:
          items:
            $ref: '#/components/schemas/ExperimentMetadataRep'
          type: array
        totals:
          items:
            $ref: '#/components/schemas/ExperimentTotalsRep'
          type: array
        series:
          items:
            $ref: '#/components/schemas/ExperimentTimeSeriesSlice'
          type: array
        stats:
          $ref: '#/components/schemas/ExperimentStatsRep'
        granularity:
          type: string
        metricSeen:
          $ref: '#/components/schemas/MetricSeen'
      type: object
    ExperimentStatsRep:
      example:
        chi2: 1.1730742509559433
        winningVariationIdx: 4
        pValue: 7.457744773683766
        minSampleSizeMet: true
      properties:
        pValue:
          type: number
        chi2:
          type: number
        winningVariationIdx:
          type: integer
        minSampleSizeMet:
          type: boolean
      type: object
    ExperimentTimeSeriesSlice:
      example:
        Time: 2
        VariationData:
        - cumulativeConversionRate: 6.84685269835264
          confidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          cumulativeCount: 1
          count: 7
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          value: 4.145608029883936
          conversionRate: 1.4894159098541704
          cumulativeValue: 1.2315135367772556
        - cumulativeConversionRate: 6.84685269835264
          confidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          cumulativeCount: 1
          count: 7
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          value: 4.145608029883936
          conversionRate: 1.4894159098541704
          cumulativeValue: 1.2315135367772556
      properties:
        Time:
          format: int64
          type: integer
        VariationData:
          items:
            $ref: '#/components/schemas/ExperimentTimeSeriesVariationSlice'
          type: array
      type: object
    ExperimentTimeSeriesVariationSlice:
      example:
        cumulativeConversionRate: 6.84685269835264
        confidenceInterval:
          upper: 5.637376656633329
          lower: 2.3021358869347655
        cumulativeCount: 1
        count: 7
        cumulativeConfidenceInterval:
          upper: 5.637376656633329
          lower: 2.3021358869347655
        value: 4.145608029883936
        conversionRate: 1.4894159098541704
        cumulativeValue: 1.2315135367772556
      properties:
        value:
          type: number
        count:
          format: int64
          type: integer
        cumulativeValue:
          type: number
        cumulativeCount:
          format: int64
          type: integer
        conversionRate:
          type: number
        cumulativeConversionRate:
          type: number
        confidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
        cumulativeConfidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
      type: object
    ExperimentTimeSeriesVariationSlices:
      items:
        $ref: '#/components/schemas/ExperimentTimeSeriesVariationSlice'
      type: array
    ExperimentTotalsRep:
      example:
        cumulativeConversionRate: 5.962133916683182
        cumulativeCount: 6
        minSampleSize: 3
        cumulativeImpressionCount: 1
        pValue: 7.061401241503109
        cumulativeConfidenceInterval:
          upper: 5.637376656633329
          lower: 2.3021358869347655
        improvement: 9.301444243932576
        cumulativeValue: 0.8008281904610115
      properties:
        cumulativeValue:
          type: number
        cumulativeCount:
          format: int64
          type: integer
        cumulativeImpressionCount:
          format: int64
          type: integer
        cumulativeConversionRate:
          type: number
        cumulativeConfidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
        pValue:
          type: number
        improvement:
          type: number
        minSampleSize:
          format: int64
          type: integer
      type: object
    ExpiringUserTargetError:
      example:
        instructionIndex: 5
        message: message
      properties:
        instructionIndex:
          type: integer
        message:
          type: string
      required:
      - instructionIndex
      - message
      type: object
    ExpiringUserTargetGetResponse:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
      properties:
        items:
          items:
            $ref: '#/components/schemas/ExpiringUserTargetItem'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - items
      type: object
    ExpiringUserTargetItem:
      example:
        _resourceId:
          projectKey: projectKey
          kind: kind
          flagKey: flagKey
          key: key
          environmentKey: environmentKey
        variationId: variationId
        targetType: targetType
        _id: _id
        _version: 0
        userKey: userKey
        expirationDate: 6
      properties:
        _id:
          type: string
        _version:
          type: integer
        expirationDate:
          format: int64
          type: integer
        userKey:
          description: A unique key used to represent the user
          type: string
        targetType:
          description: A segment's target type. Included when expiring user targets
            are updated on a user segment.
          type: string
        variationId:
          description: A unique key used to represent the flag variation. Included
            when expiring user targets are updated on a feature flag.
          type: string
        _resourceId:
          $ref: '#/components/schemas/ResourceIDResponse'
      required:
      - _id
      - _resourceId
      - _version
      - expirationDate
      - userKey
      type: object
    ExpiringUserTargetPatchResponse:
      example:
        failedInstructions: 1
        _links:
          key:
            href: href
            type: type
        successfulInstructions: 6
        items:
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
        totalInstructions: 0
        errors:
        - instructionIndex: 5
          message: message
        - instructionIndex: 5
          message: message
      properties:
        items:
          items:
            $ref: '#/components/schemas/ExpiringUserTargetItem'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        totalInstructions:
          type: integer
        successfulInstructions:
          type: integer
        failedInstructions:
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/ExpiringUserTargetError'
          type: array
      required:
      - items
      type: object
    ExtinctionCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
          key:
          - time: 0
            message: Remove flag for launched feature
            projKey: default
            flagKey: enable-feature
            revision: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          - time: 0
            message: Remove flag for launched feature
            projKey: default
            flagKey: enable-feature
            revision: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        items:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ExtinctionRep'
            type: array
          description: An array of extinction events
          type: object
      required:
      - _links
      - items
      type: object
    ExtinctionListPost:
      items:
        $ref: '#/components/schemas/ExtinctionRep'
      type: array
    ExtinctionRep:
      example:
        time: 0
        message: Remove flag for launched feature
        projKey: default
        flagKey: enable-feature
        revision: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
      properties:
        revision:
          description: The identifier for the revision where flag became extinct.
            For example, a commit SHA.
          example: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          type: string
        message:
          description: Description of the extinction. For example, the commit message
            for the revision.
          example: Remove flag for launched feature
          type: string
        time:
          format: int64
          type: integer
        flagKey:
          description: The feature flag key
          example: enable-feature
          type: string
        projKey:
          description: The project key
          example: default
          type: string
      required:
      - flagKey
      - message
      - projKey
      - revision
      - time
      type: object
    FeatureFlag:
      example:
        archivedDate: 3
        temporary: true
        _maintainer:
          firstName: An
          lastName: Example
          role: owner
          _links:
            self:
              href: /api/v2/members/569f183514f4432160000007
              type: application/json
          _id: 569f183514f4432160000007
          email: a.example@example.com
        clientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        _links:
          parent:
            href: /api/v2/flags/my-project
            type: application/json
          self:
            href: /api/v2/flags/my-project/my-flag
            type: application/json
        environments:
          my-environment:
            _environmentName: My Environment
            _site:
              href: /default/my-environment/features/client-side-flag
              type: text/html
            _summary:
              prerequisites: 0
              variations:
                "0":
                  isFallthrough: true
                  nullRules: 0
                  rules: 0
                  targets: 0
                "1":
                  isOff: true
                  nullRules: 0
                  rules: 0
                  targets: 0
            archived: false
            fallthrough:
              variation: 0
            lastModified: 1627071171347
            offVariation: 1
            "on": false
            prerequisites: []
            rules: []
            salt: 61eddeadbeef4da1facecafe3a60a397
            sel: 810edeadbeef4844facecafe438f2999492
            targets: []
            trackEvents: false
            trackEventsFallthrough: false
            version: 1
        kind: boolean
        experiments:
          baselineIdx: 6
          items:
          - metricKey: my-metric
            environments:
            - production
            - test
            - my-environment
            _environmentSettings:
              key:
                startDate: 5
                stopDate: 2
                enabledPeriods:
                - startDate: 7
                  stopDate: 9
                - startDate: 7
                  stopDate: 9
            _metric:
              _maintainer:
                firstName: An
                lastName: Example
                role: owner
                _links:
                  self:
                    href: /api/v2/members/569f183514f4432160000007
                    type: application/json
                _id: 569f183514f4432160000007
                email: a.example@example.com
              _links:
                parent:
                  href: /api/v2/metrics/my-project
                  type: application/json
                self:
                  href: /api/v2/metrics/my-project/my-metric
                  type: application/json
              kind: pageview
              _attachedFlagCount: 0
              description: description
              _creationDate: 1
              tags: []
              maintainerId: 569fdeadbeef1644facecafe
              unit: unit
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - {}
                    - {}
                    actions:
                    - null
                    - null
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - {}
                    - {}
                    actions:
                    - null
                    - null
                  action: action
              successCriteria: 5
              _site:
                href: href
                type: type
              isNumeric: true
              eventKey: eventKey
              name: my-metric
              _id: 5902deadbeef667524a01290
              lastModified:
                date: 2021-08-05T19:46:31.148082Z
              key: my-metric
          - metricKey: my-metric
            environments:
            - production
            - test
            - my-environment
            _environmentSettings:
              key:
                startDate: 5
                stopDate: 2
                enabledPeriods:
                - startDate: 7
                  stopDate: 9
                - startDate: 7
                  stopDate: 9
            _metric:
              _maintainer:
                firstName: An
                lastName: Example
                role: owner
                _links:
                  self:
                    href: /api/v2/members/569f183514f4432160000007
                    type: application/json
                _id: 569f183514f4432160000007
                email: a.example@example.com
              _links:
                parent:
                  href: /api/v2/metrics/my-project
                  type: application/json
                self:
                  href: /api/v2/metrics/my-project/my-metric
                  type: application/json
              kind: pageview
              _attachedFlagCount: 0
              description: description
              _creationDate: 1
              tags: []
              maintainerId: 569fdeadbeef1644facecafe
              unit: unit
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - {}
                    - {}
                    actions:
                    - null
                    - null
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - null
                    - null
                    notResources:
                    - {}
                    - {}
                    effect: effect
                    resources:
                    - {}
                    - {}
                    actions:
                    - null
                    - null
                  action: action
              successCriteria: 5
              _site:
                href: href
                type: type
              isNumeric: true
              eventKey: eventKey
              name: my-metric
              _id: 5902deadbeef667524a01290
              lastModified:
                date: 2021-08-05T19:46:31.148082Z
              key: my-metric
        description: description
        creationDate: 0
        tags: []
        goalIds: []
        archived: false
        includeInSnippet: true
        maintainerId: 569f183514f4432160000007
        customProperties:
          key:
            name: name
            value:
            - value
            - value
        defaults:
          onVariation: 2
          offVariation: 4
        variations:
        - _id: e432f62b-55f6-49dd-a02f-eb24acf39d05
          value: true
        - _id: a00bf58d-d252-476c-b915-15a74becacb4
          value: false
        name: My Flag
        _version: 1
        key: my-flag
        variationJsonSchema: ""
      properties:
        name:
          description: A human-friendly name for the feature flag
          example: My Flag
          type: string
        kind:
          description: Kind of feature flag
          enum:
          - boolean
          - multivariate
          example: boolean
          type: string
        description:
          description: Description of the feature flag
          type: string
        key:
          description: A unique key used to reference the flag in your code
          example: my-flag
          type: string
        _version:
          description: Version of the feature flag
          example: 1
          type: integer
        creationDate:
          format: int64
          type: integer
        includeInSnippet:
          description: Deprecated, use clientSideAvailability. Whether or not this
            flag should be made available to the client-side JavaScript SDK
          example: true
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        variations:
          description: An array of possible variations for the flag
          example:
          - _id: e432f62b-55f6-49dd-a02f-eb24acf39d05
            value: true
          - _id: a00bf58d-d252-476c-b915-15a74becacb4
            value: false
          items:
            $ref: '#/components/schemas/Variation'
          type: array
        variationJsonSchema: {}
        temporary:
          description: Whether or not the flag is a temporary flag
          type: boolean
        tags:
          description: Tags for the feature flag
          example: []
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/flags/my-project
              type: application/json
            self:
              href: /api/v2/flags/my-project/my-flag
              type: application/json
          type: object
        maintainerId:
          description: Associated maintainerId for the feature flag
          example: 569f183514f4432160000007
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        goalIds:
          example: []
          items:
            type: string
          type: array
        experiments:
          $ref: '#/components/schemas/ExperimentInfoRep'
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        archived:
          description: Boolean indicating if the feature flag is archived
          example: false
          type: boolean
        archivedDate:
          format: int64
          type: integer
        defaults:
          $ref: '#/components/schemas/Defaults'
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FeatureFlagConfig'
          example:
            my-environment:
              _environmentName: My Environment
              _site:
                href: /default/my-environment/features/client-side-flag
                type: text/html
              _summary:
                prerequisites: 0
                variations:
                  "0":
                    isFallthrough: true
                    nullRules: 0
                    rules: 0
                    targets: 0
                  "1":
                    isOff: true
                    nullRules: 0
                    rules: 0
                    targets: 0
              archived: false
              fallthrough:
                variation: 0
              lastModified: 1627071171347
              offVariation: 1
              "on": false
              prerequisites: []
              rules: []
              salt: 61eddeadbeef4da1facecafe3a60a397
              sel: 810edeadbeef4844facecafe438f2999492
              targets: []
              trackEvents: false
              trackEventsFallthrough: false
              version: 1
          type: object
      required:
      - _links
      - _version
      - archived
      - creationDate
      - customProperties
      - environments
      - experiments
      - key
      - kind
      - name
      - tags
      - temporary
      - variations
      type: object
    FeatureFlagBody:
      example:
        temporary: true
        includeInSnippet: true
        customProperties:
          key:
            name: name
            value:
            - value
            - value
        clientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        defaults:
          onVariation: 2
          offVariation: 4
        variations:
        - name: name
          description: description
          _id: _id
          value: ""
        - name: name
          description: description
          _id: _id
          value: ""
        name: name
        description: description
        key: key
        variationJsonSchema: ""
        tags:
        - tags
        - tags
      properties:
        name:
          description: A human-friendly name for the feature flag
          type: string
        key:
          description: A unique key to reference the flag in your code
          type: string
        description:
          description: Description of the feature flag
          type: string
        includeInSnippet:
          description: Deprecated, use clientSideAvailability. Whether or not this
            flag should be made available to the client-side JavaScript SDK
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailabilityPost'
        variations:
          description: An array of possible variations for the flag
          items:
            $ref: '#/components/schemas/Variation'
          type: array
        variationJsonSchema: {}
        temporary:
          description: Whether or not the flag is a temporary flag
          type: boolean
        tags:
          description: Tags for the feature flag
          items:
            type: string
          type: array
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        defaults:
          $ref: '#/components/schemas/Defaults'
      required:
      - key
      - name
      type: object
    FeatureFlagConfig:
      properties:
        "on":
          type: boolean
        archived:
          type: boolean
        salt:
          type: string
        sel:
          type: string
        lastModified:
          format: int64
          type: integer
        version:
          type: integer
        targets:
          items:
            $ref: '#/components/schemas/Target'
          type: array
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        fallthrough:
          $ref: '#/components/schemas/VariationOrRolloutRep'
        offVariation:
          type: integer
        prerequisites:
          items:
            $ref: '#/components/schemas/Prerequisite'
          type: array
        _site:
          $ref: '#/components/schemas/Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        _environmentName:
          type: string
        trackEvents:
          type: boolean
        trackEventsFallthrough:
          type: boolean
        _debugEventsUntilDate:
          format: int64
          type: integer
        _summary:
          $ref: '#/components/schemas/FlagSummary'
      required:
      - _environmentName
      - _site
      - archived
      - fallthrough
      - lastModified
      - "on"
      - prerequisites
      - rules
      - salt
      - sel
      - targets
      - trackEvents
      - trackEventsFallthrough
      - version
      type: object
    FeatureFlagScheduledChange:
      example:
        instructions:
        - null
        - null
        _maintainerId: _maintainerId
        _links:
          key:
            href: href
            type: type
        executionDate: 1
        conflicts: ""
        _id: _id
        _creationDate: 0
        _version: 6
      properties:
        _id:
          type: string
        _creationDate:
          format: int64
          type: integer
        _maintainerId:
          type: string
        _version:
          type: integer
        executionDate:
          format: int64
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/Instruction'
          type: array
        conflicts: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - _creationDate
      - _id
      - _maintainerId
      - _version
      - executionDate
      - instructions
      type: object
    FeatureFlagScheduledChanges:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - instructions:
          - null
          - null
          _maintainerId: _maintainerId
          _links:
            key:
              href: href
              type: type
          executionDate: 1
          conflicts: ""
          _id: _id
          _creationDate: 0
          _version: 6
        - instructions:
          - null
          - null
          _maintainerId: _maintainerId
          _links:
            key:
              href: href
              type: type
          executionDate: 1
          conflicts: ""
          _id: _id
          _creationDate: 0
          _version: 6
      properties:
        items:
          items:
            $ref: '#/components/schemas/FeatureFlagScheduledChange'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - items
      type: object
    FeatureFlagStatus:
      properties:
        name:
          description: Status of the flag
          example: inactive
          type: string
        lastRequested:
          description: Timestamp of last time flag was requested
          example: 2020-02-05T18:17:01.514Z
          format: date-time
          type: string
        default:
          description: Default value seen from code
      required:
      - name
      type: object
    FeatureFlagStatusAcrossEnvironments:
      example:
        environments:
          production:
            lastRequested: 2020-02-05T18:17:01.514Z
            name: inactive
        _links:
          parent:
            href: /api/v2/flag-status
            type: application/json
          self:
            href: /api/v2/flag-status/my-project/my-flag
            type: application/json
        key: my-flag
      properties:
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FeatureFlagStatus'
          description: Flag status for environment.
          example:
            production:
              lastRequested: 2020-02-05T18:17:01.514Z
              name: inactive
          type: object
        key:
          description: feature flag key
          example: my-flag
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/flag-status
              type: application/json
            self:
              href: /api/v2/flag-status/my-project/my-flag
              type: application/json
          type: object
      type: object
    FeatureFlagStatuses:
      example:
        _links:
          self:
            href: /api/v2/flag-statuses/my-project/my-environment
            type: application/json
        items:
        - lastRequested: 2020-02-05T18:17:01.514Z
          default: ""
          _links:
            parent:
              href: /api/v2/flags/my-project/my-flag
              type: application/json
            self:
              href: /api/v2/flag-statuses/my-project/my-flag
              type: application/json
          name: inactive
        - lastRequested: 2020-02-05T18:17:01.514Z
          default: ""
          _links:
            parent:
              href: /api/v2/flags/my-project/my-flag
              type: application/json
            self:
              href: /api/v2/flag-statuses/my-project/my-flag
              type: application/json
          name: inactive
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            self:
              href: /api/v2/flag-statuses/my-project/my-environment
              type: application/json
          type: object
        items:
          items:
            $ref: '#/components/schemas/FlagStatusRep'
          type: array
      required:
      - _links
      type: object
    FeatureFlags:
      example:
        _links:
          self:
            href: /api/v2/flags/default
            type: application/json
        totalCount: 1
        items:
        - archivedDate: 3
          temporary: true
          _maintainer:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            parent:
              href: /api/v2/flags/my-project
              type: application/json
            self:
              href: /api/v2/flags/my-project/my-flag
              type: application/json
          environments:
            my-environment:
              _environmentName: My Environment
              _site:
                href: /default/my-environment/features/client-side-flag
                type: text/html
              _summary:
                prerequisites: 0
                variations:
                  "0":
                    isFallthrough: true
                    nullRules: 0
                    rules: 0
                    targets: 0
                  "1":
                    isOff: true
                    nullRules: 0
                    rules: 0
                    targets: 0
              archived: false
              fallthrough:
                variation: 0
              lastModified: 1627071171347
              offVariation: 1
              "on": false
              prerequisites: []
              rules: []
              salt: 61eddeadbeef4da1facecafe3a60a397
              sel: 810edeadbeef4844facecafe438f2999492
              targets: []
              trackEvents: false
              trackEventsFallthrough: false
              version: 1
          kind: boolean
          experiments:
            baselineIdx: 6
            items:
            - metricKey: my-metric
              environments:
              - production
              - test
              - my-environment
              _environmentSettings:
                key:
                  startDate: 5
                  stopDate: 2
                  enabledPeriods:
                  - startDate: 7
                    stopDate: 9
                  - startDate: 7
                    stopDate: 9
              _metric:
                _maintainer:
                  firstName: An
                  lastName: Example
                  role: owner
                  _links:
                    self:
                      href: /api/v2/members/569f183514f4432160000007
                      type: application/json
                  _id: 569f183514f4432160000007
                  email: a.example@example.com
                _links:
                  parent:
                    href: /api/v2/metrics/my-project
                    type: application/json
                  self:
                    href: /api/v2/metrics/my-project/my-metric
                    type: application/json
                kind: pageview
                _attachedFlagCount: 0
                description: description
                _creationDate: 1
                tags: []
                maintainerId: 569fdeadbeef1644facecafe
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                successCriteria: 5
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: my-metric
                _id: 5902deadbeef667524a01290
                lastModified:
                  date: 2021-08-05T19:46:31.148082Z
                key: my-metric
            - metricKey: my-metric
              environments:
              - production
              - test
              - my-environment
              _environmentSettings:
                key:
                  startDate: 5
                  stopDate: 2
                  enabledPeriods:
                  - startDate: 7
                    stopDate: 9
                  - startDate: 7
                    stopDate: 9
              _metric:
                _maintainer:
                  firstName: An
                  lastName: Example
                  role: owner
                  _links:
                    self:
                      href: /api/v2/members/569f183514f4432160000007
                      type: application/json
                  _id: 569f183514f4432160000007
                  email: a.example@example.com
                _links:
                  parent:
                    href: /api/v2/metrics/my-project
                    type: application/json
                  self:
                    href: /api/v2/metrics/my-project/my-metric
                    type: application/json
                kind: pageview
                _attachedFlagCount: 0
                description: description
                _creationDate: 1
                tags: []
                maintainerId: 569fdeadbeef1644facecafe
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                successCriteria: 5
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: my-metric
                _id: 5902deadbeef667524a01290
                lastModified:
                  date: 2021-08-05T19:46:31.148082Z
                key: my-metric
          description: description
          creationDate: 0
          tags: []
          goalIds: []
          archived: false
          includeInSnippet: true
          maintainerId: 569f183514f4432160000007
          customProperties:
            key:
              name: name
              value:
              - value
              - value
          defaults:
            onVariation: 2
            offVariation: 4
          variations:
          - _id: e432f62b-55f6-49dd-a02f-eb24acf39d05
            value: true
          - _id: a00bf58d-d252-476c-b915-15a74becacb4
            value: false
          name: My Flag
          _version: 1
          key: my-flag
          variationJsonSchema: ""
        - archivedDate: 3
          temporary: true
          _maintainer:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            parent:
              href: /api/v2/flags/my-project
              type: application/json
            self:
              href: /api/v2/flags/my-project/my-flag
              type: application/json
          environments:
            my-environment:
              _environmentName: My Environment
              _site:
                href: /default/my-environment/features/client-side-flag
                type: text/html
              _summary:
                prerequisites: 0
                variations:
                  "0":
                    isFallthrough: true
                    nullRules: 0
                    rules: 0
                    targets: 0
                  "1":
                    isOff: true
                    nullRules: 0
                    rules: 0
                    targets: 0
              archived: false
              fallthrough:
                variation: 0
              lastModified: 1627071171347
              offVariation: 1
              "on": false
              prerequisites: []
              rules: []
              salt: 61eddeadbeef4da1facecafe3a60a397
              sel: 810edeadbeef4844facecafe438f2999492
              targets: []
              trackEvents: false
              trackEventsFallthrough: false
              version: 1
          kind: boolean
          experiments:
            baselineIdx: 6
            items:
            - metricKey: my-metric
              environments:
              - production
              - test
              - my-environment
              _environmentSettings:
                key:
                  startDate: 5
                  stopDate: 2
                  enabledPeriods:
                  - startDate: 7
                    stopDate: 9
                  - startDate: 7
                    stopDate: 9
              _metric:
                _maintainer:
                  firstName: An
                  lastName: Example
                  role: owner
                  _links:
                    self:
                      href: /api/v2/members/569f183514f4432160000007
                      type: application/json
                  _id: 569f183514f4432160000007
                  email: a.example@example.com
                _links:
                  parent:
                    href: /api/v2/metrics/my-project
                    type: application/json
                  self:
                    href: /api/v2/metrics/my-project/my-metric
                    type: application/json
                kind: pageview
                _attachedFlagCount: 0
                description: description
                _creationDate: 1
                tags: []
                maintainerId: 569fdeadbeef1644facecafe
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                successCriteria: 5
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: my-metric
                _id: 5902deadbeef667524a01290
                lastModified:
                  date: 2021-08-05T19:46:31.148082Z
                key: my-metric
            - metricKey: my-metric
              environments:
              - production
              - test
              - my-environment
              _environmentSettings:
                key:
                  startDate: 5
                  stopDate: 2
                  enabledPeriods:
                  - startDate: 7
                    stopDate: 9
                  - startDate: 7
                    stopDate: 9
              _metric:
                _maintainer:
                  firstName: An
                  lastName: Example
                  role: owner
                  _links:
                    self:
                      href: /api/v2/members/569f183514f4432160000007
                      type: application/json
                  _id: 569f183514f4432160000007
                  email: a.example@example.com
                _links:
                  parent:
                    href: /api/v2/metrics/my-project
                    type: application/json
                  self:
                    href: /api/v2/metrics/my-project/my-metric
                    type: application/json
                kind: pageview
                _attachedFlagCount: 0
                description: description
                _creationDate: 1
                tags: []
                maintainerId: 569fdeadbeef1644facecafe
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - null
                      - null
                      notResources:
                      - {}
                      - {}
                      effect: effect
                      resources:
                      - {}
                      - {}
                      actions:
                      - null
                      - null
                    action: action
                successCriteria: 5
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: my-metric
                _id: 5902deadbeef667524a01290
                lastModified:
                  date: 2021-08-05T19:46:31.148082Z
                key: my-metric
          description: description
          creationDate: 0
          tags: []
          goalIds: []
          archived: false
          includeInSnippet: true
          maintainerId: 569f183514f4432160000007
          customProperties:
            key:
              name: name
              value:
              - value
              - value
          defaults:
            onVariation: 2
            offVariation: 4
          variations:
          - _id: e432f62b-55f6-49dd-a02f-eb24acf39d05
            value: true
          - _id: a00bf58d-d252-476c-b915-15a74becacb4
            value: false
          name: My Flag
          _version: 1
          key: my-flag
          variationJsonSchema: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/FeatureFlag'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            self:
              href: /api/v2/flags/default
              type: application/json
          type: object
        totalCount:
          example: 1
          type: integer
      required:
      - _links
      - items
      type: object
    FeatureWorkflowId:
      type: string
    FlagConfigApprovalRequestResponse:
      example:
        allReviews:
        - kind: approve
          comment: comment
          _id: _id
          creationDate: 1
          memberId: memberId
        - kind: approve
          comment: comment
          _id: _id
          creationDate: 1
          memberId: memberId
        instructions:
        - null
        - null
        serviceKind: serviceKind
        notifyMemberIds:
        - notifyMemberIds
        - notifyMemberIds
        _links:
          key:
            href: href
            type: type
        executionDate: 5
        description: description
        appliedDate: 5
        source:
          version: 2
          key: key
        creationDate: 6
        requestorId: requestorId
        customWorkflowMetadata:
          stage:
            name: name
            index: 7
          name: name
        integrationMetadata:
          externalUrl: externalUrl
          externalId: externalId
          externalStatus:
            display: display
            value: value
          lastChecked: 6
        conflicts:
        - reason: reason
          instruction:
            key: ""
        - reason: reason
          instruction:
            key: ""
        reviewStatus: reviewStatus
        appliedByMemberId: appliedByMemberId
        operatingOnId: operatingOnId
        _id: _id
        _version: 0
        status: status
      properties:
        _id:
          type: string
        _version:
          type: integer
        creationDate:
          format: int64
          type: integer
        serviceKind:
          type: string
        requestorId:
          type: string
        description:
          description: A human-friendly name for the approval request
          type: string
        reviewStatus:
          type: string
        allReviews:
          items:
            $ref: '#/components/schemas/ReviewResponse'
          type: array
        notifyMemberIds:
          description: An array of member IDs. These members are notified to review
            the approval request.
          items:
            type: string
          type: array
        appliedDate:
          format: int64
          type: integer
        appliedByMemberId:
          type: string
        status:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/Instruction'
          type: array
        conflicts:
          items:
            $ref: '#/components/schemas/Conflict'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        executionDate:
          format: int64
          type: integer
        operatingOnId:
          description: ID of scheduled change to edit or delete
          type: string
        integrationMetadata:
          $ref: '#/components/schemas/IntegrationMetadata'
        source:
          $ref: '#/components/schemas/CopiedFromEnv'
        customWorkflowMetadata:
          $ref: '#/components/schemas/CustomWorkflowMeta'
      required:
      - _id
      - _links
      - _version
      - allReviews
      - conflicts
      - creationDate
      - instructions
      - notifyMemberIds
      - reviewStatus
      - serviceKind
      - status
      type: object
    FlagConfigApprovalRequestsResponse:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - allReviews:
          - kind: approve
            comment: comment
            _id: _id
            creationDate: 1
            memberId: memberId
          - kind: approve
            comment: comment
            _id: _id
            creationDate: 1
            memberId: memberId
          instructions:
          - null
          - null
          serviceKind: serviceKind
          notifyMemberIds:
          - notifyMemberIds
          - notifyMemberIds
          _links:
            key:
              href: href
              type: type
          executionDate: 5
          description: description
          appliedDate: 5
          source:
            version: 2
            key: key
          creationDate: 6
          requestorId: requestorId
          customWorkflowMetadata:
            stage:
              name: name
              index: 7
            name: name
          integrationMetadata:
            externalUrl: externalUrl
            externalId: externalId
            externalStatus:
              display: display
              value: value
            lastChecked: 6
          conflicts:
          - reason: reason
            instruction:
              key: ""
          - reason: reason
            instruction:
              key: ""
          reviewStatus: reviewStatus
          appliedByMemberId: appliedByMemberId
          operatingOnId: operatingOnId
          _id: _id
          _version: 0
          status: status
        - allReviews:
          - kind: approve
            comment: comment
            _id: _id
            creationDate: 1
            memberId: memberId
          - kind: approve
            comment: comment
            _id: _id
            creationDate: 1
            memberId: memberId
          instructions:
          - null
          - null
          serviceKind: serviceKind
          notifyMemberIds:
          - notifyMemberIds
          - notifyMemberIds
          _links:
            key:
              href: href
              type: type
          executionDate: 5
          description: description
          appliedDate: 5
          source:
            version: 2
            key: key
          creationDate: 6
          requestorId: requestorId
          customWorkflowMetadata:
            stage:
              name: name
              index: 7
            name: name
          integrationMetadata:
            externalUrl: externalUrl
            externalId: externalId
            externalStatus:
              display: display
              value: value
            lastChecked: 6
          conflicts:
          - reason: reason
            instruction:
              key: ""
          - reason: reason
            instruction:
              key: ""
          reviewStatus: reviewStatus
          appliedByMemberId: appliedByMemberId
          operatingOnId: operatingOnId
          _id: _id
          _version: 0
          status: status
      properties:
        items:
          description: An array of approval requests
          items:
            $ref: '#/components/schemas/FlagConfigApprovalRequestResponse'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - _links
      - items
      type: object
    FlagCopyConfigEnvironment:
      example:
        key: key
        currentVersion: 0
      properties:
        key:
          type: string
        currentVersion:
          type: integer
      required:
      - key
      type: object
    FlagCopyConfigPost:
      example:
        comment: comment
        source:
          key: key
          currentVersion: 0
        excludedActions:
        - updateOn
        - updateOn
        includedActions:
        - updateOn
        - updateOn
        target:
          key: key
          currentVersion: 0
      properties:
        source:
          $ref: '#/components/schemas/FlagCopyConfigEnvironment'
        target:
          $ref: '#/components/schemas/FlagCopyConfigEnvironment'
        comment:
          type: string
        includedActions:
          items:
            enum:
            - updateOn
            - updateRules
            - updateFallthrough
            - updateOffVariation
            - updatePrerequisites
            - updateTargets
            type: string
          type: array
        excludedActions:
          items:
            enum:
            - updateOn
            - updateRules
            - updateFallthrough
            - updateOffVariation
            - updatePrerequisites
            - updateTargets
            type: string
          type: array
      required:
      - source
      - target
      type: object
    FlagGlobalAttributesRep:
      properties:
        name:
          description: A human-friendly name for the feature flag
          example: My Flag
          type: string
        kind:
          description: Kind of feature flag
          enum:
          - boolean
          - multivariate
          example: boolean
          type: string
        description:
          description: Description of the feature flag
          type: string
        key:
          description: A unique key used to reference the flag in your code
          example: my-flag
          type: string
        _version:
          description: Version of the feature flag
          example: 1
          type: integer
        creationDate:
          format: int64
          type: integer
        includeInSnippet:
          description: Deprecated, use clientSideAvailability. Whether or not this
            flag should be made available to the client-side JavaScript SDK
          example: true
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        variations:
          description: An array of possible variations for the flag
          example:
          - _id: e432f62b-55f6-49dd-a02f-eb24acf39d05
            value: true
          - _id: a00bf58d-d252-476c-b915-15a74becacb4
            value: false
          items:
            $ref: '#/components/schemas/Variation'
          type: array
        variationJsonSchema: {}
        temporary:
          description: Whether or not the flag is a temporary flag
          type: boolean
        tags:
          description: Tags for the feature flag
          example: []
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/flags/my-project
              type: application/json
            self:
              href: /api/v2/flags/my-project/my-flag
              type: application/json
          type: object
        maintainerId:
          description: Associated maintainerId for the feature flag
          example: 569f183514f4432160000007
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        goalIds:
          example: []
          items:
            type: string
          type: array
        experiments:
          $ref: '#/components/schemas/ExperimentInfoRep'
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        archived:
          description: Boolean indicating if the feature flag is archived
          example: false
          type: boolean
        archivedDate:
          format: int64
          type: integer
        defaults:
          $ref: '#/components/schemas/Defaults'
      required:
      - _links
      - _version
      - archived
      - creationDate
      - customProperties
      - experiments
      - key
      - kind
      - name
      - tags
      - temporary
      - variations
      type: object
    FlagListingRep:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _site:
          $ref: '#/components/schemas/Link'
      required:
      - key
      - name
      type: object
    FlagScheduledChangesInput:
      example:
        instructions:
        - null
        - null
        comment: comment
      properties:
        comment:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/Instruction'
          type: array
      required:
      - instructions
      type: object
    FlagStatusRep:
      example:
        lastRequested: 2020-02-05T18:17:01.514Z
        default: ""
        _links:
          parent:
            href: /api/v2/flags/my-project/my-flag
            type: application/json
          self:
            href: /api/v2/flag-statuses/my-project/my-flag
            type: application/json
        name: inactive
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/flags/my-project/my-flag
              type: application/json
            self:
              href: /api/v2/flag-statuses/my-project/my-flag
              type: application/json
          type: object
        name:
          description: Status of the flag
          example: inactive
          type: string
        lastRequested:
          description: Timestamp of last time flag was requested
          example: 2020-02-05T18:17:01.514Z
          format: date-time
          type: string
        default:
          description: Default value seen from code
      required:
      - _links
      type: object
    FlagSummary:
      properties:
        prerequisites:
          type: integer
      required:
      - prerequisites
      type: object
    ForbiddenErrorRep:
      properties:
        code:
          example: forbidden
          type: string
        message:
          example: access to the requested resource was denied
          type: string
      type: object
    FormVariableConfig:
      additionalProperties: {}
      type: object
    HunkRep:
      example:
        aliases:
        - enableFeature
        - EnableFeature
        startingLineNumber: 45
        lines: var enableFeature = 'enable-feature';
        projKey: default
        flagKey: enable-feature
      properties:
        startingLineNumber:
          description: Line number of beginning of code reference hunk
          example: 45
          type: integer
        lines:
          description: Contextual lines of code that include the referenced feature
            flag
          example: var enableFeature = 'enable-feature';
          type: string
        projKey:
          description: The project key
          example: default
          type: string
        flagKey:
          description: The feature flag key
          example: enable-feature
          type: string
        aliases:
          description: An array of flag key aliases
          example:
          - enableFeature
          - EnableFeature
          items:
            type: string
          type: array
      required:
      - startingLineNumber
      type: object
    Instruction:
      additionalProperties: {}
      type: object
    Instructions:
      items:
        $ref: '#/components/schemas/Instruction'
      type: array
    IntegrationMetadata:
      example:
        externalUrl: externalUrl
        externalId: externalId
        externalStatus:
          display: display
          value: value
        lastChecked: 6
      properties:
        externalId:
          type: string
        externalStatus:
          $ref: '#/components/schemas/IntegrationStatus'
        externalUrl:
          type: string
        lastChecked:
          format: int64
          type: integer
      required:
      - externalId
      - externalStatus
      - externalUrl
      - lastChecked
      type: object
    IntegrationStatus:
      example:
        display: display
        value: value
      properties:
        display:
          type: string
        value:
          type: string
      required:
      - display
      - value
      type: object
    InvalidRequestErrorRep:
      properties:
        code:
          example: invalid_request
          type: string
        message:
          example: invalid request body
          type: string
      type: object
    JSONPatch:
      items:
        $ref: '#/components/schemas/PatchOperation'
      type: array
    LastSeenMetadata:
      example:
        tokenId: 5b52207f8ca8e631d31fdb2b
      properties:
        tokenId:
          description: The ID of the token used in the member's last session
          example: 5b52207f8ca8e631d31fdb2b
          type: string
      type: object
    Link:
      example:
        href: href
        type: type
      properties:
        href:
          type: string
        type:
          type: string
      type: object
    Member:
      example:
        lastName: Loblaw
        _verified: true
        permissionGrants:
        - resource: resource
          actionSet: actionSet
          actions:
          - actions
          - actions
        - resource: resource
          actionSet: actionSet
          actions:
          - actions
          - actions
        role: reader
        _pendingEmail: _pendingEmail
        teams:
        - name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          key: key
        - name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          key: key
        _links:
          key:
            href: href
            type: type
        mfa: mfa
        excludedDashboards:
        - excludedDashboards
        - excludedDashboards
        _lastSeenMetadata:
          tokenId: 5b52207f8ca8e631d31fdb2b
        creationDate: 1
        _integrationMetadata:
          externalUrl: externalUrl
          externalId: externalId
          externalStatus:
            display: display
            value: value
          lastChecked: 6
        firstName: Bob
        _pendingInvite: true
        _lastSeen: 0
        _id: 507f1f77bcf86cd799439011
        email: bob@loblaw.com
        customRoles:
        - devOps
        - backend-devs
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _id:
          description: The member's ID
          example: 507f1f77bcf86cd799439011
          type: string
        firstName:
          description: The member's first name
          example: Bob
          type: string
        lastName:
          description: The member's last name
          example: Loblaw
          type: string
        role:
          description: The member's built-in role. If the member has no custom roles,
            this role will be in effect.
          example: reader
          type: string
        email:
          description: The member's email address
          example: bob@loblaw.com
          type: string
        _pendingInvite:
          description: Whether or not the member has a pending invitation
          type: boolean
        _verified:
          description: Whether or not the member's email address has been verified
          type: boolean
        _pendingEmail:
          type: string
        customRoles:
          description: The set of custom roles (as keys) assigned to the member
          example:
          - devOps
          - backend-devs
          items:
            type: string
          type: array
        mfa:
          description: Whether or not multi-factor authentication is enabled for this
            member
          type: string
        excludedDashboards:
          description: Default dashboards that the member has chosen to ignore
          items:
            type: string
          type: array
        _lastSeen:
          format: int64
          type: integer
        _lastSeenMetadata:
          $ref: '#/components/schemas/LastSeenMetadata'
        _integrationMetadata:
          $ref: '#/components/schemas/IntegrationMetadata'
        teams:
          items:
            $ref: '#/components/schemas/MemberTeamSummaryRep'
          type: array
        permissionGrants:
          items:
            $ref: '#/components/schemas/MemberPermissionGrantSummaryRep'
          type: array
        creationDate:
          format: int64
          type: integer
      required:
      - _id
      - _lastSeen
      - _links
      - _pendingInvite
      - _verified
      - creationDate
      - customRoles
      - email
      - excludedDashboards
      - mfa
      - role
      type: object
    MemberDataRep:
      example:
        firstName: firstName
        lastName: lastName
        _links:
          key:
            href: href
            type: type
        _id: _id
        email: email
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      type: object
    MemberPermissionGrantSummaryRep:
      example:
        resource: resource
        actionSet: actionSet
        actions:
        - actions
        - actions
      properties:
        actionSet:
          type: string
        actions:
          items:
            type: string
          type: array
        resource:
          type: string
      required:
      - actionSet
      - actions
      - resource
      type: object
    MemberSummaryRep:
      example:
        firstName: An
        lastName: Example
        role: owner
        _links:
          self:
            href: /api/v2/members/569f183514f4432160000007
            type: application/json
        _id: 569f183514f4432160000007
        email: a.example@example.com
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            self:
              href: /api/v2/members/569f183514f4432160000007
              type: application/json
          type: object
        _id:
          example: 569f183514f4432160000007
          type: string
        firstName:
          example: An
          type: string
        lastName:
          example: Example
          type: string
        role:
          example: owner
          type: string
        email:
          example: a.example@example.com
          type: string
      required:
      - _id
      - _links
      - email
      - role
      type: object
    MemberTeamSummaryRep:
      example:
        name: name
        customRoleKeys:
        - customRoleKeys
        - customRoleKeys
        key: key
      properties:
        customRoleKeys:
          items:
            type: string
          type: array
        key:
          type: string
        name:
          type: string
      required:
      - customRoleKeys
      - key
      - name
      type: object
    Members:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 5
        items:
        - lastName: Loblaw
          _verified: true
          permissionGrants:
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
          role: reader
          _pendingEmail: _pendingEmail
          teams:
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          _links:
            key:
              href: href
              type: type
          mfa: mfa
          excludedDashboards:
          - excludedDashboards
          - excludedDashboards
          _lastSeenMetadata:
            tokenId: 5b52207f8ca8e631d31fdb2b
          creationDate: 1
          _integrationMetadata:
            externalUrl: externalUrl
            externalId: externalId
            externalStatus:
              display: display
              value: value
            lastChecked: 6
          firstName: Bob
          _pendingInvite: true
          _lastSeen: 0
          _id: 507f1f77bcf86cd799439011
          email: bob@loblaw.com
          customRoles:
          - devOps
          - backend-devs
        - lastName: Loblaw
          _verified: true
          permissionGrants:
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
          role: reader
          _pendingEmail: _pendingEmail
          teams:
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          _links:
            key:
              href: href
              type: type
          mfa: mfa
          excludedDashboards:
          - excludedDashboards
          - excludedDashboards
          _lastSeenMetadata:
            tokenId: 5b52207f8ca8e631d31fdb2b
          creationDate: 1
          _integrationMetadata:
            externalUrl: externalUrl
            externalId: externalId
            externalStatus:
              display: display
              value: value
            lastChecked: 6
          firstName: Bob
          _pendingInvite: true
          _lastSeen: 0
          _id: 507f1f77bcf86cd799439011
          email: bob@loblaw.com
          customRoles:
          - devOps
          - backend-devs
      properties:
        items:
          items:
            $ref: '#/components/schemas/Member'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        totalCount:
          type: integer
      required:
      - _links
      - items
      type: object
    MethodNotAllowedErrorRep:
      properties:
        code:
          example: method_not_allowed
          type: string
        message:
          example: method not allowed
          type: string
      type: object
    MetricCollectionRep:
      example:
        _links:
          self:
            href: /api/v2/metrics/my-project?limit=20
            type: application/json
        items:
        - _maintainer:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          _links:
            parent:
              href: /api/v2/metrics/my-project
              type: application/json
            self:
              href: /api/v2/metrics/my-project/my-metric
              type: application/json
          kind: pageview
          _attachedFlagCount: 0
          description: description
          _creationDate: 1
          tags: []
          maintainerId: 569fdeadbeef1644facecafe
          unit: unit
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          successCriteria: 5
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          name: my-metric
          _id: 5902deadbeef667524a01290
          lastModified:
            date: 2021-08-05T19:46:31.148082Z
          key: my-metric
        - _maintainer:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          _links:
            parent:
              href: /api/v2/metrics/my-project
              type: application/json
            self:
              href: /api/v2/metrics/my-project/my-metric
              type: application/json
          kind: pageview
          _attachedFlagCount: 0
          description: description
          _creationDate: 1
          tags: []
          maintainerId: 569fdeadbeef1644facecafe
          unit: unit
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          successCriteria: 5
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          name: my-metric
          _id: 5902deadbeef667524a01290
          lastModified:
            date: 2021-08-05T19:46:31.148082Z
          key: my-metric
      properties:
        items:
          items:
            $ref: '#/components/schemas/MetricListingRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            self:
              href: /api/v2/metrics/my-project?limit=20
              type: application/json
          type: object
      type: object
    MetricListingRep:
      example:
        _maintainer:
          firstName: An
          lastName: Example
          role: owner
          _links:
            self:
              href: /api/v2/members/569f183514f4432160000007
              type: application/json
          _id: 569f183514f4432160000007
          email: a.example@example.com
        _links:
          parent:
            href: /api/v2/metrics/my-project
            type: application/json
          self:
            href: /api/v2/metrics/my-project/my-metric
            type: application/json
        kind: pageview
        _attachedFlagCount: 0
        description: description
        _creationDate: 1
        tags: []
        maintainerId: 569fdeadbeef1644facecafe
        unit: unit
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        successCriteria: 5
        _site:
          href: href
          type: type
        isNumeric: true
        eventKey: eventKey
        name: my-metric
        _id: 5902deadbeef667524a01290
        lastModified:
          date: 2021-08-05T19:46:31.148082Z
        key: my-metric
      properties:
        _id:
          example: 5902deadbeef667524a01290
          type: string
        key:
          example: my-metric
          type: string
        name:
          example: my-metric
          type: string
        kind:
          enum:
          - pageview
          - click
          - custom
          type: string
        _attachedFlagCount:
          example: 0
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/metrics/my-project
              type: application/json
            self:
              href: /api/v2/metrics/my-project/my-metric
              type: application/json
          type: object
        _site:
          $ref: '#/components/schemas/Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        tags:
          example: []
          items:
            type: string
          type: array
        _creationDate:
          format: int64
          type: integer
        lastModified:
          $ref: '#/components/schemas/Modification'
        maintainerId:
          example: 569fdeadbeef1644facecafe
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        description:
          type: string
        isNumeric:
          type: boolean
        successCriteria:
          type: integer
        unit:
          type: string
        eventKey:
          type: string
      required:
      - _creationDate
      - _id
      - _links
      - key
      - kind
      - name
      - tags
      type: object
    MetricPost:
      example:
        urls:
        - kind: exact
          pattern: pattern
          url: url
          substring: substring
        - kind: exact
          pattern: pattern
          url: url
          substring: substring
        unit: unit
        successCriteria: 0
        kind: pageview
        isNumeric: true
        eventKey: eventKey
        name: name
        description: description
        selector: selector
        isActive: true
        key: key
        tags:
        - tags
        - tags
      properties:
        key:
          type: string
        name:
          type: string
        description:
          type: string
        kind:
          enum:
          - pageview
          - click
          - custom
          type: string
        selector:
          description: Required for click metrics
          type: string
        urls:
          description: Required for click and pageview metrics
          items:
            $ref: '#/components/schemas/UrlPost'
          type: array
        isActive:
          type: boolean
        isNumeric:
          type: boolean
        unit:
          type: string
        eventKey:
          description: Required for custom metrics
          type: string
        successCriteria:
          type: integer
        tags:
          items:
            type: string
          type: array
      required:
      - key
      - kind
      type: object
    MetricRep:
      example:
        _maintainer:
          firstName: An
          lastName: Example
          role: owner
          _links:
            self:
              href: /api/v2/members/569f183514f4432160000007
              type: application/json
          _id: 569f183514f4432160000007
          email: a.example@example.com
        _links:
          parent:
            href: /api/v2/metrics/my-project
            type: application/json
          self:
            href: /api/v2/metrics/my-project/my-metric
            type: application/json
        kind: pageview
        _attachedFlagCount: 0
        description: description
        _creationDate: 0
        isActive: true
        tags: []
        maintainerId: 569fdeadbeef1644facecafe
        unit: unit
        urls:
        - null
        - null
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        successCriteria: 6
        _site:
          href: href
          type: type
        isNumeric: true
        eventKey: eventKey
        _attachedFeatures:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        name: my-metric
        selector: selector
        _id: 5902deadbeef667524a01290
        lastModified:
          date: 2021-08-05T19:46:31.148082Z
        _version: 1
        key: my-metric
      properties:
        _id:
          example: 5902deadbeef667524a01290
          type: string
        key:
          example: my-metric
          type: string
        name:
          example: my-metric
          type: string
        kind:
          enum:
          - pageview
          - click
          - custom
          type: string
        _attachedFlagCount:
          example: 0
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/metrics/my-project
              type: application/json
            self:
              href: /api/v2/metrics/my-project/my-metric
              type: application/json
          type: object
        _site:
          $ref: '#/components/schemas/Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        tags:
          example: []
          items:
            type: string
          type: array
        _creationDate:
          format: int64
          type: integer
        lastModified:
          $ref: '#/components/schemas/Modification'
        maintainerId:
          example: 569fdeadbeef1644facecafe
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        description:
          type: string
        isNumeric:
          type: boolean
        successCriteria:
          type: integer
        unit:
          type: string
        eventKey:
          type: string
        isActive:
          type: boolean
        _attachedFeatures:
          items:
            $ref: '#/components/schemas/FlagListingRep'
          type: array
        _version:
          type: integer
        selector:
          type: string
        urls:
          items:
            $ref: '#/components/schemas/UrlMatcher'
          type: array
      required:
      - _creationDate
      - _id
      - _links
      - key
      - kind
      - name
      - tags
      type: object
    MetricSeen:
      example:
        ever: true
        minutesAgo: 5
      properties:
        ever:
          type: boolean
        minutesAgo:
          format: int64
          type: integer
      type: object
    Modification:
      example:
        date: 2021-08-05T19:46:31.148082Z
      properties:
        date:
          example: 2021-08-05T19:46:31.148082Z
          format: date-time
          type: string
      type: object
    MultiEnvironmentDependentFlag:
      example:
        environments:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/DependentFlagEnvironment'
          type: array
      required:
      - environments
      - key
      type: object
    MultiEnvironmentDependentFlags:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        items:
        - environments:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          key: key
        - environments:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/MultiEnvironmentDependentFlag'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _site:
          $ref: '#/components/schemas/Link'
      required:
      - _links
      - _site
      - items
      type: object
    NewMemberForm:
      example:
        firstName: firstName
        lastName: lastName
        password: password
        role: role
        email: email
        customRoles:
        - customRoles
        - customRoles
      properties:
        email:
          description: The member's email
          type: string
        password:
          description: The member's password
          type: string
        firstName:
          description: The member's first name
          type: string
        lastName:
          description: The member's last name
          type: string
        role:
          description: The member's built-in role
          type: string
        customRoles:
          description: The member's custom role
          items:
            type: string
          type: array
      required:
      - email
      type: object
    NewMemberFormListPost:
      items:
        $ref: '#/components/schemas/NewMemberForm'
      type: array
    NotFoundErrorRep:
      properties:
        code:
          example: not_found
          type: string
        message:
          example: resource not found
          type: string
      type: object
    ObjectId:
      type: string
    Operator:
      type: string
    ParentResourceRep:
      example:
        _links:
          key:
            href: href
            type: type
        resource: ""
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        name:
          type: string
        resource: {}
      type: object
    PatchFailedErrorRep:
      properties:
        code:
          example: patch_failed
          type: string
        message:
          example: could not apply patch
          type: string
      type: object
    PatchOperation:
      example:
        op: replace
        path: /biscuits
        value: Chocolate Digestive
      properties:
        op:
          description: The type of operation to perform
          example: replace
          type: string
        path:
          description: A JSON Pointer string specifying the part of the document to
            operate on
          example: /biscuits
          type: string
        value:
          description: A JSON value used in "add", "replace", and "test" operations
          example: Chocolate Digestive
      required:
      - op
      - path
      - value
      type: object
    PatchWithComment:
      example:
        patch:
        - op: replace
          path: /biscuits
          value: Chocolate Digestive
        - op: replace
          path: /biscuits
          value: Chocolate Digestive
        comment: comment
      properties:
        patch:
          items:
            $ref: '#/components/schemas/PatchOperation'
          type: array
        comment:
          type: string
      required:
      - patch
      type: object
    PermissionGrantCollectionRep:
      items:
        $ref: '#/components/schemas/PermissionGrantRep'
      type: array
    PermissionGrantInput:
      properties:
        memberIDs:
          items:
            type: string
          type: array
        actions:
          items:
            type: string
          type: array
        actionSet:
          type: string
      type: object
    PermissionGrantRep:
      example:
        resource: resource
        actionSet: actionSet
        actions:
        - actions
        - actions
        memberIDs:
        - memberIDs
        - memberIDs
      properties:
        actionSet:
          type: string
        actions:
          items:
            type: string
          type: array
        memberIDs:
          items:
            type: string
          type: array
        resource:
          type: string
      type: object
    PostFlagScheduledChangesInput:
      example:
        instructions:
        - null
        - null
        executionDate: 0
        comment: comment
      properties:
        comment:
          type: string
        executionDate:
          format: int64
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/Instruction'
          type: array
      required:
      - executionDate
      - instructions
      type: object
    Prerequisite:
      properties:
        key:
          type: string
        variation:
          type: integer
      required:
      - key
      - variation
      type: object
    Project:
      example:
        includeInSnippetByDefault: true
        _links:
          environments:
            href: /api/v2/projects/my-project/environments
            type: application/json
          self:
            href: /api/v2/projects/my-project
            type: application/json
        environments:
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: false
            serviceConfig: {}
            requiredApprovalTags:
            - require-approval
            bypassApprovalsForPendingChanges: false
            canApplyDeclinedChanges: true
            minNumApprovals: 1
            required: true
          apiKey: XYZ
          color: F5A623
          _links:
            self:
              href: /api/v2/projects/my-project/environments/my-environment
              type: application/json
          confirmChanges: true
          requireComments: true
          mobileKey: XYZ
          defaultTrackEvents: false
          tags:
          - ops
          name: My Environment
          defaultTtl: 5
          _id: 57be1db38b75bf0772d11384
          secureMode: true
          key: my-environment
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: false
            serviceConfig: {}
            requiredApprovalTags:
            - require-approval
            bypassApprovalsForPendingChanges: false
            canApplyDeclinedChanges: true
            minNumApprovals: 1
            required: true
          apiKey: XYZ
          color: F5A623
          _links:
            self:
              href: /api/v2/projects/my-project/environments/my-environment
              type: application/json
          confirmChanges: true
          requireComments: true
          mobileKey: XYZ
          defaultTrackEvents: false
          tags:
          - ops
          name: My Environment
          defaultTtl: 5
          _id: 57be1db38b75bf0772d11384
          secureMode: true
          key: my-environment
        defaultClientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        name: My Project
        _id: 57be1db38b75bf0772d11383
        key: my-project
        tags:
        - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          type: object
        _id:
          example: 57be1db38b75bf0772d11383
          type: string
        key:
          example: my-project
          type: string
        includeInSnippetByDefault:
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        name:
          example: My Project
          type: string
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        environments:
          items:
            $ref: '#/components/schemas/Environment'
          type: array
      required:
      - _id
      - _links
      - environments
      - includeInSnippetByDefault
      - key
      - name
      - tags
      type: object
    ProjectListingRep:
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          type: object
        _id:
          example: 57be1db38b75bf0772d11383
          type: string
        key:
          example: my-project
          type: string
        includeInSnippetByDefault:
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/ClientSideAvailability'
        name:
          example: My Project
          type: string
        tags:
          example:
          - ops
          items:
            type: string
          type: array
      required:
      - _id
      - _links
      - includeInSnippetByDefault
      - key
      - name
      - tags
      type: object
    ProjectPost:
      example:
        includeInSnippetByDefault: true
        environments:
        - color: F5A623
          confirmChanges: false
          name: My Environment
          defaultTtl: 5
          requireComments: false
          secureMode: true
          defaultTrackEvents: false
          key: my-environment
          tags:
          - ops
        - color: F5A623
          confirmChanges: false
          name: My Environment
          defaultTtl: 5
          requireComments: false
          secureMode: true
          defaultTrackEvents: false
          key: my-environment
          tags:
          - ops
        defaultClientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        name: My Project
        key: my-project
        tags:
        - ops
      properties:
        name:
          description: A human-friendly name for the project.
          example: My Project
          type: string
        key:
          description: A unique key used to reference the project in your code.
          example: my-project
          type: string
        includeInSnippetByDefault:
          description: Whether or not flags created in this project are made available
            to the client-side JavaScript SDK by default.
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/DefaultClientSideAvailabilityPost'
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        environments:
          description: Creates the provided environments for this project. If omitted
            default environments will be created instead.
          items:
            $ref: '#/components/schemas/EnvironmentPost'
          type: array
      required:
      - key
      - name
      type: object
    Projects:
      example:
        _links:
          self:
            href: /api/v2/projects
            type: application/json
        items:
        - includeInSnippetByDefault: true
          _links:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: true
              minNumApprovals: 1
              required: true
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            confirmChanges: true
            requireComments: true
            mobileKey: XYZ
            defaultTrackEvents: false
            tags:
            - ops
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            secureMode: true
            key: my-environment
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: true
              minNumApprovals: 1
              required: true
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            confirmChanges: true
            requireComments: true
            mobileKey: XYZ
            defaultTrackEvents: false
            tags:
            - ops
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            secureMode: true
            key: my-environment
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: My Project
          _id: 57be1db38b75bf0772d11383
          key: my-project
          tags:
          - ops
        - includeInSnippetByDefault: true
          _links:
            environments:
              href: /api/v2/projects/my-project/environments
              type: application/json
            self:
              href: /api/v2/projects/my-project
              type: application/json
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: true
              minNumApprovals: 1
              required: true
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            confirmChanges: true
            requireComments: true
            mobileKey: XYZ
            defaultTrackEvents: false
            tags:
            - ops
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            secureMode: true
            key: my-environment
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: true
              minNumApprovals: 1
              required: true
            apiKey: XYZ
            color: F5A623
            _links:
              self:
                href: /api/v2/projects/my-project/environments/my-environment
                type: application/json
            confirmChanges: true
            requireComments: true
            mobileKey: XYZ
            defaultTrackEvents: false
            tags:
            - ops
            name: My Environment
            defaultTtl: 5
            _id: 57be1db38b75bf0772d11384
            secureMode: true
            key: my-environment
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: My Project
          _id: 57be1db38b75bf0772d11383
          key: my-project
          tags:
          - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          description: A link to this resource.
          example:
            self:
              href: /api/v2/projects
              type: application/json
          type: object
        items:
          description: List of projects.
          items:
            $ref: '#/components/schemas/Project'
          type: array
      required:
      - _links
      - items
      type: object
    PubNubDetailRep:
      properties:
        channel:
          type: string
        cipherKey:
          type: string
      type: object
    RateLimitedErrorRep:
      properties:
        code:
          example: rate_limited
          type: string
        message:
          example: You've exceeded the API rate limit. Try again later.
          type: string
      type: object
    ReferenceRep:
      example:
        path: /main/index.js
        hint: javascript
        hunks:
        - aliases:
          - enableFeature
          - EnableFeature
          startingLineNumber: 45
          lines: var enableFeature = 'enable-feature';
          projKey: default
          flagKey: enable-feature
        - aliases:
          - enableFeature
          - EnableFeature
          startingLineNumber: 45
          lines: var enableFeature = 'enable-feature';
          projKey: default
          flagKey: enable-feature
      properties:
        path:
          description: File path of the reference
          example: /main/index.js
          type: string
        hint:
          description: Programming language used in the file
          example: javascript
          type: string
        hunks:
          items:
            $ref: '#/components/schemas/HunkRep'
          type: array
      required:
      - hunks
      - path
      type: object
    RelayAutoConfigCollectionRep:
      example:
        items:
        - displayKey: displayKey
          _creator:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          fullKey: fullKey
          name: name
          _id: _id
          lastModified: 6
          creationDate: 0
          policy:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
        - displayKey: displayKey
          _creator:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          fullKey: fullKey
          name: name
          _id: _id
          lastModified: 6
          creationDate: 0
          policy:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/RelayAutoConfigRep'
          type: array
      required:
      - items
      type: object
    RelayAutoConfigPost:
      example:
        name: name
        policy:
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
      properties:
        name:
          description: A human-friendly name for the Relay Proxy configuration
          type: string
        policy:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
      required:
      - name
      - policy
      type: object
    RelayAutoConfigRep:
      example:
        displayKey: displayKey
        _creator:
          firstName: An
          lastName: Example
          role: owner
          _links:
            self:
              href: /api/v2/members/569f183514f4432160000007
              type: application/json
          _id: 569f183514f4432160000007
          email: a.example@example.com
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        fullKey: fullKey
        name: name
        _id: _id
        lastModified: 6
        creationDate: 0
        policy:
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
      properties:
        _id:
          type: string
        _creator:
          $ref: '#/components/schemas/MemberSummaryRep'
        _access:
          $ref: '#/components/schemas/AccessRep'
        name:
          type: string
        policy:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        fullKey:
          type: string
        displayKey:
          type: string
        creationDate:
          format: int64
          type: integer
        lastModified:
          format: int64
          type: integer
      required:
      - _id
      - creationDate
      - displayKey
      - fullKey
      - lastModified
      - name
      - policy
      type: object
    RepositoryCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key: ""
          defaultBranch: main
          name: LaunchDarkly-Docs
          sourceLink: https://github.com/launchdarkly/LaunchDarkly-Docs
          hunkUrlTemplate: /blob/${sha}/${filePath}#L${lineNumber}
          type: github
          branches:
          - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
            syncTime: 0
            references:
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            _links:
              key: ""
            name: main
            updateSequenceId: 25
          - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
            syncTime: 0
            references:
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            _links:
              key: ""
            name: main
            updateSequenceId: 25
          commitUrlTemplate: /commit/${sha}
          version: 3
          enabled: true
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key: ""
          defaultBranch: main
          name: LaunchDarkly-Docs
          sourceLink: https://github.com/launchdarkly/LaunchDarkly-Docs
          hunkUrlTemplate: /blob/${sha}/${filePath}#L${lineNumber}
          type: github
          branches:
          - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
            syncTime: 0
            references:
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            _links:
              key: ""
            name: main
            updateSequenceId: 25
          - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
            syncTime: 0
            references:
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            - path: /main/index.js
              hint: javascript
              hunks:
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
              - aliases:
                - enableFeature
                - EnableFeature
                startingLineNumber: 45
                lines: var enableFeature = 'enable-feature';
                projKey: default
                flagKey: enable-feature
            _links:
              key: ""
            name: main
            updateSequenceId: 25
          commitUrlTemplate: /commit/${sha}
          version: 3
          enabled: true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        items:
          description: An array of repositories
          items:
            $ref: '#/components/schemas/RepositoryRep'
          type: array
      required:
      - _links
      - items
      type: object
    RepositoryRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        _links:
          key: ""
        defaultBranch: main
        name: LaunchDarkly-Docs
        sourceLink: https://github.com/launchdarkly/LaunchDarkly-Docs
        hunkUrlTemplate: /blob/${sha}/${filePath}#L${lineNumber}
        type: github
        branches:
        - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          syncTime: 0
          references:
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          _links:
            key: ""
          name: main
          updateSequenceId: 25
        - head: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          syncTime: 0
          references:
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          - path: /main/index.js
            hint: javascript
            hunks:
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
            - aliases:
              - enableFeature
              - EnableFeature
              startingLineNumber: 45
              lines: var enableFeature = 'enable-feature';
              projKey: default
              flagKey: enable-feature
          _links:
            key: ""
          name: main
          updateSequenceId: 25
        commitUrlTemplate: /commit/${sha}
        version: 3
        enabled: true
      properties:
        name:
          description: The repository name
          example: LaunchDarkly-Docs
          type: string
        sourceLink:
          description: A URL to access the repository
          example: https://github.com/launchdarkly/LaunchDarkly-Docs
          type: string
        commitUrlTemplate:
          description: A template for constructing a valid URL to view the commit
          example: /commit/${sha}
          type: string
        hunkUrlTemplate:
          description: A template for constructing a valid URL to view the hunk
          example: /blob/${sha}/${filePath}#L${lineNumber}
          type: string
        type:
          description: The type of repository
          enum:
          - github
          - bitbucket
          - custom
          example: github
          type: string
        defaultBranch:
          description: The repository's default branch
          example: main
          type: string
        enabled:
          description: Whether or not a repository is enabled for code reference scanning
          example: true
          type: boolean
        version:
          description: The version of the repository's saved information
          example: 3
          type: integer
        branches:
          description: An array of the repository's branches that have been scanned
            for code references
          items:
            $ref: '#/components/schemas/BranchRep'
          type: array
        _links:
          additionalProperties: {}
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      required:
      - _links
      - defaultBranch
      - enabled
      - name
      - type
      - version
      type: object
    ResourceAccess:
      example:
        resource: ""
        action: action
      properties:
        action:
          type: string
        resource: {}
      type: object
    ResourceIDResponse:
      example:
        projectKey: projectKey
        kind: kind
        flagKey: flagKey
        key: key
        environmentKey: environmentKey
      properties:
        kind:
          type: string
        projectKey:
          type: string
        environmentKey:
          type: string
        flagKey:
          type: string
        key:
          type: string
      type: object
    ResourceIdentifier: {}
    ResourceKind:
      type: string
    ResourceSpecifier: {}
    ResourceSpecifierImpl:
      example: {}
      properties: {}
      type: object
    ReviewOutputRep:
      example:
        kind: kind
        comment: comment
        _id: _id
        creationDate: 5
        memberId: memberId
      properties:
        _id:
          type: string
        kind:
          type: string
        creationDate:
          format: int64
          type: integer
        comment:
          type: string
        memberId:
          type: string
      required:
      - _id
      - kind
      type: object
    ReviewResponse:
      example:
        kind: approve
        comment: comment
        _id: _id
        creationDate: 1
        memberId: memberId
      properties:
        _id:
          description: The approval request id
          type: string
        kind:
          description: The type of review action to take. Either "approve", "decline"
            or "comment"
          enum:
          - approve
          - decline
          - comment
          type: string
        creationDate:
          format: int64
          type: integer
        comment:
          description: A comment describing the approval response
          type: string
        memberId:
          description: ID of account member that reviewed request
          type: string
      required:
      - _id
      - kind
      type: object
    RoleType:
      type: string
    Rollout:
      properties:
        variations:
          items:
            $ref: '#/components/schemas/WeightedVariation'
          type: array
        experimentAllocation:
          $ref: '#/components/schemas/ExperimentAllocationRep'
        seed:
          type: integer
        bucketBy:
          type: string
      required:
      - variations
      type: object
    RootResponse:
      additionalProperties:
        $ref: '#/components/schemas/Link'
      type: object
    Rule:
      properties:
        _id:
          type: string
        variation:
          type: integer
        rollout:
          $ref: '#/components/schemas/Rollout'
        clauses:
          items:
            $ref: '#/components/schemas/Clause'
          type: array
        trackEvents:
          type: boolean
        description:
          type: string
      required:
      - clauses
      - trackEvents
      type: object
    ScheduleConditionInputRep:
      properties:
        executionDate:
          format: int64
          type: integer
        executeNow:
          type: boolean
      type: object
    ScheduleConditionOutputRep:
      properties:
        executionDate:
          format: int64
          type: integer
      type: object
    SdkListRep:
      example:
        _links:
          key: ""
        sdks:
        - sdks
        - sdks
      properties:
        _links:
          additionalProperties: {}
          type: object
        sdks:
          items:
            type: string
          type: array
      required:
      - _links
      - sdks
      type: object
    SdkVersionListRep:
      example:
        _links:
          key: ""
        sdkVersions:
        - sdk: sdk
          version: version
        - sdk: sdk
          version: version
      properties:
        _links:
          additionalProperties: {}
          type: object
        sdkVersions:
          items:
            $ref: '#/components/schemas/SdkVersionRep'
          type: array
      required:
      - _links
      - sdkVersions
      type: object
    SdkVersionRep:
      example:
        sdk: sdk
        version: version
      properties:
        sdk:
          type: string
        version:
          type: string
      required:
      - sdk
      - version
      type: object
    SegmentBody:
      example:
        name: name
        description: description
        unbounded: true
        key: key
        tags:
        - ops
      properties:
        name:
          description: A human-friendly name for the segment
          type: string
        key:
          description: A unique key used to reference the segment
          type: string
        description:
          description: A description of the segment's purpose
          type: string
        tags:
          description: Tags for the segment
          example:
          - ops
          items:
            type: string
          type: array
        unbounded:
          type: boolean
      required:
      - key
      - name
      type: object
    SegmentId:
      type: string
    SegmentMetadata:
      example:
        deleted: true
        segmentId: segmentId
        includedCount: 2
        envId: envId
        excludedCount: 7
        version: 5
      properties:
        envId:
          type: string
        segmentId:
          type: string
        version:
          type: integer
        includedCount:
          type: integer
        excludedCount:
          type: integer
        deleted:
          type: boolean
      type: object
    SegmentUserList:
      example:
        add:
        - add
        - add
        remove:
        - remove
        - remove
      properties:
        add:
          items:
            type: string
          type: array
        remove:
          items:
            type: string
          type: array
      type: object
    SegmentUserState:
      example:
        excluded:
          add:
          - add
          - add
          remove:
          - remove
          - remove
        included:
          add:
          - add
          - add
          remove:
          - remove
          - remove
      properties:
        included:
          $ref: '#/components/schemas/SegmentUserList'
        excluded:
          $ref: '#/components/schemas/SegmentUserList'
      type: object
    SeriesListRep:
      example:
        metadata:
        - null
        - null
        _links:
          key: ""
        series:
        - null
        - null
      properties:
        _links:
          additionalProperties: {}
          type: object
        metadata:
          items:
            $ref: '#/components/schemas/SeriesMetadataRep'
          type: array
        series:
          items:
            $ref: '#/components/schemas/SeriesTimeSliceRep'
          type: array
      required:
      - _links
      - metadata
      - series
      type: object
    SeriesMetadataRep:
      additionalProperties: {}
      type: object
    SeriesTimeSliceRep:
      additionalProperties:
        type: integer
      type: object
    StageInputRep:
      example:
        name: name
        action:
          instructions: ""
        conditions:
        - notifyMemberIds:
          - notifyMemberIds
          - notifyMemberIds
          kind: kind
          executeNow: true
          executionDate: 0
          description: description
        - notifyMemberIds:
          - notifyMemberIds
          - notifyMemberIds
          kind: kind
          executeNow: true
          executionDate: 0
          description: description
      properties:
        name:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/ConditionInputRep'
          type: array
        action:
          $ref: '#/components/schemas/ActionInputRep'
      type: object
    StageOutputRep:
      example:
        _execution:
          status: status
        name: name
        action:
          instructions:
          - null
          - null
          kind: kind
        _id: _id
        conditions:
        - allReviews:
          - kind: kind
            comment: comment
            _id: _id
            creationDate: 5
            memberId: memberId
          - kind: kind
            comment: comment
            _id: _id
            creationDate: 5
            memberId: memberId
          _execution:
            status: status
          notifyMemberIds:
          - notifyMemberIds
          - notifyMemberIds
          kind: kind
          executionDate: 1
          description: description
          appliedDate: 5
          reviewStatus: reviewStatus
          _id: _id
        - allReviews:
          - kind: kind
            comment: comment
            _id: _id
            creationDate: 5
            memberId: memberId
          - kind: kind
            comment: comment
            _id: _id
            creationDate: 5
            memberId: memberId
          _execution:
            status: status
          notifyMemberIds:
          - notifyMemberIds
          - notifyMemberIds
          kind: kind
          executionDate: 1
          description: description
          appliedDate: 5
          reviewStatus: reviewStatus
          _id: _id
      properties:
        _id:
          type: string
        name:
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/ConditionOutputRep'
          type: array
        action:
          $ref: '#/components/schemas/ActionOutputRep'
        _execution:
          $ref: '#/components/schemas/ExecutionOutputRep'
      required:
      - _execution
      - _id
      - action
      - conditions
      type: object
    Statement:
      example:
        notActions:
        - null
        - null
        notResources:
        - {}
        - {}
        effect: effect
        resources:
        - {}
        - {}
        actions:
        - null
        - null
      properties:
        resources:
          items:
            $ref: '#/components/schemas/ResourceSpecifierImpl'
          type: array
        notResources:
          items:
            $ref: '#/components/schemas/ResourceSpecifierImpl'
          type: array
        actions:
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        effect:
          type: string
      required:
      - effect
      type: object
    StatementPost:
      example:
        notActions:
        - null
        - null
        notResources:
        - notResources
        - notResources
        effect: effect
        resources:
        - resources
        - resources
        actions:
        - null
        - null
      properties:
        resources:
          description: Resource specifier strings
          items:
            type: string
          type: array
        notResources:
          description: Targeted resources are the resources NOT in this list. The
            "resources" field must be empty to use this field.
          items:
            type: string
          type: array
        actions:
          description: Actions to perform on a resource
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        notActions:
          description: Targeted actions are the actions NOT in this list. The "actions"
            field must be empty to use this field.
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        effect:
          type: string
      required:
      - actions
      - effect
      - resources
      type: object
    StatementPostData:
      properties:
        resources:
          description: Resource specifier strings
          items:
            type: string
          type: array
        notResources:
          description: Targeted resources are the resources NOT in this list. The
            "resources" field must be empty to use this field.
          items:
            type: string
          type: array
        actions:
          description: Actions to perform on a resource
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        notActions:
          description: Targeted actions are the actions NOT in this list. The "actions"
            field must be empty to use this field.
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        effect:
          type: string
      required:
      - actions
      - effect
      - resources
      type: object
    StatementPostList:
      items:
        $ref: '#/components/schemas/StatementPost'
      type: array
    StatementRep:
      example:
        notActions:
        - null
        - null
        notResources:
        - {}
        - {}
        effect: effect
        resources:
        - {}
        - {}
        actions:
        - null
        - null
      properties:
        resources:
          description: Resource specifier strings
          items:
            $ref: '#/components/schemas/ResourceSpecifierImpl'
          type: array
        notResources:
          description: Targeted resources are the resources NOT in this list. The
            "resources" field must be empty to use this field.
          items:
            $ref: '#/components/schemas/ResourceSpecifierImpl'
          type: array
        actions:
          description: Actions to perform on a resource
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        notActions:
          description: Targeted actions are the actions NOT in this list. The "actions"
            field must be empty to use this field.
          items:
            $ref: '#/components/schemas/ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    StatisticCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        flags:
          key:
          - _links:
              key:
                href: href
                type: type
            defaultBranch: defaultBranch
            name: name
            sourceLink: sourceLink
            hunkCount: 6
            version: 0
            enabled: true
          - _links:
              key:
                href: href
                type: type
            defaultBranch: defaultBranch
            name: name
            sourceLink: sourceLink
            hunkCount: 6
            version: 0
            enabled: true
      properties:
        flags:
          additionalProperties:
            items:
              $ref: '#/components/schemas/StatisticRep'
            type: array
          type: object
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - _links
      - flags
      type: object
    StatisticRep:
      example:
        _links:
          key:
            href: href
            type: type
        defaultBranch: defaultBranch
        name: name
        sourceLink: sourceLink
        hunkCount: 6
        version: 0
        enabled: true
      properties:
        name:
          type: string
        sourceLink:
          type: string
        defaultBranch:
          type: string
        enabled:
          type: boolean
        version:
          type: integer
        hunkCount:
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - _links
      - defaultBranch
      - enabled
      - hunkCount
      - name
      - sourceLink
      - version
      type: object
    StatisticsRoot:
      example:
        projects:
        - href: href
          type: type
        - href: href
          type: type
        self:
          href: href
          type: type
      properties:
        projects:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        self:
          $ref: '#/components/schemas/Link'
      type: object
    StatusConflictErrorRep:
      properties:
        code:
          example: optimistic_locking_error
          type: string
        message:
          example: Optimistic lock error. Please try again later.
          type: string
      type: object
    SubjectDataRep:
      example:
        _links:
          key:
            href: href
            type: type
        avatarUrl: avatarUrl
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        name:
          type: string
        avatarUrl:
          type: string
      type: object
    SuccessCriteria:
      type: integer
    Target:
      properties:
        values:
          items:
            type: string
          type: array
        variation:
          type: integer
      required:
      - values
      - variation
      type: object
    TargetResourceRep:
      example:
        _links:
          key:
            href: href
            type: type
        name: name
        resources:
        - null
        - null
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        name:
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ResourceIdentifier'
          type: array
      type: object
    TeamCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 5
        items:
        - permissionGrants:
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
            memberIDs:
            - memberIDs
            - memberIDs
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
            memberIDs:
            - memberIDs
            - memberIDs
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          _createdAt: 0
          name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          description: description
          projectKeys:
          - projectKeys
          - projectKeys
          _updatedAt: 6
          _version: 1
          key: key
          memberIDs:
          - memberIDs
          - memberIDs
        - permissionGrants:
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
            memberIDs:
            - memberIDs
            - memberIDs
          - resource: resource
            actionSet: actionSet
            actions:
            - actions
            - actions
            memberIDs:
            - memberIDs
            - memberIDs
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          _createdAt: 0
          name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          description: description
          projectKeys:
          - projectKeys
          - projectKeys
          _updatedAt: 6
          _version: 1
          key: key
          memberIDs:
          - memberIDs
          - memberIDs
      properties:
        items:
          items:
            $ref: '#/components/schemas/TeamRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        totalCount:
          type: integer
      type: object
    TeamRep:
      example:
        permissionGrants:
        - resource: resource
          actionSet: actionSet
          actions:
          - actions
          - actions
          memberIDs:
          - memberIDs
          - memberIDs
        - resource: resource
          actionSet: actionSet
          actions:
          - actions
          - actions
          memberIDs:
          - memberIDs
          - memberIDs
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        _links:
          key:
            href: href
            type: type
        _createdAt: 0
        name: name
        customRoleKeys:
        - customRoleKeys
        - customRoleKeys
        description: description
        projectKeys:
        - projectKeys
        - projectKeys
        _updatedAt: 6
        _version: 1
        key: key
        memberIDs:
        - memberIDs
        - memberIDs
      properties:
        customRoleKeys:
          items:
            type: string
          type: array
        description:
          type: string
        key:
          type: string
        memberIDs:
          items:
            type: string
          type: array
        name:
          type: string
        permissionGrants:
          items:
            $ref: '#/components/schemas/PermissionGrantRep'
          type: array
        projectKeys:
          items:
            type: string
          type: array
        _access:
          $ref: '#/components/schemas/AccessRep'
        _createdAt:
          format: int64
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _updatedAt:
          format: int64
          type: integer
        _version:
          type: integer
      type: object
    TitleRep:
      properties:
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
      type: object
    Token:
      example:
        role: reader
        customRoleIds:
        - null
        - null
        _links:
          parent:
            href: /api/v2/tokens
            type: application/json
          self:
            href: /api/v2/tokens/61095542756dba551110ae21
            type: application/json
        description: description
        _member:
          firstName: An
          lastName: Example
          role: owner
          _links:
            self:
              href: /api/v2/members/569f183514f4432160000007
              type: application/json
          _id: 569f183514f4432160000007
          email: a.example@example.com
        ownerId: ownerId
        creationDate: 0
        defaultApiVersion: 1
        token: api-deadbeef-dead-beef-dead-beefdeadbeef
        inlineRole:
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        lastUsed: 5
        name: name
        _id: _id
        lastModified: 6
        serviceToken: true
        memberId: memberId
      properties:
        _id:
          type: string
        ownerId:
          type: string
        memberId:
          type: string
        _member:
          $ref: '#/components/schemas/MemberSummaryRep'
        name:
          type: string
        description:
          type: string
        creationDate:
          format: int64
          type: integer
        lastModified:
          format: int64
          type: integer
        customRoleIds:
          items:
            $ref: '#/components/schemas/ObjectId'
          type: array
        inlineRole:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        role:
          example: reader
          type: string
        token:
          example: api-deadbeef-dead-beef-dead-beefdeadbeef
          type: string
        serviceToken:
          type: boolean
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            parent:
              href: /api/v2/tokens
              type: application/json
            self:
              href: /api/v2/tokens/61095542756dba551110ae21
              type: application/json
          type: object
        defaultApiVersion:
          type: integer
        lastUsed:
          format: int64
          type: integer
      required:
      - _id
      - _links
      - creationDate
      - lastModified
      - memberId
      - ownerId
      type: object
    TokenDataRep:
      example:
        ending: ending
        _links:
          key:
            href: href
            type: type
        name: name
        _id: _id
        serviceToken: true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _id:
          type: string
        name:
          type: string
        ending:
          type: string
        serviceToken:
          type: boolean
      type: object
    Tokens:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - role: reader
          customRoleIds:
          - null
          - null
          _links:
            parent:
              href: /api/v2/tokens
              type: application/json
            self:
              href: /api/v2/tokens/61095542756dba551110ae21
              type: application/json
          description: description
          _member:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          ownerId: ownerId
          creationDate: 0
          defaultApiVersion: 1
          token: api-deadbeef-dead-beef-dead-beefdeadbeef
          inlineRole:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          lastUsed: 5
          name: name
          _id: _id
          lastModified: 6
          serviceToken: true
          memberId: memberId
        - role: reader
          customRoleIds:
          - null
          - null
          _links:
            parent:
              href: /api/v2/tokens
              type: application/json
            self:
              href: /api/v2/tokens/61095542756dba551110ae21
              type: application/json
          description: description
          _member:
            firstName: An
            lastName: Example
            role: owner
            _links:
              self:
                href: /api/v2/members/569f183514f4432160000007
                type: application/json
            _id: 569f183514f4432160000007
            email: a.example@example.com
          ownerId: ownerId
          creationDate: 0
          defaultApiVersion: 1
          token: api-deadbeef-dead-beef-dead-beefdeadbeef
          inlineRole:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          lastUsed: 5
          name: name
          _id: _id
          lastModified: 6
          serviceToken: true
          memberId: memberId
      properties:
        items:
          items:
            $ref: '#/components/schemas/Token'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      type: object
    UnauthorizedErrorRep:
      properties:
        code:
          example: unauthorized
          type: string
        message:
          example: invalid key
          type: string
      type: object
    UnixMillis:
      format: int64
      type: integer
    UrlMatcher: {}
    UrlMatchers:
      items:
        $ref: '#/components/schemas/UrlMatcher'
      type: array
    UrlPost:
      example:
        kind: exact
        pattern: pattern
        url: url
        substring: substring
      properties:
        kind:
          enum:
          - exact
          - canonical
          - substring
          - regex
          type: string
        url:
          type: string
        substring:
          type: string
        pattern:
          type: string
      type: object
    User:
      example:
        sortValue: ""
        environmentId: environmentId
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        _links:
          key:
            href: href
            type: type
        lastPing: 2000-01-23T04:56:07.000+00:00
        ownerId: ownerId
      properties:
        lastPing:
          format: date-time
          type: string
        environmentId:
          type: string
        ownerId:
          type: string
        user:
          $ref: '#/components/schemas/User'
        sortValue: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    UserAttributeNamesRep:
      example:
        standard:
        - key
        - ip
        - firstName
        - lastName
        - country
        - anonymous
        private:
        - SSN
        - credit_card_number
        custom:
        - Age
        - FavoriteFood
        - FavoriteColor
      properties:
        private:
          description: private attributes
          example:
          - SSN
          - credit_card_number
          items:
            type: string
          type: array
        custom:
          description: custom attributes
          example:
          - Age
          - FavoriteFood
          - FavoriteColor
          items:
            type: string
          type: array
        standard:
          description: standard attributes
          example:
          - key
          - ip
          - firstName
          - lastName
          - country
          - anonymous
          items:
            type: string
          type: array
      type: object
    UserFlagSetting:
      example:
        _links:
          sort.order:
            href: /api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order
            type: application/json
        _value: "true"
        setting: "null"
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            sort.order:
              href: /api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order
              type: application/json
          type: object
        _value:
          example: "true"
        setting:
          example: "null"
      required:
      - _links
      - _value
      - setting
      type: object
    UserFlagSettings:
      example:
        _links:
          self:
            href: /api/v2/users/lacuna/production/Abbie_Braun/flags
            type: application/json
        items:
          alternate.page:
            _links:
              self:
                href: /api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page
                type: application/json
            _value: false
            setting: null
          sort.order:
            _links:
              self:
                href: /api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order
                type: application/json
            _value: true
            setting: null
      properties:
        items:
          additionalProperties:
            $ref: '#/components/schemas/UserFlagSetting'
          example:
            alternate.page:
              _links:
                self:
                  href: /api/v2/users/lacuna/production/Abbie_Braun/flags/alternate.page
                  type: application/json
              _value: false
              setting: null
            sort.order:
              _links:
                self:
                  href: /api/v2/users/lacuna/production/Abbie_Braun/flags/sort.order
                  type: application/json
              _value: true
              setting: null
          type: object
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          example:
            self:
              href: /api/v2/users/lacuna/production/Abbie_Braun/flags
              type: application/json
          type: object
      required:
      - _links
      - items
      type: object
    UserRecord:
      properties:
        lastPing:
          format: date-time
          type: string
        environmentId:
          type: string
        ownerId:
          type: string
        user:
          $ref: '#/components/schemas/User'
        sortValue: {}
      type: object
    UserSegment:
      example:
        generation: 5
        _flags:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        _externalLink: _externalLink
        _links:
          key:
            href: href
            type: type
        description: description
        rules:
        - clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          weight: 6
          _id: _id
          bucketBy: bucketBy
        - clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          weight: 6
          _id: _id
          bucketBy: bucketBy
        creationDate: 0
        version: 1
        tags:
        - tags
        - tags
        excluded:
        - excluded
        - excluded
        _importInProgress: true
        _unboundedMetadata:
          deleted: true
          segmentId: segmentId
          includedCount: 2
          envId: envId
          excludedCount: 7
          version: 5
        deleted: true
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        _external: _external
        name: name
        unbounded: true
        included:
        - included
        - included
        key: key
      properties:
        name:
          description: A human-friendly name for the segment
          type: string
        description:
          description: A description of the segment's purpose
          type: string
        tags:
          description: Tags for the segment
          items:
            type: string
          type: array
        creationDate:
          format: int64
          type: integer
        key:
          description: A unique key used to reference the segment
          type: string
        included:
          description: Included users are always segment members, regardless of segment
            rules. For Big Segments this array is either empty or omitted entirely.
          items:
            type: string
          type: array
        excluded:
          description: Segment rules bypass excluded users, so they will never be
            included based on rules. Excluded users may still be included explicitly.
            This value is omitted for Big Segments.
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        rules:
          items:
            $ref: '#/components/schemas/UserSegmentRule'
          type: array
        version:
          type: integer
        deleted:
          type: boolean
        _access:
          $ref: '#/components/schemas/AccessRep'
        _flags:
          items:
            $ref: '#/components/schemas/FlagListingRep'
          type: array
        unbounded:
          type: boolean
        generation:
          type: integer
        _unboundedMetadata:
          $ref: '#/components/schemas/SegmentMetadata'
        _external:
          type: string
        _externalLink:
          type: string
        _importInProgress:
          type: boolean
      required:
      - _links
      - creationDate
      - deleted
      - generation
      - key
      - name
      - rules
      - tags
      - version
      type: object
    UserSegmentRule:
      example:
        clauses:
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        weight: 6
        _id: _id
        bucketBy: bucketBy
      properties:
        _id:
          type: string
        clauses:
          items:
            $ref: '#/components/schemas/Clause'
          type: array
        weight:
          type: integer
        bucketBy:
          type: string
      required:
      - clauses
      type: object
    UserSegments:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - generation: 5
          _flags:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          _externalLink: _externalLink
          _links:
            key:
              href: href
              type: type
          description: description
          rules:
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          creationDate: 0
          version: 1
          tags:
          - tags
          - tags
          excluded:
          - excluded
          - excluded
          _importInProgress: true
          _unboundedMetadata:
            deleted: true
            segmentId: segmentId
            includedCount: 2
            envId: envId
            excludedCount: 7
            version: 5
          deleted: true
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _external: _external
          name: name
          unbounded: true
          included:
          - included
          - included
          key: key
        - generation: 5
          _flags:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          _externalLink: _externalLink
          _links:
            key:
              href: href
              type: type
          description: description
          rules:
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          creationDate: 0
          version: 1
          tags:
          - tags
          - tags
          excluded:
          - excluded
          - excluded
          _importInProgress: true
          _unboundedMetadata:
            deleted: true
            segmentId: segmentId
            includedCount: 2
            envId: envId
            excludedCount: 7
            version: 5
          deleted: true
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _external: _external
          name: name
          unbounded: true
          included:
          - included
          - included
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserSegment'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
      - _links
      - items
      type: object
    Users:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 0
        items:
        - sortValue: ""
          environmentId: environmentId
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          lastPing: 2000-01-23T04:56:07.000+00:00
          ownerId: ownerId
        - sortValue: ""
          environmentId: environmentId
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          lastPing: 2000-01-23T04:56:07.000+00:00
          ownerId: ownerId
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        totalCount:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - items
      - totalCount
      type: object
    ValuePut:
      example:
        comment: comment
        setting: ""
      properties:
        setting:
          description: The variation value to set for the user
        comment:
          type: string
      type: object
    Variation:
      example:
        name: name
        description: description
        _id: _id
        value: ""
      properties:
        _id:
          type: string
        value: {}
        description:
          description: Description of the variation
          type: string
        name:
          description: A human-friendly name for the variation
          type: string
      required:
      - value
      type: object
    VariationOrRolloutRep:
      properties:
        variation:
          type: integer
        rollout:
          $ref: '#/components/schemas/Rollout'
      type: object
    VariationSummary:
      properties:
        rules:
          type: integer
        nullRules:
          type: integer
        targets:
          type: integer
        isFallthrough:
          type: boolean
        isOff:
          type: boolean
        rollout:
          type: integer
        bucketBy:
          type: string
      required:
      - nullRules
      - rules
      - targets
      type: object
    VersionsRep:
      example:
        validVersions:
        - null
        - null
        latestVersion: 0
        currentVersion: 6
        beta: true
      properties:
        validVersions:
          items:
            $ref: '#/components/schemas/DateVersion'
          type: array
        latestVersion:
          type: integer
        currentVersion:
          type: integer
        beta:
          type: boolean
      required:
      - currentVersion
      - latestVersion
      - validVersions
      type: object
    Webhook:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
          - reason:
              role_name: role_name
              notActions:
              - null
              - null
              notResources:
              - {}
              - {}
              effect: effect
              resources:
              - {}
              - {}
              actions:
              - null
              - null
            action: action
        _links:
          key:
            href: href
            type: type
        name: Example hook
        statements:
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        - notActions:
          - null
          - null
          notResources:
          - {}
          - {}
          effect: effect
          resources:
          - {}
          - {}
          actions:
          - null
          - null
        _id: 57be1db38b75bf0772d11384
        secret: frobozz
        url: http://www.example.com
        "on": true
        tags: []
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        _id:
          example: 57be1db38b75bf0772d11384
          type: string
        name:
          example: Example hook
          type: string
        url:
          example: http://www.example.com
          type: string
        secret:
          example: frobozz
          type: string
        statements:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        "on":
          example: true
          type: boolean
        tags:
          example: []
          items:
            type: string
          type: array
        _access:
          $ref: '#/components/schemas/AccessRep'
      required:
      - _id
      - _links
      - "on"
      - tags
      - url
      type: object
    Webhooks:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          name: Example hook
          statements:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          _id: 57be1db38b75bf0772d11384
          secret: frobozz
          url: http://www.example.com
          "on": true
          tags: []
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
            - reason:
                role_name: role_name
                notActions:
                - null
                - null
                notResources:
                - {}
                - {}
                effect: effect
                resources:
                - {}
                - {}
                actions:
                - null
                - null
              action: action
          _links:
            key:
              href: href
              type: type
          name: Example hook
          statements:
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          - notActions:
            - null
            - null
            notResources:
            - {}
            - {}
            effect: effect
            resources:
            - {}
            - {}
            actions:
            - null
            - null
          _id: 57be1db38b75bf0772d11384
          secret: frobozz
          url: http://www.example.com
          "on": true
          tags: []
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        items:
          items:
            $ref: '#/components/schemas/Webhook'
          type: array
      required:
      - _links
      - items
      type: object
    WeightedVariation:
      properties:
        variation:
          type: integer
        weight:
          type: integer
        _untracked:
          type: boolean
      required:
      - variation
      - weight
      type: object
    createCopyFlagConfigApprovalRequestRequest:
      properties:
        comment:
          description: A comment describing the approval request
          type: string
        description:
          type: string
        notifyMemberIds:
          description: An array of member IDs. These members are notified to review
            the approval request.
          items:
            type: string
          type: array
        source:
          $ref: '#/components/schemas/sourceFlag'
        includedActions:
          items:
            type: string
          type: array
        excludedActions:
          items:
            type: string
          type: array
      required:
      - description
      - notifyMemberIds
      - source
      type: object
    createFlagConfigApprovalRequestRequest:
      properties:
        comment:
          description: A comment describing the approval request
          type: string
        description:
          description: A human-friendly name for the approval request
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/Instruction'
          type: array
        notifyMemberIds:
          description: An array of member IDs. These members are notified to review
            the approval request
          items:
            type: string
          type: array
        executionDate:
          format: int64
          type: integer
        operatingOnId:
          description: ID of scheduled change to edit or delete
          type: string
        integrationConfig:
          additionalProperties: {}
          type: object
      required:
      - description
      - instructions
      - notifyMemberIds
      type: object
    customProperty:
      example:
        name: name
        value:
        - value
        - value
      properties:
        name:
          type: string
        value:
          items:
            type: string
          type: array
      required:
      - name
      - value
      type: object
    ipList:
      example:
        addresses:
        - 104.156.80.0/20
        - 151.101.0.0/16
        outboundAddresses:
        - 52.21.152.96/32
      properties:
        addresses:
          example:
          - 104.156.80.0/20
          - 151.101.0.0/16
          items:
            type: string
          type: array
        outboundAddresses:
          example:
          - 52.21.152.96/32
          items:
            type: string
          type: array
      required:
      - addresses
      - outboundAddresses
      type: object
    patchSegmentInstruction:
      properties:
        kind:
          type: string
        userKey:
          description: A unique key used to represent the user
          type: string
        targetType:
          description: A segment's target type. Must be either <code>included</code>
            or <code>excluded</code>
          type: string
        value:
          description: Schedule user target expiration on a segment by including a
            timestamp
          type: integer
        version:
          description: Required if <code>kind</code> is <code>updateExpireUserTargetDate</code>
          type: integer
      required:
      - kind
      - targetType
      - userKey
      type: object
    patchSegmentRequest:
      properties:
        comment:
          description: Optional description of changes
          type: string
        instructions:
          description: Semantic patch instructions for the desired changes to the
            resource
          example:
          - kind: updateExpireUserTargetDate
            targetType: included
            userKey: userKey
            value: 1587582000000
            version: 0
          items:
            $ref: '#/components/schemas/patchSegmentInstruction'
          type: array
      required:
      - instructions
      type: object
    postApprovalRequestApplyRequest:
      properties:
        comment:
          type: string
      type: object
    postApprovalRequestReviewRequest:
      properties:
        kind:
          type: string
        comment:
          type: string
      type: object
    putBranch:
      properties:
        name:
          description: The branch name
          example: main
          type: string
        head:
          description: An ID representing the branch HEAD. For example, a commit SHA.
          example: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          type: string
        updateSequenceId:
          description: An optional ID used to prevent older data from overwriting
            newer data. If no sequence ID is included, the newly submitted data will
            always be saved.
          example: 25
          format: int64
          type: integer
        syncTime:
          format: int64
          type: integer
        references:
          description: An array of flag references found on the branch
          items:
            $ref: '#/components/schemas/ReferenceRep'
          type: array
      required:
      - head
      - name
      - syncTime
      type: object
    repositoryPost:
      properties:
        name:
          example: LaunchDarkly-Docs
          type: string
        sourceLink:
          example: https://github.com/launchdarkly/LaunchDarkly-Docs
          type: string
        commitUrlTemplate:
          description: A template for constructing a valid URL to view the commit
          example: /commit/${sha}
          type: string
        hunkUrlTemplate:
          description: A template for constructing a valid URL to view the hunk
          example: /blob/${sha}/${filePath}#L${lineNumber}
          type: string
        type:
          description: Optionally specify a repository type. The default value is
            <code>custom</code>
          enum:
          - github
          - bitbucket
          - custom
          example: github
          type: string
        defaultBranch:
          description: The default branch, if not specified, is <code>master</code>
          example: main
          type: string
      required:
      - name
      type: object
    requestKind:
      type: string
    sourceFlag:
      properties:
        key:
          description: Flag key to copy
          type: string
        version:
          type: integer
      required:
      - key
      type: object
    teamPatchInput:
      properties:
        Comment:
          type: string
        Instructions:
          items:
            $ref: '#/components/schemas/Instruction'
          type: array
      type: object
    teamPostInput:
      properties:
        customRoleKeys:
          description: List of custom role keys the team will access
          items:
            type: string
          type: array
        description:
          description: A description of the team
          type: string
        key:
          description: The team's key or ID
          type: string
        memberIDs:
          description: A list of member IDs who belong to the team
          items:
            type: string
          type: array
        name:
          description: A human-friendly name for the team
          type: string
        permissionGrants:
          description: A list of permission grants to apply to the team. Can use "maintainTeam"
            to add team maintainers
          items:
            $ref: '#/components/schemas/PermissionGrantInput'
          type: array
      required:
      - key
      - name
      type: object
    webhookPost:
      properties:
        name:
          description: A human-readable name for your webhook
          example: Example hook
          type: string
        url:
          description: The URL of the remote webhook
          example: http://www.example.com
          type: string
        secret:
          description: If sign is true, and the secret attribute is omitted, LaunchDarkly
            automatically generates a secret for you.
          example: frobozz
          type: string
        statements:
          items:
            $ref: '#/components/schemas/StatementPost'
          type: array
        sign:
          description: If sign is false, the webhook does not include a signature
            header, and the secret can be omitted.
          example: true
          type: boolean
        "on":
          description: Whether or not this webhook is enabled.
          example: true
          type: boolean
        tags:
          description: List of tags for this webhook
          example: []
          items:
            type: string
          type: array
      required:
      - "on"
      - sign
      - url
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: Authorization
      type: apiKey
