openapi: 3.0.0
info:
  contact:
    email: support@launchdarkly.com
    name: LaunchDarkly Technical Support Team
    url: https://support.launchdarkly.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: LaunchDarkly REST API
  version: "2.0"
servers:
- url: https://app.launchdarkly.com
security:
- ApiKey:
  - read
  - write
tags:
- name: Access tokens
- name: Account usage
- name: Approvals
- name: Audit log
- name: Code references
- name: Custom roles
- name: Data export destinations
- name: Environments
- name: Experiments
- name: Feature flags
- name: Metrics
- name: Projects
- name: Relay proxy configurations
- name: Scheduled changes
- name: Segments
- name: Team members
- name: Users
- name: User settings
- name: Webhooks
- name: Other
paths:
  /api/v2:
    get:
      description: ' Issue a `GET` request to the root resource to find all of the
        resource categories supported by the API'
      operationId: getRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/inline_response_200'
                type: object
          description: Root response
      summary: Root resource
      tags:
      - Other
  /api/v2/auditlog:
    get:
      description: ' Gets a list of all audit log entries. The query parameters let
        you restrict the results that return by date ranges, resource specifiers,
        or a full-text search query.'
      operationId: getAuditLogEntries
      parameters:
      - description: A timestamp filter, expressed as a Unix epoch time in milliseconds.  All
          entries this returns occurred before the timestamp.
        explode: true
        in: query
        name: before
        required: false
        schema:
          description: A timestamp filter, expressed as a Unix epoch time in milliseconds.  All
            entries this returns occurred before the timestamp.
          format: int64
          type: integer
        style: form
      - description: A timestamp filter, expressed as a Unix epoch time in milliseconds.
          All entries this returns occurred after the timestamp.
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: A timestamp filter, expressed as a Unix epoch time in milliseconds.
            All entries this returns occurred after the timestamp.
          format: int64
          type: integer
        style: form
      - description: Text to search for. You can search for the full or partial name
          of the resource, or full or partial email address of the member who made
          a change.
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Text to search for. You can search for the full or partial
            name of the resource, or full or partial email address of the member who
            made a change.
          format: string
          type: string
        style: form
      - description: A limit on the number of audit log entries that return. Set between
          1 and 20.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: A limit on the number of audit log entries that return. Set
            between 1 and 20.
          format: int64
          type: integer
        style: form
      - description: A resource specifier that lets you filter audit log listings
          by resource
        explode: true
        in: query
        name: spec
        required: false
        schema:
          description: A resource specifier that lets you filter audit log listings
            by resource
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntryListingRepCollection'
          description: Audit log entries response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: List audit log feature flag entries
      tags:
      - Audit log
  /api/v2/code-refs/repositories:
    get:
      description: ' Retrieves a complete list of connected repositories. Optionally,
        you can include branch metadata with the `withBranches` query parameter. Embed
        references for the default branch with `ReferencesForDefaultBranch`. You can
        also filter the list of code references by project key and flag key.'
      operationId: getRepositories
      parameters:
      - description: If set to any value, the endpoint returns repositories with associated
          branch data
        explode: true
        in: query
        name: withBranches
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data
          format: string
          type: string
        style: form
      - description: If set to any value, the endpoint returns repositories with associated
          branch data, as well as code references for the default git branch
        explode: true
        in: query
        name: withReferencesForDefaultBranch
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data, as well as code references for the default git
            branch
          format: string
          type: string
        style: form
      - description: A LaunchDarkly project key. If provided, this filters code reference
          results to the specified project.
        explode: true
        in: query
        name: projKey
        required: false
        schema:
          description: A LaunchDarkly project key. If provided, this filters code
            reference results to the specified project.
          format: string
          type: string
        style: form
      - description: If set to any value, the endpoint returns repositories with associated
          branch data, as well as code references for the default git branch
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: If set to any value, the endpoint returns repositories with
            associated branch data, as well as code references for the default git
            branch
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RepositoryCollectionRep'
          description: Repository collection response
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: List repositories
      tags:
      - Code references
    post:
      description: ' Creates a repository with the specified name'
      operationId: postRepository
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Repository response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "429":
          description: Rate limited
      summary: Create repository
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}:
    delete:
      description: ' Delete a repository with the specified name'
      operationId: deleteRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "200":
          description: Repository response
        "400":
          description: Invalid request
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Delete repository
      tags:
      - Code references
    get:
      description: ' Gets a single repository by name. You can also filter the list
        of code references by project key and flag key.'
      operationId: getRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RepositoryRep'
          description: Repository response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get repository
      tags:
      - Code references
    patch:
      description: ' Updates a repository''s settings. The request must be a valid
        JSON Patch document describing the changes to be made to the repository.'
      operationId: patchRepository
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.RepositoryRep'
          description: Repository response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Update repository
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branches:
    get:
      description: ' Gets a list of branches'
      operationId: getBranches
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BranchCollectionRep'
          description: Branch collection response
        "400":
          description: Invalid request
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: List branches
      tags:
      - Code references
  /api/v2/code-refs/repositories/{repo}/branches/{branch}:
    get:
      description: ' Gets a specific branch in a repository'
      operationId: getBranch
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.BranchRep'
          description: Branch response
        "400":
          description: Invalid request
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get branch
      tags:
      - Code references
    put:
      description: ' Creates a new branch if it doesn''t exist, or updates the branch
        if it already exists'
      operationId: putBranch
      parameters:
      - description: The repository name
        explode: false
        in: path
        name: repo
        required: true
        schema:
          description: The repository name
          format: string
          type: string
        style: simple
      - description: The url-encoded branch name
        explode: false
        in: path
        name: branch
        required: true
        schema:
          description: The url-encoded branch name
          format: string
          type: string
        style: simple
      - description: The current 40-character SHA revision of the git branch
        explode: true
        in: query
        name: head
        required: true
        schema:
          description: The current 40-character SHA revision of the git branch
          format: string
          type: string
        style: form
      - description: A unix epoch time in milliseconds specifying the time code reference
          data was generated
        explode: true
        in: query
        name: syncTime
        required: true
        schema:
          description: A unix epoch time in milliseconds specifying the time code
            reference data was generated
          format: int64
          type: integer
        style: form
      responses:
        "200":
          description: Branch response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Upsert branch
      tags:
      - Code references
  /api/v2/code-refs/statistics/{projKey}:
    get:
      description: ' Gets the number of code references across repositories for all
        flags in your project that have code references in the default branch (for
        example: master). You can optionally include the `flagKey` query parameter
        to get the number of code references across repositories for a single flag.
        This endpoint returns the number of times your flag keys are referenced in
        your repositories. You can filter to a single flag with by passing in a flag
        key.'
      operationId: getStatistics
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: true
        in: query
        name: flagKey
        required: false
        schema:
          description: The feature flag key
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.StatisticCollectionRep'
          description: Statistic collection response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get number of code references for flags
      tags:
      - Code references
  /api/v2/destinations:
    get:
      description: ' Gets a list of Data Export destinations configured across all
        projects and environments.'
      operationId: getDestinations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationCollectionRep'
          description: Destination collection response
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: List destinations
      tags:
      - Data export destinations
  /api/v2/destinations/{projKey}/{envKey}:
    post:
      description: ' Creates a new destination. The `config` body parameter represents
        the configuration parameters required for a destination type.'
      operationId: postDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationPostRep'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRep'
          description: Destination response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create data export destination
      tags:
      - Data export destinations
  /api/v2/destinations/{projKey}/{envKey}/{id}:
    delete:
      description: ' Deletes Data Export destination by ID'
      operationId: deleteDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The data export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The data export destination ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Destination response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Delete Data Export destination
      tags:
      - Data export destinations
    get:
      description: ' Gets a single Data Export destination by ID'
      operationId: getDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The Data Export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Data Export destination ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRep'
          description: Destination response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get destination
      tags:
      - Data export destinations
    patch:
      description: ' Updates a Data Export destination. This requires a JSON Patch
        representation of the modified destination.'
      operationId: patchDestination
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The Data Export destination ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The Data Export destination ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationRep'
          description: Destination response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update Data Export destination
      tags:
      - Data export destinations
  /api/v2/flag-status/{projKey}/{key}:
    get:
      description: ' Get the status for a particular feature flag across environments.'
      operationId: getFeatureFlagStatusAcrossEnvironments
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: true
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStatusRepFromEnvSummaries'
          description: Flag status across environments response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get feature flag status
      tags:
      - Feature flags
  /api/v2/flag-statuses/{projKey}/{envKey}:
    get:
      description: ' Get a list of statuses for all feature flags. The status includes
        the last time the feature flag was requested, as well as the state of the
        flags.'
      operationId: getFeatureFlagStatuses
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStatusCollectionRep'
          description: Flag Statuses collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List feature flag statuses
      tags:
      - Feature flags
  /api/v2/flag-statuses/{projKey}/{envKey}/{key}:
    get:
      description: ' Get the status for a particular feature flag.'
      operationId: getFeatureFlagStatus
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagStatusRep'
          description: Flag status response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List feature flag statuses
      tags:
      - Feature flags
  /api/v2/flags/{projKey}:
    get:
      description: ' Gets a list of all features in the given project. By default,
        each feature includes configurations for each environment. You can filter
        environments with the `env` query parameter. For example, setting `env=production`
        only returns configurations in the `production` environment. You can also
        filter feature flags by tag with the `tag` query parameter.'
      operationId: getFeatureFlags
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: false
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      - description: Filter feature flags by tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          description: Filter feature flags by tag
          format: string
          type: string
        style: form
      - description: The number of feature flags to return. Defaults to -1, which
          returns all flags.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of feature flags to return. Defaults to -1, which
            returns all flags.
          format: int64
          type: integer
        style: form
      - description: Where to start in the list. Use this with pagination. For example,
          an offset of 10 skips the first 10 items and then returns the next limit
          items.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Where to start in the list. Use this with pagination. For example,
            an offset of 10 skips the first 10 items and then returns the next limit
            items.
          format: int64
          type: integer
        style: form
      - description: A string that matches against the flags' keys and names. It is
          not case sensitive.
        explode: true
        in: query
        name: query
        required: false
        schema:
          description: A string that matches against the flags' keys and names. It
            is not case sensitive.
          format: string
          type: string
        style: form
      - description: A boolean to filter the list to archived flags. When this is
          absent, only unarchived flags will be returned.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          description: A boolean to filter the list to archived flags. When this is
            absent, only unarchived flags will be returned.
          format: boolean
          type: boolean
        style: form
      - description: By default in api version >= 1, flags will _not_ include their
          list of prerequisites, targets or rules.  Set summary=0 to include these
          fields for each flag returned.
        explode: true
        in: query
        name: summary
        required: false
        schema:
          description: By default in api version >= 1, flags will _not_ include their
            list of prerequisites, targets or rules.  Set summary=0 to include these
            fields for each flag returned.
          format: boolean
          type: boolean
        style: form
      - description: A string that lets you filter by temporary or permanent flags.
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: A string that lets you filter by temporary or permanent flags.
          format: string
          type: string
        style: form
      - description: A boolean with values of `true` or `false`. It returns any flags
          that have an attached metric.
        explode: true
        in: query
        name: hasExperiment
        required: false
        schema:
          description: A boolean with values of `true` or `false`. It returns any
            flags that have an attached metric.
          format: boolean
          type: boolean
        style: form
      - description: A boolean with values of `true` or `false`. That returns any
          flags that are currently exporting data in the specified environment. This
          includes flags that are exporting data from experiments. This filter also
          requires a `filterEnv` field, set to a valid environment key. For example,
          `filter=hasExperiment:true,filterEnv:production`.
        explode: true
        in: query
        name: hasDataExport
        required: false
        schema:
          description: A boolean with values of `true` or `false`. That returns any
            flags that are currently exporting data in the specified environment.
            This includes flags that are exporting data from experiments. This filter
            also requires a `filterEnv` field, set to a valid environment key. For
            example, `filter=hasExperiment:true,filterEnv:production`.
          format: boolean
          type: boolean
        style: form
      - description: A string with the key of a valid environment. The `filterEnv`
          field is for filters that are environment specific. If there are multiple
          environment specific filters, only declare this parameter once. For example,
          `filter=evaluated:{
        explode: true
        in: query
        name: filterEnv
        required: false
        schema:
          description: A string with the key of a valid environment. The `filterEnv`
            field is for filters that are environment specific. If there are multiple
            environment specific filters, only declare this parameter once. For example,
            `filter=evaluated:{
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagCollectionRep'
          description: Global flags collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List feature flags
      tags:
      - Feature flags
    post:
      description: ' Creates a feature flag with the given name, key, and variations'
      operationId: postFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The key of the feature flag to be cloned. The key identifies
          the flag in your code. For example, setting `clone=flagKey` copies the full
          targeting configuration for all environments, including `on/off` state,
          from the original flag to the new flag.
        explode: true
        in: query
        name: clone
        required: false
        schema:
          description: The key of the feature flag to be cloned. The key identifies
            the flag in your code. For example, setting `clone=flagKey` copies the
            full targeting configuration for all environments, including `on/off`
            state, from the original flag to the new flag.
          format: string
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalFlagRep'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create a feature flag
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{envKey}/{flagKey}/dependent-flags:
    get:
      description: ' List dependent flags across all environments for the flag specified
        in the path parameters. A dependent flag is a flag that uses another flag
        as a prerequisite.'
      operationId: getDependentFlagsByEnv
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentFlagsCollectionRep'
          description: Dependent flags collection response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List dependent feature flags by environment
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{featureFlagKey}/copy:
    post:
      description: ' Copies the feature flag configuration from one environment and
        creates a feature flag with that configuration in another environment'
      operationId: copyFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/flags.FlagCopyConfigPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Copy feature flag
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{flagKey}/dependent-flags:
    get:
      description: ' List dependent flags across all environments for the flag specified
        in the path parameters. A dependent flag is a flag that uses another flag
        as a prerequisite.'
      operationId: getDependentFlags
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEnvDependentFlagsCollectionRep'
          description: Multi environment dependent flags collection response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List dependent feature flags
      tags:
      - Feature flags
  /api/v2/flags/{projKey}/{flagKey}/experiments/{envKey}/{metricKey}/results:
    delete:
      description: ' Resets all experiment results by deleting all existing data for
        an experiment'
      operationId: resetExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The metric's key
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          description: The metric's key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Experiment results reset successfully
        "403":
          description: Forbidden
        "404":
          description: Flag or metric not found
        "429":
          description: Rate limited
      summary: Reset experiment results
      tags:
      - Experiments
  /api/v2/flags/{projKey}/{key}:
    delete:
      description: ' Deletes a feature flag in all environments. Use with caution:
        only delete feature flags your application no longer uses.'
      operationId: deleteFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete flag by key
      tags:
      - Feature flags
    get:
      description: ' Gets a single feature flag by key. By default, this returns the
        configurations for all environments. You can filter environments with the
        `env` query parameter. For example, setting `env=production` restricts the
        returned configurations to just the `production` environment.'
      operationId: getFeatureFlag
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      - description: Filter configurations by environment
        explode: true
        in: query
        name: env
        required: false
        schema:
          description: Filter configurations by environment
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get feature flag
      tags:
      - Feature flags
    patch:
      description: ' Perform a partial update to a feature'
      operationId: patchFeatureFlag
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The feature flag's key. The key identifies the flag in your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The feature flag's key. The key identifies the flag in your
            code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFlagRep'
          description: Global flag response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update feature flag
      tags:
      - Feature flags
  /api/v2/members:
    post:
      description: ' Invite one or more new team members to join an account. Each
        member will be sent an invitation. Members with "admin" or "owner" roles may
        create new members, as well as anyone with a "createMember" permission for
        "member/*". If for some reason, a member cannot be invited, the entire request
        will be rejected and no members will be invited for that request.'
      operationId: postMembers
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/InlineObject'
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberCollectionRep'
          description: Members response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Invite new members
      tags:
      - Team members
  /api/v2/members/{id}:
    delete:
      description: ' Delete a single team member by ID'
      operationId: deleteMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: '-'
      summary: Delete team member by ID
      tags:
      - Team members
    get:
      description: ' Fetch a single team member by ID'
      operationId: getMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRep'
          description: Member response JSON
      summary: Get team member by ID
      tags:
      - Team members
    patch:
      description: ' Modify a single team member by ID'
      operationId: patchMember
      parameters:
      - description: The member ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The member ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRep'
          description: Member response JSON
      summary: Modify a team member by ID
      tags:
      - Team members
  /api/v2/metrics/{projectKey}:
    get:
      description: ' Get a list of all metrics for the specified project.'
      operationId: getMetrics
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricCollectionRep'
          description: Metrics response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
      summary: List metrics
      tags:
      - Metrics
    post:
      description: ' Create a new metric in the specified project. Note that the expected
        POST body differs depending on the specified kind property.'
      operationId: postMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metrics.MetricPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Successful metric response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource specifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create metric
      tags:
      - Metrics
  /api/v2/metrics/{projectKey}/{key}:
    delete:
      description: ' Delete a metric by key.'
      operationId: deleteMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete metric
      tags:
      - Metrics
    get:
      description: ' Get information for a single metric from the specific project.'
      operationId: getMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Metric response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get metric
      tags:
      - Metrics
    patch:
      description: ' Patch a environment by key.'
      operationId: patchMetric
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricRep'
          description: Metric response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update metric
      tags:
      - Metrics
  /api/v2/openapi.json:
    get:
      description: ' The OpenAPI spec endpoint serves the latest version of the OpenAPI
        specification for LaunchDarkly''s API in json format.'
      operationId: getOpenapiSpec
      responses:
        "200":
          description: OpenAPI Spec
      summary: Gets the OpenAPI spec in json
      tags:
      - Other
  /api/v2/projects:
    get:
      description: ' Fetch all projects'
      operationId: getProjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCollectionRep'
          description: Project collection response JSON
        "401":
          description: Invalid access token
      summary: Get all projects
      tags:
      - Projects
    post:
      description: ' Create a new project with the given key and name'
      operationId: postProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRep'
          description: Successful project response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create project
      tags:
      - Projects
  /api/v2/projects/{projKey}/experiments:
    post:
      description: ' Creates a new experiment with the parameters you provide'
      operationId: postExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentSummaryRep'
          description: Successful experiment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create experiment
      tags:
      - Experiments
  /api/v2/projects/{projKey}/{flagKey}/experiments/{envKey}/{metricKey}:
    get:
      description: ' Gets detailed experiment result data'
      operationId: getExperiment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The flag key
        explode: false
        in: path
        name: flagKey
        required: true
        schema:
          description: The flag key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The metric key
        explode: false
        in: path
        name: metricKey
        required: true
        schema:
          description: The metric key
          format: string
          type: string
        style: simple
      - description: A timestamp denoting the start of the data collection period,
          expressed as a Unix epoch time in milliseconds.
        explode: true
        in: query
        name: from
        required: false
        schema:
          description: A timestamp denoting the start of the data collection period,
            expressed as a Unix epoch time in milliseconds.
          format: int64
          type: integer
        style: form
      - description: A timestamp denoting the end of the data collection period, expressed
          as a Unix epoch time in milliseconds.
        explode: true
        in: query
        name: to
        required: false
        schema:
          description: A timestamp denoting the end of the data collection period,
            expressed as a Unix epoch time in milliseconds.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentResultsRep'
          description: Experiment results response
        "400":
          description: Invalid request
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get experiment results
      tags:
      - Experiments
  /api/v2/projects/{projectKey}:
    delete:
      description: ' Delete a project by key. Caution: deleting a project will delete
        all associated environments and feature flags. You cannot delete the last
        project in an account.'
      operationId: deleteProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Unknown project key
        "429":
          description: Rate limited
      summary: Delete project by key
      tags:
      - Projects
    get:
      description: ' Fetch a single project by key.'
      operationId: getProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRep'
          description: Project response JSON
        "401":
          description: Invalid access token
        "404":
          description: Unknown project key
        "429":
          description: Rate limited
      summary: Get project by key
      tags:
      - Projects
    patch:
      description: ' Patch a project by key.'
      operationId: patchProject
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRep'
          description: Project response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Unknown project key
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Patch project by key
      tags:
      - Projects
  /api/v2/projects/{projectKey}/environments:
    post:
      description: ' Create a new environment with the given key and name'
      operationId: postEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentRep'
          description: Successful environment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create environment
      tags:
      - Environments
  /api/v2/projects/{projectKey}/environments/{environmentKey}:
    delete:
      description: ' Delete a environment by key.'
      operationId: deleteEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete environment by key
      tags:
      - Environments
    get:
      description: ' Fetch a single environment by key.'
      operationId: getEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentRep'
          description: Environment response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get environment by key
      tags:
      - Environments
    patch:
      description: ' Patch a environment by key.'
      operationId: patchEnvironment
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentRep'
          description: Environment response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Patch environment by key
      tags:
      - Environments
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/copy/environments/{environmentKey}/approval-requests-flag-copy:
    post:
      description: ' Create an approval request to copy a feature flag''s configuration
        across environments.'
      operationId: postCopyFlagConfigApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.createCopyFlagConfigApprovalRequestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "429":
          description: Rate limited
      summary: Create approval request to copy flag configurations across environments
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests:
    get:
      description: ' Get all approval requests for a feature flag'
      operationId: getApprovals
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get all approval requests
      tags:
      - Approvals
    post:
      description: ' Create an approval request for a feature flag'
      operationId: postApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.createFlagConfigApprovalRequestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "429":
          description: Rate limited
      summary: Create approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}:
    delete:
      description: ' Delete an approval request for a feature flag'
      operationId: deleteApprovalRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete approval request
      tags:
      - Approvals
    get:
      description: ' Get a single approval request for a feature flag'
      operationId: getApproval
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request response
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/apply:
    post:
      description: ' Apply approval request by either approving or declining changes.'
      operationId: postApprovalRequestApplyRequest
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.postApprovalRequestApplyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request apply response
        "400":
          description: Bad request
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Apply approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/approval-requests/{id}/reviews:
    post:
      description: ' Review approval request by either approving or declining changes.'
      operationId: postApprovalRequestReview
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The feature flag approval request ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The feature flag approval request ID
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/approvals_endpoints.postApprovalRequestReviewRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.FlagConfigApprovalRequestResponse'
          description: Successful approval request review response
        "400":
          description: Bad request
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Review approval request
      tags:
      - Approvals
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes:
    get:
      description: ' Get a list of scheduled changes that will be applied to the feature
        flag.'
      operationId: getFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesCollectionRep'
          description: Scheduled changes collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
      summary: List scheduled changes
      tags:
      - Scheduled changes
    post:
      description: ' Create scheduled changes for a feature flag. If the ignoreConficts
        query parameter is false and the new instructions would conflict with the
        current state of the feature flag or any existing scheduled changes, the request
        will fail. If the parameter is true and there are conflicts, the request will
        succeed as normal.'
      operationId: postFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: Pass in true to error on conflicts with current flag state or
          existing scheduled changes
        explode: true
        in: query
        name: ignoreConflicts
        required: false
        schema:
          description: Pass in true to error on conflicts with current flag state
            or existing scheduled changes
          format: boolean
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.PostFlagScheduledChangesInput'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesRep'
          description: Successful scheduled changes response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create scheduled changes workflow
      tags:
      - Scheduled changes
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes-conflicts:
    post:
      description: ' Compare the proposed instructions with each other and the existing
        scheduled changes to find conflicts that would prevent the existing scheduled
        changes from executing correctly if the proposed instructions were saved.
        PLEASE NOTE that this requires the WebDAV REPORT method and not the POST method.'
      operationId: getFlagConfigScheduledChangesConflicts
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.ReportFlagScheduledChangesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.ConflictResponse'
          description: Conflicts response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List conflicts for proposed instructions
      tags:
      - Scheduled changes
  /api/v2/projects/{projectKey}/flags/{featureFlagKey}/environments/{environmentKey}/scheduled-changes/{id}:
    delete:
      description: ' Delete a scheduled changes workflow'
      operationId: deleteFlagConfigScheduledChanges
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Delete scheduled changes workflow
      tags:
      - Scheduled changes
    get:
      description: ' Gets a scheduled change that will be applied to the feature flag
        by id.'
      operationId: getFeatureFlagScheduledChange
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesRep'
          description: Scheduled change response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get a scheduled change
      tags:
      - Scheduled changes
    patch:
      description: ' Update a scheduled change, overriding existing instructions with
        the new ones.'
      operationId: patchFlagConfigScheduledChange
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projectKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The feature flag's key
        explode: false
        in: path
        name: featureFlagKey
        required: true
        schema:
          description: The feature flag's key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: environmentKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The scheduled change id
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The scheduled change id
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/web.FlagScheduledChangesInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledChangesRep'
          description: Successful scheduled changes response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "405":
          description: Method not allowed
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update scheduled changes workflow
      tags:
      - Scheduled changes
  /api/v2/public-ip-list:
    get:
      description: ' The public IP endpoint provides a list of IP ranges the LaunchDarkly
        service uses. You can use this list to allow LaunchDarkly through your firewall.
        This endpoint returns a JSON object with two attributes: `addresses` and `outboundAddresses`.
        The `addresses` element contains the IP addresses LaunchDarkly''s service
        uses. The `outboundAddresses` element contains the IP addresses outgoing webhook
        notifications use. We post upcoming changes to this list in advance on our
        status page https://status.launchdarkly.com/.'
      operationId: getIps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api2.ipList'
          description: Public IP response
      summary: Gets the public IP list
      tags:
      - Other
  /api/v2/roles:
    get:
      description: ' Returns a complete list of custom roles. Custom roles let you
        create flexible policies providing fine-grained access control to everything
        in LaunchDarkly, from feature flags to goals, environments, and teams. With
        custom roles, it''s possible to enforce access policies that meet your exact
        workflow needs. Custom roles are available to customers on our enterprise
        plans. If you''re interested in learning more about our enterprise plans,
        contact sales@launchdarkly.com.'
      operationId: getCustomRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleCollectionRep'
          description: Custom roles collection response.
        "401":
          description: Invalid access token.
        "429":
          description: Rate limited
      summary: List custom roles
      tags:
      - Custom roles
    post:
      description: ' Creates a new custom role'
      operationId: postCustomRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/roles.StatementPostList'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleRep'
          description: Custom role response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Create custom role
      tags:
      - Custom roles
  /api/v2/roles/{key}:
    delete:
      description: ' Deletes a custom role by key'
      operationId: deleteCustomRole
      parameters:
      - description: The key of the custom role to delete
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom role to delete
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Delete custom role
      tags:
      - Custom roles
    get:
      description: ' Gets a single custom role by key'
      operationId: getCustomRole
      parameters:
      - description: The custom role's key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The custom role's key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleRep'
          description: Custom role response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get custom role
      tags:
      - Custom roles
    patch:
      description: ' Updates a single custom role. The request must be a valid JSON
        Patch document describing the changes to be made to the custom role.'
      operationId: patchCustomRole
      parameters:
      - description: The key of the custom role to update
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The key of the custom role to update
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomRoleRep'
          description: Custom role response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update custom role
      tags:
      - Custom roles
  /api/v2/segments/{projKey}/{envKey}:
    get:
      description: ' Gets a list of all user segments in the given project'
      operationId: getSegments
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSegmentCollectionRep'
          description: Segment collection response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
      summary: List segments
      tags:
      - Segments
    post:
      description: ' Creates a new user segment'
      operationId: postSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentRep'
          description: Segment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Create segment
      tags:
      - Segments
  /api/v2/segments/{projKey}/{envKey}/{key}:
    delete:
      description: ' Deletes a user segment'
      operationId: deleteSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Delete segment
      tags:
      - Segments
    get:
      description: ' Gets a single user segment by key'
      operationId: getSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          under one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users under one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The segment key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentRep'
          description: Segment response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get segment
      tags:
      - Segments
    patch:
      description: ' Performs a partial update to a user segment. The request body
        must be a valid JSON patch or JSON merge patch document.'
      operationId: patchSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          under one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users under one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWithComment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentRep'
          description: Segment response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Access to the requested resource was denied
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Patch segment
      tags:
      - Segments
  /api/v2/segments/{projKey}/{segmentKey}/expiring-user-targets/{envKey}:
    get:
      description: ' Gets a list of a segment''s user targets that are scheduled for
        removal'
      operationId: getExpiringUserTargetsOnSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: segmentKey
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.ExpiringUserTargetResponse'
          description: Expiring user target response
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Get expiring user targets for segment
      tags:
      - Segments
    patch:
      description: ' Updates the list of a segment''s user targets that are scheduled
        for removal'
      operationId: patchExpiringUserTargetsOnSegment
      parameters:
      - description: The project key. This connects flags within one project so you
          can manage them together.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key. This connects flags within one project so
            you can manage them together.
          format: string
          type: string
        style: simple
      - description: The environment key. This connects flag configurations and users
          within one environment so you can manage them together.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key. This connects flag configurations and
            users within one environment so you can manage them together.
          format: string
          type: string
        style: simple
      - description: The user segment key. The key identifies the user segment in
          your code.
        explode: false
        in: path
        name: segmentKey
        required: true
        schema:
          description: The user segment key. The key identifies the user segment in
            your code.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/expiring_user_targets_endpoints.patchSegmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/web.ExpiringUserTargetResponse'
          description: Expiring user target response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Update expiring user targets on segment
      tags:
      - Segments
  /api/v2/tokens:
    get:
      description: ' Fetch a list of all access tokens.'
      operationId: getTokens
      parameters:
      - description: If set to true, and the authentication access token has the 'Admin'
          role, personal access tokens for all members will be retrieved.
        explode: true
        in: query
        name: showAll
        required: false
        schema:
          description: If set to true, and the authentication access token has the
            'Admin' role, personal access tokens for all members will be retrieved.
          format: boolean
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenCollectionRep'
          description: Access token response JSON
        "401":
          description: Invalid access token
      summary: List access tokens
      tags:
      - Access tokens
    post:
      description: ' Creates a new access token.'
      operationId: postToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/access_tokens.AccessTokenPost'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "429":
          description: Rate limited
      summary: Create access token
      tags:
      - Access tokens
  /api/v2/tokens/{id}:
    delete:
      description: ' Delete an access token by ID.'
      operationId: deleteToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Delete access token
      tags:
      - Access tokens
    get:
      description: ' Get a single access token by ID.'
      operationId: getToken
      parameters:
      - description: The ID of the access token
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get access token
      tags:
      - Access tokens
    patch:
      description: ' Update an access token''s settings. The request should be a valid
        JSON Patch document describing the changes to be made to the access token.'
      operationId: patchToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSONPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Patch access token
      tags:
      - Access tokens
  /api/v2/tokens/{id}/reset:
    post:
      description: ' Reset an access token''s secret key with an optional expiry time
        for the old key.'
      operationId: resetToken
      parameters:
      - description: The ID of the access token to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The ID of the access token to update
          format: string
          type: string
        style: simple
      - description: An expiration time for the old token key, expressed as a Unix
          epoch time in milliseconds. By default, the token will expire immediately.
        explode: true
        in: query
        name: expiry
        required: false
        schema:
          description: An expiration time for the old token key, expressed as a Unix
            epoch time in milliseconds. By default, the token will expire immediately.
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRep'
          description: Access token response JSON
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Reset access token
      tags:
      - Access tokens
  /api/v2/user-search/{projKey}/{envKey}:
    get:
      description: ' Search users in LaunchDarkly based on their last active date,
        or a search query. It should not be used to enumerate all users in LaunchDarkly--
        use the List users API resource.'
      operationId: getSearchUsers
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: Full-text search for users based on name, first name, last name,
          e-mail address, or key
        explode: true
        in: query
        name: q
        required: false
        schema:
          description: Full-text search for users based on name, first name, last
            name, e-mail address, or key
          format: string
          type: string
        style: form
      - description: 'Specifies the maximum number of items in the collection to return
          (max: 50, default: 20)'
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: 'Specifies the maximum number of items in the collection to
            return (max: 50, default: 20)'
          format: int64
          type: integer
        style: form
      - description: Specifies the first item to return in the collection
        explode: true
        in: query
        name: offset
        required: false
        schema:
          description: Specifies the first item to return in the collection
          format: int64
          type: integer
        style: form
      - description: A unix epoch time in milliseconds specifying the maximum last
          time a user requested a feature flag from LaunchDarkly
        explode: true
        in: query
        name: after
        required: false
        schema:
          description: A unix epoch time in milliseconds specifying the maximum last
            time a user requested a feature flag from LaunchDarkly
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRep'
          description: Users collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: Find users
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}:
    get:
      description: ' List all users in the environment. Includes the total count of
        users. In each page, there will be up to ''limit'' users returned (default
        20). This is useful for exporting all users in the system for further analysis.
        To paginate through, follow the ''next'' link in the _links object.'
      operationId: getUsers
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The number of elements to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of elements to return per page
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRep'
          description: Users collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
      summary: List users
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}/{key}:
    delete:
      description: ' Delete a user by key'
      operationId: deleteUser
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      responses:
        "204":
          description: Action completed successfully
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "409":
          description: Status conflict
        "429":
          description: Rate limited
      summary: Delete user
      tags:
      - Users
    get:
      description: ' Get a user by key. The user object will contain all attributes
        sent in variation calls for that key.'
      operationId: getUser
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The number of elements to return per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          description: The number of elements to return per page
          format: string
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRep'
          description: User response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "403":
          description: Forbidden
        "404":
          description: Invalid resource identifier
        "429":
          description: Rate limited
        "503":
          description: Service unavailable
        "504":
          description: Service timed out
      summary: Get user
      tags:
      - Users
  /api/v2/users/{projKey}/{envKey}/{key}/flags:
    get:
      description: ' Lists the current flag settings for a given user. The most important
        attribute in the response is the _value. The _value is the setting that the
        user sees. For a boolean feature toggle, this is `true`, `false`, or `null`.
        `Null` returns if there is no defined fallthrough value. The example response
        indicates that the user Abbie_Braun has the `sort.order` flag enabled and
        the `alternate.page` flag disabled. The setting attribute indicates whether
        you''ve explicitly targeted a user to receive a particular variation. For
        example, if you have turned off a feature flag for a user, this setting will
        be `false`. A setting of `null` means that you haven''t assigned that user
        to a specific variation.'
      operationId: getUserFlagSettings
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingsCollection'
          description: User flag settings collection response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: List flag settings for user
      tags:
      - User settings
  /api/v2/users/{projKey}/{envKey}/{key}/flags/{featureKey}:
    get:
      description: ' Fetches a single flag setting for a user by key. The most important
        attribute in the response is the _value. The _value is the current setting
        that the user sees. For a boolean feature toggle, this is `true`, `false`,
        or `null`. `Null` returns if there is no defined fallthrough value. The example
        response indicates that the user Abbie_Braun has the `sort.order` flag enabled
        and the `alternate.page` flag disabled. The setting attribute indicates whether
        you''ve explicitly targeted a user to receive a particular variation. For
        example, if you have turned off a feature flag for a user, this setting will
        be `false`. A setting of `null` means that you haven''t assigned that user
        to a specific variation.'
      operationId: getUserFlagSetting
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: featureKey
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingRep'
          description: User flag settings response
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Get flag setting for user
      tags:
      - User settings
    put:
      description: ' Specifically enable or disable a feature flag for a user based
        on their key.'
      operationId: putFlagSetting
      parameters:
      - description: The project key
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key
          format: string
          type: string
        style: simple
      - description: The environment key
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key
          format: string
          type: string
        style: simple
      - description: The user key
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The user key
          format: string
          type: string
        style: simple
      - description: The feature flag key
        explode: false
        in: path
        name: featureKey
        required: true
        schema:
          description: The feature flag key
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api2.ValuePut'
        required: true
      responses:
        "204":
          description: Action completed successfully
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "404":
          description: Invalid resource specifier
        "429":
          description: Rate limited
      summary: Update flag settings for user
      tags:
      - User settings
  /segments/{projKey}/{envKey}/{key}/users:
    post:
      description: ' Update targets included or excluded in a big segment'
      operationId: updateBigSegmentTargets
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key.
          format: string
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/unbounded.SegmentUserState'
        required: true
      responses:
        "204":
          description: Action completed successfully
        "400":
          description: Invalid request body
        "401":
          description: Invalid access token
        "429":
          description: Rate limited
      summary: Update targets on a big segment
      tags:
      - Segments
  /segments/{projKey}/{envKey}/{key}/users/{userKey}:
    get:
      description: ' Get whether a given userKey is included or excluded from this
        segment.'
      operationId: getBigSegmentTarget
      parameters:
      - description: The project key.
        explode: false
        in: path
        name: projKey
        required: true
        schema:
          description: The project key.
          format: string
          type: string
        style: simple
      - description: The environment key.
        explode: false
        in: path
        name: envKey
        required: true
        schema:
          description: The environment key.
          format: string
          type: string
        style: simple
      - description: The segment key.
        explode: false
        in: path
        name: key
        required: true
        schema:
          description: The segment key.
          format: string
          type: string
        style: simple
      - description: The user key.
        explode: false
        in: path
        name: userKey
        required: true
        schema:
          description: The user key.
          format: string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segments.unboundedTargetRep'
          description: Unbounded target response
        "401":
          description: Invalid access token
        "404":
          description: Unknown segment key
        "429":
          description: Rate limited
      summary: Get user in big segment
      tags:
      - Segments
components:
  schemas:
    AccessDeniedReasonRep:
      example:
        role_name: role_name
        notActions:
        - notActions
        - notActions
        notResources:
        - '{}'
        - '{}'
        effect: effect
        resources:
        - '{}'
        - '{}'
        actions:
        - actions
        - actions
      properties:
        resources:
          items:
            properties: {}
            type: object
          type: array
        notResources:
          items:
            properties: {}
            type: object
          type: array
        actions:
          items:
            type: string
          type: array
        notActions:
          items:
            type: string
          type: array
        effect:
          type: string
        role_name:
          type: string
      type: object
    AccessDeniedRep:
      properties:
        action:
          type: string
        reason:
          $ref: '#/components/schemas/AccessDeniedReasonRep'
      type: object
    AccessRep:
      example:
        denied:
        - reason:
            role_name: role_name
            notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          action: action
        - reason:
            role_name: role_name
            notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          action: action
      properties:
        denied:
          items:
            $ref: '#/components/schemas/AccessRep_denied'
          type: array
      type: object
    AccessTokenCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - role: role
          customRoleIds:
          - customRoleIds
          - customRoleIds
          _links:
            key:
              href: href
              type: type
          description: description
          _member:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          ownerId: ownerId
          creationDate: 0
          defaultApiVersion: 1
          token: token
          inlineRole:
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          lastUsed: 5
          name: name
          _id: _id
          lastModified: 6
          serviceToken: true
          memberId: memberId
        - role: role
          customRoleIds:
          - customRoleIds
          - customRoleIds
          _links:
            key:
              href: href
              type: type
          description: description
          _member:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          ownerId: ownerId
          creationDate: 0
          defaultApiVersion: 1
          token: token
          inlineRole:
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          lastUsed: 5
          name: name
          _id: _id
          lastModified: 6
          serviceToken: true
          memberId: memberId
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccessTokenRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    AccessTokenRep:
      example:
        role: role
        customRoleIds:
        - customRoleIds
        - customRoleIds
        _links:
          key:
            href: href
            type: type
        description: description
        _member:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        ownerId: ownerId
        creationDate: 0
        defaultApiVersion: 1
        token: token
        inlineRole:
        - notActions:
          - notActions
          - notActions
          notResources:
          - '{}'
          - '{}'
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        - notActions:
          - notActions
          - notActions
          notResources:
          - '{}'
          - '{}'
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        lastUsed: 5
        name: name
        _id: _id
        lastModified: 6
        serviceToken: true
        memberId: memberId
      properties:
        _id:
          type: string
        ownerId:
          type: string
        memberId:
          type: string
        _member:
          $ref: '#/components/schemas/MemberSummaryRep'
        name:
          type: string
        description:
          type: string
        creationDate:
          format: int64
          type: integer
        lastModified:
          format: int64
          type: integer
        customRoleIds:
          items:
            type: string
          type: array
        inlineRole:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        role:
          type: string
        token:
          type: string
        serviceToken:
          type: boolean
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        defaultApiVersion:
          type: integer
        lastUsed:
          format: int64
          type: integer
      type: object
    AllVariationsSummary:
      additionalProperties:
        $ref: '#/components/schemas/VariationSummary'
      type: object
    ApprovalSettingsRep:
      example:
        serviceKind: launchdarkly
        canReviewOwnRequest: false
        Required: true
        serviceConfig: {}
        requiredApprovalTags:
        - require-approval
        bypassApprovalsForPendingChanges: false
        canApplyDeclinedChanges: false
        minNumApprovals: 1
      properties:
        Required:
          example: true
          type: boolean
        bypassApprovalsForPendingChanges:
          example: false
          type: boolean
        minNumApprovals:
          example: 1
          type: integer
        canReviewOwnRequest:
          example: false
          type: boolean
        canApplyDeclinedChanges:
          example: false
          type: boolean
        serviceKind:
          example: launchdarkly
          type: string
        serviceConfig:
          additionalProperties: {}
          example: {}
          type: object
        requiredApprovalTags:
          example:
          - require-approval
          items:
            type: string
          type: array
      required:
      - Required
      type: object
    AuditLogEntryListingRep:
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _id:
          type: string
        _accountId:
          type: string
        date:
          format: int64
          type: integer
        accesses:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep_accesses'
          type: array
        kind:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        comment:
          type: string
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
      type: object
    AuditLogEntryListingRepCollection:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - date: 0
          app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          _links:
            key:
              href: href
              type: type
          kind: kind
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          description: description
          shortDescription: shortDescription
          title: title
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - ""
            - ""
          _accountId: _accountId
          name: name
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          comment: comment
          _id: _id
          accesses:
          - resource: ""
            action: action
          - resource: ""
            action: action
        - date: 0
          app:
            _links:
              key:
                href: href
                type: type
            isScim: true
            name: name
            _id: _id
            maintainerName: maintainerName
          parent:
            _links:
              key:
                href: href
                type: type
            resource: ""
            name: name
          titleVerb: titleVerb
          _links:
            key:
              href: href
              type: type
          kind: kind
          subject:
            _links:
              key:
                href: href
                type: type
            avatarUrl: avatarUrl
            name: name
          description: description
          shortDescription: shortDescription
          title: title
          token:
            ending: ending
            _links:
              key:
                href: href
                type: type
            name: name
            _id: _id
            serviceToken: true
          target:
            _links:
              key:
                href: href
                type: type
            name: name
            resources:
            - ""
            - ""
          _accountId: _accountId
          name: name
          member:
            firstName: firstName
            lastName: lastName
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          comment: comment
          _id: _id
          accesses:
          - resource: ""
            action: action
          - resource: ""
            action: action
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRepCollection_items'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    AuthorizedAppDataRep:
      example:
        _links:
          key:
            href: href
            type: type
        isScim: true
        name: name
        _id: _id
        maintainerName: maintainerName
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _id:
          type: string
        isScim:
          type: boolean
        name:
          type: string
        maintainerName:
          type: string
      type: object
    ConfidenceIntervalRep:
      example:
        upper: 5.637376656633329
        lower: 2.3021358869347655
      properties:
        upper:
          type: number
        lower:
          type: number
      type: object
    CustomProperties:
      additionalProperties:
        $ref: '#/components/schemas/customProperty'
      type: object
    CustomRoleCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          name: name
          description: description
          _id: _id
          key: key
          policy:
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          name: name
          description: description
          _id: _id
          key: key
          policy:
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
          - notActions:
            - notActions
            - notActions
            notResources:
            - '{}'
            - '{}'
            effect: effect
            resources:
            - '{}'
            - '{}'
            actions:
            - actions
            - actions
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        items:
          items:
            $ref: '#/components/schemas/CustomRoleCollectionRep_items'
          type: array
      type: object
    CustomRoleRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        name: name
        description: description
        _id: _id
        key: key
        policy:
        - notActions:
          - notActions
          - notActions
          notResources:
          - '{}'
          - '{}'
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        - notActions:
          - notActions
          - notActions
          notResources:
          - '{}'
          - '{}'
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        name:
          type: string
        key:
          type: string
        description:
          type: string
        _id:
          type: string
        policy:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    DefaultClientSideAvailabilityPost:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingEnvironmentId:
          type: boolean
        usingMobileKey:
          type: boolean
      type: object
    DependentFlag:
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      type: object
    DependentFlagEnvironment:
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      type: object
    DependentFlagWithEnvs:
      properties:
        name:
          type: string
        key:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/DependentFlagWithEnvs_environments'
          type: array
      type: object
    DependentFlagsCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        items:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/DependentFlagWithEnvs_environments'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      type: object
    DestinationCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          _id: _id
          version: 0.8008281904610115
          config: ""
          "on": true
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          kind: kind
          name: name
          _id: _id
          version: 0.8008281904610115
          config: ""
          "on": true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        items:
          items:
            $ref: '#/components/schemas/DestinationRep'
          type: array
      type: object
    DestinationPostRep:
      example:
        kind: kinesis
        name: Example Google Pub/Sub Destination
        config: ""
        "on": true
      properties:
        name:
          description: A human-readable name for your data export destination.
          example: Example Google Pub/Sub Destination
          type: string
        kind:
          enum:
          - kinesis
          - pubsub
          type: string
        config: {}
        "on":
          type: boolean
      type: object
    DestinationRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        kind: kind
        name: name
        _id: _id
        version: 0.8008281904610115
        config: ""
        "on": true
      properties:
        _id:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        name:
          type: string
        kind:
          type: string
        version:
          type: number
        config: {}
        "on":
          type: boolean
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    EnvironmentPost:
      example:
        color: F5A623
        confirmChanges: false
        name: Test
        defaultTtl: 0
        requireComments: false
        secureMode: true
        defaultTrackEvents: false
        key: test
        tags:
        - ops
      properties:
        name:
          example: Test
          type: string
        key:
          example: test
          type: string
        color:
          example: F5A623
          type: string
        defaultTtl:
          example: 0
          type: integer
        secureMode:
          example: true
          type: boolean
        defaultTrackEvents:
          example: false
          type: boolean
        confirmChanges:
          example: false
          type: boolean
        requireComments:
          example: false
          type: boolean
        tags:
          example:
          - ops
          items:
            type: string
          type: array
      type: object
    EnvironmentRep:
      example:
        approvalSettings:
          serviceKind: launchdarkly
          canReviewOwnRequest: false
          Required: true
          serviceConfig: {}
          requiredApprovalTags:
          - require-approval
          bypassApprovalsForPendingChanges: false
          canApplyDeclinedChanges: false
          minNumApprovals: 1
        apiKey: XYZ
        color: F5A623
        _links: {}
        name: Test
        defaultTtl: 0
        _id: 57be1db38b75bf0772d11384
        mobileKey: XYZ
        secureMode: true
        defaultTrackEvents: false
        key: test
        tags:
        - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          example: {}
          type: object
        _id:
          example: 57be1db38b75bf0772d11384
          type: string
        key:
          example: test
          type: string
        name:
          example: Test
          type: string
        apiKey:
          example: XYZ
          type: string
        mobileKey:
          example: XYZ
          type: string
        color:
          example: F5A623
          type: string
        defaultTtl:
          example: 0
          type: integer
        secureMode:
          example: true
          type: boolean
        defaultTrackEvents:
          example: false
          type: boolean
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        approvalSettings:
          $ref: '#/components/schemas/ApprovalSettingsRep'
      type: object
    ExperimentAllocationRep:
      example:
        defaultVariation: 1
        canReshuffle: true
      properties:
        defaultVariation:
          type: integer
        canReshuffle:
          type: boolean
      type: object
    ExperimentEnvironmentSettingRep:
      properties:
        startDate:
          format: int64
          type: integer
        stopDate:
          format: int64
          type: integer
      type: object
    ExperimentFlagRep:
      example:
        archived: true
        site:
          href: href
          type: type
        variations:
        - name: name
          description: description
          _id: _id
          value: ""
        - name: name
          description: description
          _id: _id
          value: ""
        name: name
        links:
          key:
            href: href
            type: type
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        archived:
          type: boolean
        variations:
          items:
            $ref: '#/components/schemas/ExperimentFlagRep_variations'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        site:
          $ref: '#/components/schemas/core.Link'
      type: object
    ExperimentInfoRep:
      example:
        baselineIdx: 1
        items:
        - metricKey: metricKey
          environments:
          - environments
          - environments
          _environmentSettings:
            key:
              startDate: 7
              stopDate: 9
          _metric:
            _maintainer:
              firstName: firstName
              lastName: lastName
              role: role
              _links:
                key:
                  href: href
                  type: type
              _id: _id
              email: email
            _links:
              key:
                href: href
                type: type
            kind: kind
            _attachedFlagCount: 5
            description: description
            _creationDate: 5
            tags:
            - tags
            - tags
            maintainerId: maintainerId
            unit: unit
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - notActions
                  - notActions
                  notResources:
                  - '{}'
                  - '{}'
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - notActions
                  - notActions
                  notResources:
                  - '{}'
                  - '{}'
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
            successCriteria: 2
            _site:
              href: href
              type: type
            isNumeric: true
            eventKey: eventKey
            name: name
            _id: _id
            lastModified:
              date: 2000-01-23T04:56:07.000+00:00
            key: key
        - metricKey: metricKey
          environments:
          - environments
          - environments
          _environmentSettings:
            key:
              startDate: 7
              stopDate: 9
          _metric:
            _maintainer:
              firstName: firstName
              lastName: lastName
              role: role
              _links:
                key:
                  href: href
                  type: type
              _id: _id
              email: email
            _links:
              key:
                href: href
                type: type
            kind: kind
            _attachedFlagCount: 5
            description: description
            _creationDate: 5
            tags:
            - tags
            - tags
            maintainerId: maintainerId
            unit: unit
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - notActions
                  - notActions
                  notResources:
                  - '{}'
                  - '{}'
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - notActions
                  - notActions
                  notResources:
                  - '{}'
                  - '{}'
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
            successCriteria: 2
            _site:
              href: href
              type: type
            isNumeric: true
            eventKey: eventKey
            name: name
            _id: _id
            lastModified:
              date: 2000-01-23T04:56:07.000+00:00
            key: key
      properties:
        baselineIdx:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/ExperimentInfoRep_items'
          type: array
      type: object
    ExperimentMetadataRep:
      properties:
        key: {}
      type: object
    ExperimentPost:
      example:
        metricKey: metricKey
        eventLocation: eventLocation
        baselineIdx: 0
        flagKey: flagKey
      properties:
        flagKey:
          type: string
        metricKey:
          type: string
        baselineIdx:
          type: integer
        eventLocation:
          type: string
      type: object
    ExperimentRep:
      properties:
        metricKey:
          type: string
        _metric:
          $ref: '#/components/schemas/MetricListingRep'
        environments:
          items:
            type: string
          type: array
        _environmentSettings:
          additionalProperties:
            $ref: '#/components/schemas/ExperimentInfoRep__environmentSettings'
          type: object
      type: object
    ExperimentResultsRep:
      example:
        metadata:
        - key: ""
        - key: ""
        _links:
          key:
            href: href
            type: type
        stats:
          chi2: 1.1730742509559433
          winningVariationIdx: 4
          pValue: 7.457744773683766
          minSampleSizeMet: true
        series:
        - Time: 2
          VariationData:
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
        - Time: 2
          VariationData:
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
          - cumulativeConversionRate: 6.84685269835264
            confidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            cumulativeCount: 1
            count: 7
            cumulativeConfidenceInterval:
              upper: 5.637376656633329
              lower: 2.3021358869347655
            value: 4.145608029883936
            conversionRate: 1.4894159098541704
            cumulativeValue: 1.2315135367772556
        granularity: granularity
        totals:
        - cumulativeConversionRate: 5.962133916683182
          cumulativeCount: 6
          minSampleSize: 3
          cumulativeImpressionCount: 1
          pValue: 7.061401241503109
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          improvement: 9.301444243932576
          cumulativeValue: 0.8008281904610115
        - cumulativeConversionRate: 5.962133916683182
          cumulativeCount: 6
          minSampleSize: 3
          cumulativeImpressionCount: 1
          pValue: 7.061401241503109
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          improvement: 9.301444243932576
          cumulativeValue: 0.8008281904610115
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        metadata:
          items:
            $ref: '#/components/schemas/ExperimentResultsRep_metadata'
          type: array
        totals:
          items:
            $ref: '#/components/schemas/ExperimentResultsRep_totals'
          type: array
        series:
          items:
            $ref: '#/components/schemas/ExperimentResultsRep_series'
          type: array
        stats:
          $ref: '#/components/schemas/ExperimentStatsRep'
        granularity:
          type: string
      type: object
    ExperimentStatsRep:
      example:
        chi2: 1.1730742509559433
        winningVariationIdx: 4
        pValue: 7.457744773683766
        minSampleSizeMet: true
      properties:
        pValue:
          type: number
        chi2:
          type: number
        winningVariationIdx:
          type: integer
        minSampleSizeMet:
          type: boolean
      type: object
    ExperimentSummaryRep:
      example:
        _flag:
          archived: true
          site:
            href: href
            type: type
          variations:
          - name: name
            description: description
            _id: _id
            value: ""
          - name: name
            description: description
            _id: _id
            value: ""
          name: name
          links:
            key:
              href: href
              type: type
          key: key
        _baselineIdx: 0
        _links:
          key:
            href: href
            type: type
        _metric:
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          name: name
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          key: key
        _id: _id
        _projKey: _projKey
        _status: _status
        _stopDate: 1
        _startDate: 6
        _envKey: _envKey
      properties:
        _id:
          type: string
        _projKey:
          type: string
        _envKey:
          type: string
        _baselineIdx:
          type: integer
        _status:
          type: string
        _startDate:
          format: int64
          type: integer
        _stopDate:
          format: int64
          type: integer
        _flag:
          $ref: '#/components/schemas/ExperimentFlagRep'
        _metric:
          $ref: '#/components/schemas/MetricListingRep'
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    ExperimentTimeSeriesSlice:
      properties:
        Time:
          format: int64
          type: integer
        VariationData:
          items:
            $ref: '#/components/schemas/ExperimentTimeSeriesVariationSlice'
          type: array
      type: object
    ExperimentTimeSeriesVariationSlice:
      example:
        cumulativeConversionRate: 6.84685269835264
        confidenceInterval:
          upper: 5.637376656633329
          lower: 2.3021358869347655
        cumulativeCount: 1
        count: 7
        cumulativeConfidenceInterval:
          upper: 5.637376656633329
          lower: 2.3021358869347655
        value: 4.145608029883936
        conversionRate: 1.4894159098541704
        cumulativeValue: 1.2315135367772556
      properties:
        value:
          type: number
        count:
          format: int64
          type: integer
        cumulativeValue:
          type: number
        cumulativeCount:
          format: int64
          type: integer
        conversionRate:
          type: number
        cumulativeConversionRate:
          type: number
        confidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
        cumulativeConfidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
      type: object
    ExperimentTimeSeriesVariationSlices:
      items:
        $ref: '#/components/schemas/ExperimentTimeSeriesVariationSlice'
      type: array
    ExperimentTotalsRep:
      properties:
        cumulativeValue:
          type: number
        cumulativeCount:
          format: int64
          type: integer
        cumulativeImpressionCount:
          format: int64
          type: integer
        cumulativeConversionRate:
          type: number
        cumulativeConfidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
        pValue:
          type: number
        improvement:
          type: number
        minSampleSize:
          format: int64
          type: integer
      type: object
    FlagConfigurationRep:
      properties:
        "on":
          type: boolean
        archived:
          type: boolean
        salt:
          type: string
        sel:
          type: string
        lastModified:
          format: int64
          type: integer
        version:
          type: integer
        targets:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_targets'
          type: array
        rules:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_rules'
          type: array
        fallthrough:
          $ref: '#/components/schemas/VariationOrRolloutRep'
        offVariation:
          type: integer
        prerequisites:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_prerequisites'
          type: array
        _site:
          $ref: '#/components/schemas/core.Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        _environmentName:
          type: string
        trackEvents:
          type: boolean
        trackEventsFallthrough:
          type: boolean
        _debugEventsUntilDate:
          format: int64
          type: integer
        _summary:
          $ref: '#/components/schemas/FlagSummary'
      type: object
    FlagDefaultsRep:
      example:
        onVariation: 2
        offVariation: 4
      properties:
        onVariation:
          type: integer
        offVariation:
          type: integer
      type: object
    FlagGlobalAttributesRep:
      properties:
        name:
          type: string
        kind:
          type: string
        description:
          type: string
        key:
          type: string
        _version:
          type: integer
        creationDate:
          format: int64
          type: integer
        includeInSnippet:
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        variations:
          items:
            $ref: '#/components/schemas/VariateRep'
          type: array
        variationJsonSchema: {}
        temporary:
          type: boolean
        tags:
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        goalIds:
          items:
            type: string
          type: array
        experiments:
          $ref: '#/components/schemas/ExperimentInfoRep'
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        archived:
          type: boolean
        archivedDate:
          format: int64
          type: integer
        defaults:
          $ref: '#/components/schemas/FlagDefaultsRep'
      type: object
    FlagListingRep:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      type: object
    FlagStatusCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - lastRequested: 2000-01-23T04:56:07.000+00:00
          default: ""
          _links:
            key:
              href: href
              type: type
          name: name
        - lastRequested: 2000-01-23T04:56:07.000+00:00
          default: ""
          _links:
            key:
              href: href
              type: type
          name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        items:
          items:
            $ref: '#/components/schemas/FlagStatusRep'
          type: array
      type: object
    FlagStatusRep:
      example:
        lastRequested: 2000-01-23T04:56:07.000+00:00
        default: ""
        _links:
          key:
            href: href
            type: type
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        name:
          type: string
        lastRequested:
          format: date-time
          type: string
        default: {}
      type: object
    FlagStatusRepFromEnvSummaries:
      example:
        environments:
          key:
            lastRequested: 2000-01-23T04:56:07.000+00:00
            default: ""
            name: name
        _links:
          key:
            href: href
            type: type
        key: key
      properties:
        environments:
          additionalProperties:
            $ref: '#/components/schemas/FlagStatusRepFromEnvSummaries_environments'
          type: object
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    FlagStatusesRep:
      properties:
        name:
          type: string
        lastRequested:
          format: date-time
          type: string
        default: {}
      type: object
    FlagSummary:
      example:
        prerequisites: 8
      properties:
        prerequisites:
          type: integer
      type: object
    GlobalFlagCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 9
        items:
        - archivedDate: 3
          temporary: true
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            key:
              href: href
              type: type
          environments:
            key:
              salt: salt
              rules:
              - rollout:
                  experimentAllocation:
                    defaultVariation: 1
                    canReshuffle: true
                  seed: 4
                  variations:
                  - weight: 7
                    _untracked: true
                    variation: 6
                  - weight: 7
                    _untracked: true
                    variation: 6
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                _id: _id
                trackEvents: true
                variation: 1
              - rollout:
                  experimentAllocation:
                    defaultVariation: 1
                    canReshuffle: true
                  seed: 4
                  variations:
                  - weight: 7
                    _untracked: true
                    variation: 6
                  - weight: 7
                    _untracked: true
                    variation: 6
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                _id: _id
                trackEvents: true
                variation: 1
              version: 1
              targets:
              - values:
                - values
                - values
                variation: 1
              - values:
                - values
                - values
                variation: 1
              prerequisites:
              - key: key
                variation: 9
              - key: key
                variation: 9
              archived: true
              _debugEventsUntilDate: 6
              _summary:
                prerequisites: 8
              trackEventsFallthrough: true
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              _environmentName: _environmentName
              _site:
                href: href
                type: type
              sel: sel
              lastModified: 7
              trackEvents: true
              fallthrough:
                rollout:
                  experimentAllocation:
                    defaultVariation: 1
                    canReshuffle: true
                  seed: 4
                  variations:
                  - weight: 7
                    _untracked: true
                    variation: 6
                  - weight: 7
                    _untracked: true
                    variation: 6
                  bucketBy: bucketBy
                variation: 5
              offVariation: 9
              "on": true
          kind: kind
          experiments:
            baselineIdx: 1
            items:
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 7
                  stopDate: 9
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: name
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                key: key
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 7
                  stopDate: 9
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: name
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                key: key
          description: description
          creationDate: 6
          tags:
          - tags
          - tags
          goalIds:
          - goalIds
          - goalIds
          archived: true
          includeInSnippet: true
          maintainerId: maintainerId
          customProperties:
            key:
              name: name
              value:
              - value
              - value
          defaults:
            onVariation: 2
            offVariation: 4
          variations:
          - name: name
            description: description
            _id: _id
            value: ""
          - name: name
            description: description
            _id: _id
            value: ""
          name: name
          _version: 0
          key: key
          variationJsonSchema: ""
        - archivedDate: 3
          temporary: true
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          clientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          _links:
            key:
              href: href
              type: type
          environments:
            key:
              salt: salt
              rules:
              - rollout:
                  experimentAllocation:
                    defaultVariation: 1
                    canReshuffle: true
                  seed: 4
                  variations:
                  - weight: 7
                    _untracked: true
                    variation: 6
                  - weight: 7
                    _untracked: true
                    variation: 6
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                _id: _id
                trackEvents: true
                variation: 1
              - rollout:
                  experimentAllocation:
                    defaultVariation: 1
                    canReshuffle: true
                  seed: 4
                  variations:
                  - weight: 7
                    _untracked: true
                    variation: 6
                  - weight: 7
                    _untracked: true
                    variation: 6
                  bucketBy: bucketBy
                clauses:
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                - op: op
                  negate: true
                  values:
                  - ""
                  - ""
                  _id: _id
                  attribute: attribute
                description: description
                _id: _id
                trackEvents: true
                variation: 1
              version: 1
              targets:
              - values:
                - values
                - values
                variation: 1
              - values:
                - values
                - values
                variation: 1
              prerequisites:
              - key: key
                variation: 9
              - key: key
                variation: 9
              archived: true
              _debugEventsUntilDate: 6
              _summary:
                prerequisites: 8
              trackEventsFallthrough: true
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              _environmentName: _environmentName
              _site:
                href: href
                type: type
              sel: sel
              lastModified: 7
              trackEvents: true
              fallthrough:
                rollout:
                  experimentAllocation:
                    defaultVariation: 1
                    canReshuffle: true
                  seed: 4
                  variations:
                  - weight: 7
                    _untracked: true
                    variation: 6
                  - weight: 7
                    _untracked: true
                    variation: 6
                  bucketBy: bucketBy
                variation: 5
              offVariation: 9
              "on": true
          kind: kind
          experiments:
            baselineIdx: 1
            items:
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 7
                  stopDate: 9
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: name
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                key: key
            - metricKey: metricKey
              environments:
              - environments
              - environments
              _environmentSettings:
                key:
                  startDate: 7
                  stopDate: 9
              _metric:
                _maintainer:
                  firstName: firstName
                  lastName: lastName
                  role: role
                  _links:
                    key:
                      href: href
                      type: type
                  _id: _id
                  email: email
                _links:
                  key:
                    href: href
                    type: type
                kind: kind
                _attachedFlagCount: 5
                description: description
                _creationDate: 5
                tags:
                - tags
                - tags
                maintainerId: maintainerId
                unit: unit
                _access:
                  denied:
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                  - reason:
                      role_name: role_name
                      notActions:
                      - notActions
                      - notActions
                      notResources:
                      - '{}'
                      - '{}'
                      effect: effect
                      resources:
                      - '{}'
                      - '{}'
                      actions:
                      - actions
                      - actions
                    action: action
                successCriteria: 2
                _site:
                  href: href
                  type: type
                isNumeric: true
                eventKey: eventKey
                name: name
                _id: _id
                lastModified:
                  date: 2000-01-23T04:56:07.000+00:00
                key: key
          description: description
          creationDate: 6
          tags:
          - tags
          - tags
          goalIds:
          - goalIds
          - goalIds
          archived: true
          includeInSnippet: true
          maintainerId: maintainerId
          customProperties:
            key:
              name: name
              value:
              - value
              - value
          defaults:
            onVariation: 2
            offVariation: 4
          variations:
          - name: name
            description: description
            _id: _id
            value: ""
          - name: name
            description: description
            _id: _id
            value: ""
          name: name
          _version: 0
          key: key
          variationJsonSchema: ""
      properties:
        items:
          items:
            $ref: '#/components/schemas/GlobalFlagRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        totalCount:
          type: integer
      type: object
    GlobalFlagRep:
      example:
        archivedDate: 3
        temporary: true
        _maintainer:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        clientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        _links:
          key:
            href: href
            type: type
        environments:
          key:
            salt: salt
            rules:
            - rollout:
                experimentAllocation:
                  defaultVariation: 1
                  canReshuffle: true
                seed: 4
                variations:
                - weight: 7
                  _untracked: true
                  variation: 6
                - weight: 7
                  _untracked: true
                  variation: 6
                bucketBy: bucketBy
              clauses:
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              description: description
              _id: _id
              trackEvents: true
              variation: 1
            - rollout:
                experimentAllocation:
                  defaultVariation: 1
                  canReshuffle: true
                seed: 4
                variations:
                - weight: 7
                  _untracked: true
                  variation: 6
                - weight: 7
                  _untracked: true
                  variation: 6
                bucketBy: bucketBy
              clauses:
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              - op: op
                negate: true
                values:
                - ""
                - ""
                _id: _id
                attribute: attribute
              description: description
              _id: _id
              trackEvents: true
              variation: 1
            version: 1
            targets:
            - values:
              - values
              - values
              variation: 1
            - values:
              - values
              - values
              variation: 1
            prerequisites:
            - key: key
              variation: 9
            - key: key
              variation: 9
            archived: true
            _debugEventsUntilDate: 6
            _summary:
              prerequisites: 8
            trackEventsFallthrough: true
            _access:
              denied:
              - reason:
                  role_name: role_name
                  notActions:
                  - notActions
                  - notActions
                  notResources:
                  - '{}'
                  - '{}'
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
              - reason:
                  role_name: role_name
                  notActions:
                  - notActions
                  - notActions
                  notResources:
                  - '{}'
                  - '{}'
                  effect: effect
                  resources:
                  - '{}'
                  - '{}'
                  actions:
                  - actions
                  - actions
                action: action
            _environmentName: _environmentName
            _site:
              href: href
              type: type
            sel: sel
            lastModified: 7
            trackEvents: true
            fallthrough:
              rollout:
                experimentAllocation:
                  defaultVariation: 1
                  canReshuffle: true
                seed: 4
                variations:
                - weight: 7
                  _untracked: true
                  variation: 6
                - weight: 7
                  _untracked: true
                  variation: 6
                bucketBy: bucketBy
              variation: 5
            offVariation: 9
            "on": true
        kind: kind
        experiments:
          baselineIdx: 1
          items:
          - metricKey: metricKey
            environments:
            - environments
            - environments
            _environmentSettings:
              key:
                startDate: 7
                stopDate: 9
            _metric:
              _maintainer:
                firstName: firstName
                lastName: lastName
                role: role
                _links:
                  key:
                    href: href
                    type: type
                _id: _id
                email: email
              _links:
                key:
                  href: href
                  type: type
              kind: kind
              _attachedFlagCount: 5
              description: description
              _creationDate: 5
              tags:
              - tags
              - tags
              maintainerId: maintainerId
              unit: unit
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              successCriteria: 2
              _site:
                href: href
                type: type
              isNumeric: true
              eventKey: eventKey
              name: name
              _id: _id
              lastModified:
                date: 2000-01-23T04:56:07.000+00:00
              key: key
          - metricKey: metricKey
            environments:
            - environments
            - environments
            _environmentSettings:
              key:
                startDate: 7
                stopDate: 9
            _metric:
              _maintainer:
                firstName: firstName
                lastName: lastName
                role: role
                _links:
                  key:
                    href: href
                    type: type
                _id: _id
                email: email
              _links:
                key:
                  href: href
                  type: type
              kind: kind
              _attachedFlagCount: 5
              description: description
              _creationDate: 5
              tags:
              - tags
              - tags
              maintainerId: maintainerId
              unit: unit
              _access:
                denied:
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
                - reason:
                    role_name: role_name
                    notActions:
                    - notActions
                    - notActions
                    notResources:
                    - '{}'
                    - '{}'
                    effect: effect
                    resources:
                    - '{}'
                    - '{}'
                    actions:
                    - actions
                    - actions
                  action: action
              successCriteria: 2
              _site:
                href: href
                type: type
              isNumeric: true
              eventKey: eventKey
              name: name
              _id: _id
              lastModified:
                date: 2000-01-23T04:56:07.000+00:00
              key: key
        description: description
        creationDate: 6
        tags:
        - tags
        - tags
        goalIds:
        - goalIds
        - goalIds
        archived: true
        includeInSnippet: true
        maintainerId: maintainerId
        customProperties:
          key:
            name: name
            value:
            - value
            - value
        defaults:
          onVariation: 2
          offVariation: 4
        variations:
        - name: name
          description: description
          _id: _id
          value: ""
        - name: name
          description: description
          _id: _id
          value: ""
        name: name
        _version: 0
        key: key
        variationJsonSchema: ""
      properties:
        name:
          type: string
        kind:
          type: string
        description:
          type: string
        key:
          type: string
        _version:
          type: integer
        creationDate:
          format: int64
          type: integer
        includeInSnippet:
          type: boolean
        clientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        variations:
          items:
            $ref: '#/components/schemas/VariateRep'
          type: array
        variationJsonSchema: {}
        temporary:
          type: boolean
        tags:
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        goalIds:
          items:
            type: string
          type: array
        experiments:
          $ref: '#/components/schemas/ExperimentInfoRep'
        customProperties:
          additionalProperties:
            $ref: '#/components/schemas/customProperty'
          type: object
        archived:
          type: boolean
        archivedDate:
          format: int64
          type: integer
        defaults:
          $ref: '#/components/schemas/FlagDefaultsRep'
        environments:
          additionalProperties:
            $ref: '#/components/schemas/GlobalFlagRep_environments'
          type: object
      type: object
    GlobalSegmentCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - generation: 5
          _flags:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          _externalLink: _externalLink
          _links:
            key:
              href: href
              type: type
          description: description
          rules:
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          creationDate: 0
          version: 1
          tags:
          - tags
          - tags
          excluded:
          - excluded
          - excluded
          _unboundedMetadata:
            deleted: true
            segmentId: segmentId
            includedCount: 2
            envId: envId
            excludedCount: 7
            version: 5
          deleted: true
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _external: _external
          name: name
          unbounded: true
          included:
          - included
          - included
          key: key
        - generation: 5
          _flags:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          _externalLink: _externalLink
          _links:
            key:
              href: href
              type: type
          description: description
          rules:
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          - clauses:
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            - op: op
              negate: true
              values:
              - ""
              - ""
              _id: _id
              attribute: attribute
            weight: 6
            _id: _id
            bucketBy: bucketBy
          creationDate: 0
          version: 1
          tags:
          - tags
          - tags
          excluded:
          - excluded
          - excluded
          _unboundedMetadata:
            deleted: true
            segmentId: segmentId
            includedCount: 2
            envId: envId
            excludedCount: 7
            version: 5
          deleted: true
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _external: _external
          name: name
          unbounded: true
          included:
          - included
          - included
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/SegmentRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    JSONPatch:
      items:
        $ref: '#/components/schemas/JSONPatchElt'
      type: array
    JSONPatchElt:
      example:
        op: replace
        path: /biscuits
        value: Chocolate Digestive
      properties:
        op:
          description: The type of operation to perform
          example: replace
          type: string
        path:
          description: A JSON Pointer string specifying the part of the document to
            operate on
          example: /biscuits
          type: string
        value:
          description: A JSON value used in "add", "replace", and "test" operations
          example: Chocolate Digestive
      type: object
    LastSeenMetadata:
      example:
        tokenId: 5b52207f8ca8e631d31fdb2b
      properties:
        tokenId:
          description: The ID of the token used in the member's last session
          example: 5b52207f8ca8e631d31fdb2b
          type: string
      type: object
    MemberCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 6
        items:
        - lastName: Loblaw
          _verified: true
          role: reader
          _pendingEmail: _pendingEmail
          teams:
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          _links:
            key:
              href: href
              type: type
          mfa: mfa
          excludedDashboards:
          - excludedDashboards
          - excludedDashboards
          _lastSeenMetadata:
            tokenId: 5b52207f8ca8e631d31fdb2b
          _integrationMetadata:
            key:
              ExternalId: ExternalId
          firstName: Bob
          _pendingInvite: true
          _lastSeen: 0
          _id: 507f1f77bcf86cd799439011
          email: bob@loblaw.com
          customRoles:
          - devOps
          - backend-devs
        - lastName: Loblaw
          _verified: true
          role: reader
          _pendingEmail: _pendingEmail
          teams:
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          - name: name
            customRoleKeys:
            - customRoleKeys
            - customRoleKeys
            key: key
          _links:
            key:
              href: href
              type: type
          mfa: mfa
          excludedDashboards:
          - excludedDashboards
          - excludedDashboards
          _lastSeenMetadata:
            tokenId: 5b52207f8ca8e631d31fdb2b
          _integrationMetadata:
            key:
              ExternalId: ExternalId
          firstName: Bob
          _pendingInvite: true
          _lastSeen: 0
          _id: 507f1f77bcf86cd799439011
          email: bob@loblaw.com
          customRoles:
          - devOps
          - backend-devs
      properties:
        items:
          items:
            $ref: '#/components/schemas/MemberRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        totalCount:
          type: integer
      type: object
    MemberDataRep:
      example:
        firstName: firstName
        lastName: lastName
        _links:
          key:
            href: href
            type: type
        _id: _id
        email: email
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      type: object
    MemberRep:
      example:
        lastName: Loblaw
        _verified: true
        role: reader
        _pendingEmail: _pendingEmail
        teams:
        - name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          key: key
        - name: name
          customRoleKeys:
          - customRoleKeys
          - customRoleKeys
          key: key
        _links:
          key:
            href: href
            type: type
        mfa: mfa
        excludedDashboards:
        - excludedDashboards
        - excludedDashboards
        _lastSeenMetadata:
          tokenId: 5b52207f8ca8e631d31fdb2b
        _integrationMetadata:
          key:
            ExternalId: ExternalId
        firstName: Bob
        _pendingInvite: true
        _lastSeen: 0
        _id: 507f1f77bcf86cd799439011
        email: bob@loblaw.com
        customRoles:
        - devOps
        - backend-devs
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _id:
          description: The member's ID
          example: 507f1f77bcf86cd799439011
          type: string
        firstName:
          description: The member's first name
          example: Bob
          type: string
        lastName:
          description: The member's last name
          example: Loblaw
          type: string
        role:
          description: The member's built-in role. If the member has no custom roles,
            this role will be in effect.
          example: reader
          type: string
        email:
          description: The member's e-mail address
          example: bob@loblaw.com
          type: string
        _pendingInvite:
          description: Whether or not the member has a pending invitation
          type: boolean
        _verified:
          description: Whether or not the member's e-mail address has been verified
          type: boolean
        _pendingEmail:
          type: string
        customRoles:
          description: The set of custom roles (as keys) assigned to the member
          example:
          - devOps
          - backend-devs
          items:
            type: string
          type: array
        mfa:
          description: Whether or not multi-factor authentication is enabled for this
            member
          type: string
        excludedDashboards:
          description: Default dashboards that the team member has chosen to ignore
          items:
            type: string
          type: array
        _lastSeen:
          format: int64
          type: integer
        _lastSeenMetadata:
          $ref: '#/components/schemas/LastSeenMetadata'
        _integrationMetadata:
          additionalProperties:
            $ref: '#/components/schemas/accounts.IntegrationSubscriptionMetadata'
          type: object
        teams:
          items:
            $ref: '#/components/schemas/MemberRep_teams'
          type: array
      type: object
    MemberSummaryRep:
      example:
        firstName: firstName
        lastName: lastName
        role: role
        _links:
          key:
            href: href
            type: type
        _id: _id
        email: email
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        email:
          type: string
      type: object
    MemberTeamSummaryRep:
      properties:
        customRoleKeys:
          items:
            type: string
          type: array
        key:
          type: string
        name:
          type: string
      type: object
    MetricCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          name: name
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          key: key
        - _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          name: name
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/MetricListingRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    MetricListingRep:
      example:
        _maintainer:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        _links:
          key:
            href: href
            type: type
        kind: kind
        _attachedFlagCount: 5
        description: description
        _creationDate: 5
        tags:
        - tags
        - tags
        maintainerId: maintainerId
        unit: unit
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        successCriteria: 2
        _site:
          href: href
          type: type
        isNumeric: true
        eventKey: eventKey
        name: name
        _id: _id
        lastModified:
          date: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        _id:
          type: string
        key:
          type: string
        name:
          type: string
        kind:
          type: string
        _attachedFlagCount:
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        tags:
          items:
            type: string
          type: array
        _creationDate:
          format: int64
          type: integer
        lastModified:
          $ref: '#/components/schemas/goals.Modification'
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        description:
          type: string
        isNumeric:
          type: boolean
        successCriteria:
          type: integer
        unit:
          type: string
        eventKey:
          type: string
      type: object
    MetricRep:
      example:
        _maintainer:
          firstName: firstName
          lastName: lastName
          role: role
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        _links:
          key:
            href: href
            type: type
        kind: kind
        _attachedFlagCount: 0
        description: description
        _creationDate: 6
        isActive: true
        tags:
        - tags
        - tags
        maintainerId: maintainerId
        unit: unit
        urls:
        - null
        - null
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        successCriteria: 1
        _site:
          href: href
          type: type
        isNumeric: true
        eventKey: eventKey
        _attachedFeatures:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        name: name
        selector: selector
        _id: _id
        lastModified:
          date: 2000-01-23T04:56:07.000+00:00
        _version: 5
        key: key
      properties:
        _id:
          type: string
        key:
          type: string
        name:
          type: string
        kind:
          type: string
        _attachedFlagCount:
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        tags:
          items:
            type: string
          type: array
        _creationDate:
          format: int64
          type: integer
        lastModified:
          $ref: '#/components/schemas/goals.Modification'
        maintainerId:
          type: string
        _maintainer:
          $ref: '#/components/schemas/MemberSummaryRep'
        description:
          type: string
        isNumeric:
          type: boolean
        successCriteria:
          type: integer
        unit:
          type: string
        eventKey:
          type: string
        isActive:
          type: boolean
        _attachedFeatures:
          items:
            $ref: '#/components/schemas/DependentFlagWithEnvs_environments'
          type: array
        _version:
          type: integer
        selector:
          type: string
        urls:
          items:
            $ref: '#/components/schemas/goals.UrlMatcher'
          type: array
      type: object
    MultiEnvDependentFlagsCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        items:
        - environments:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          key: key
        - environments:
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          - _links:
              key:
                href: href
                type: type
            _site:
              href: href
              type: type
            name: name
            key: key
          name: name
          key: key
      properties:
        items:
          items:
            $ref: '#/components/schemas/MultiEnvDependentFlagsCollectionRep_items'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      type: object
    ParentResourceRep:
      example:
        _links:
          key:
            href: href
            type: type
        resource: ""
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        name:
          type: string
        resource: {}
      type: object
    PatchWithComment:
      example:
        patch:
        - op: replace
          path: /biscuits
          value: Chocolate Digestive
        - op: replace
          path: /biscuits
          value: Chocolate Digestive
        comment: comment
      properties:
        patch:
          items:
            $ref: '#/components/schemas/JSONPatchElt'
          type: array
        comment:
          type: string
      type: object
    ProjectCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - includeInSnippetByDefault: true
          _links: {}
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links: {}
            name: Test
            defaultTtl: 0
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: test
            tags:
            - ops
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links: {}
            name: Test
            defaultTtl: 0
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: test
            tags:
            - ops
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: My Project
          _id: 57be1db38b75bf0772d11383
          key: my-project
          tags:
          - ops
        - includeInSnippetByDefault: true
          _links: {}
          environments:
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links: {}
            name: Test
            defaultTtl: 0
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: test
            tags:
            - ops
          - approvalSettings:
              serviceKind: launchdarkly
              canReviewOwnRequest: false
              Required: true
              serviceConfig: {}
              requiredApprovalTags:
              - require-approval
              bypassApprovalsForPendingChanges: false
              canApplyDeclinedChanges: false
              minNumApprovals: 1
            apiKey: XYZ
            color: F5A623
            _links: {}
            name: Test
            defaultTtl: 0
            _id: 57be1db38b75bf0772d11384
            mobileKey: XYZ
            secureMode: true
            defaultTrackEvents: false
            key: test
            tags:
            - ops
          defaultClientSideAvailability:
            usingEnvironmentId: true
            usingMobileKey: true
          name: My Project
          _id: 57be1db38b75bf0772d11383
          key: my-project
          tags:
          - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        items:
          items:
            $ref: '#/components/schemas/ProjectRep'
          type: array
      type: object
    ProjectListingRep:
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          example: {}
          type: object
        _id:
          example: 57be1db38b75bf0772d11383
          type: string
        key:
          example: my-project
          type: string
        includeInSnippetByDefault:
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        name:
          example: My Project
          type: string
        tags:
          example:
          - ops
          items:
            type: string
          type: array
      type: object
    ProjectPost:
      example:
        includeInSnippetByDefault: true
        environments:
        - '{}'
        - '{}'
        defaultClientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        name: My Project
        key: my-project
        tags:
        - ops
      properties:
        name:
          example: My Project
          type: string
        key:
          example: my-project
          type: string
        includeInSnippetByDefault:
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/DefaultClientSideAvailabilityPost'
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        environments:
          items:
            type: object
          type: array
      type: object
    ProjectRep:
      example:
        includeInSnippetByDefault: true
        _links: {}
        environments:
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: false
            Required: true
            serviceConfig: {}
            requiredApprovalTags:
            - require-approval
            bypassApprovalsForPendingChanges: false
            canApplyDeclinedChanges: false
            minNumApprovals: 1
          apiKey: XYZ
          color: F5A623
          _links: {}
          name: Test
          defaultTtl: 0
          _id: 57be1db38b75bf0772d11384
          mobileKey: XYZ
          secureMode: true
          defaultTrackEvents: false
          key: test
          tags:
          - ops
        - approvalSettings:
            serviceKind: launchdarkly
            canReviewOwnRequest: false
            Required: true
            serviceConfig: {}
            requiredApprovalTags:
            - require-approval
            bypassApprovalsForPendingChanges: false
            canApplyDeclinedChanges: false
            minNumApprovals: 1
          apiKey: XYZ
          color: F5A623
          _links: {}
          name: Test
          defaultTtl: 0
          _id: 57be1db38b75bf0772d11384
          mobileKey: XYZ
          secureMode: true
          defaultTrackEvents: false
          key: test
          tags:
          - ops
        defaultClientSideAvailability:
          usingEnvironmentId: true
          usingMobileKey: true
        name: My Project
        _id: 57be1db38b75bf0772d11383
        key: my-project
        tags:
        - ops
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          example: {}
          type: object
        _id:
          example: 57be1db38b75bf0772d11383
          type: string
        key:
          example: my-project
          type: string
        includeInSnippetByDefault:
          example: true
          type: boolean
        defaultClientSideAvailability:
          $ref: '#/components/schemas/accounts.ClientSideAvailability'
        name:
          example: My Project
          type: string
        tags:
          example:
          - ops
          items:
            type: string
          type: array
        environments:
          items:
            $ref: '#/components/schemas/EnvironmentRep'
          type: array
      type: object
    PubNubDetailRep:
      properties:
        channel:
          type: string
        cipherKey:
          type: string
      type: object
    RolloutRep:
      example:
        experimentAllocation:
          defaultVariation: 1
          canReshuffle: true
        seed: 4
        variations:
        - weight: 7
          _untracked: true
          variation: 6
        - weight: 7
          _untracked: true
          variation: 6
        bucketBy: bucketBy
      properties:
        variations:
          items:
            $ref: '#/components/schemas/RolloutRep_variations'
          type: array
        experimentAllocation:
          $ref: '#/components/schemas/ExperimentAllocationRep'
        seed:
          type: integer
        bucketBy:
          type: string
      type: object
    RuleRep:
      properties:
        _id:
          type: string
        variation:
          type: integer
        rollout:
          $ref: '#/components/schemas/RolloutRep'
        clauses:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_clauses'
          type: array
        trackEvents:
          type: boolean
        description:
          type: string
      type: object
    ScheduledChangesCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - instructions:
          - null
          - null
          _maintainerId: _maintainerId
          _links:
            key:
              href: href
              type: type
          executionDate: 1
          conflicts: ""
          _id: _id
          _creationDate: 0
          _version: 6
        - instructions:
          - null
          - null
          _maintainerId: _maintainerId
          _links:
            key:
              href: href
              type: type
          executionDate: 1
          conflicts: ""
          _id: _id
          _creationDate: 0
          _version: 6
      properties:
        items:
          items:
            $ref: '#/components/schemas/ScheduledChangesRep'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    ScheduledChangesRep:
      example:
        instructions:
        - null
        - null
        _maintainerId: _maintainerId
        _links:
          key:
            href: href
            type: type
        executionDate: 1
        conflicts: ""
        _id: _id
        _creationDate: 0
        _version: 6
      properties:
        _id:
          type: string
        _creationDate:
          format: int64
          type: integer
        _maintainerId:
          type: string
        _version:
          type: integer
        executionDate:
          format: int64
          type: integer
        instructions:
          items:
            $ref: '#/components/schemas/feature_workflows.Instruction'
          type: array
        conflicts: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    SegmentRep:
      example:
        generation: 5
        _flags:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        _externalLink: _externalLink
        _links:
          key:
            href: href
            type: type
        description: description
        rules:
        - clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          weight: 6
          _id: _id
          bucketBy: bucketBy
        - clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          weight: 6
          _id: _id
          bucketBy: bucketBy
        creationDate: 0
        version: 1
        tags:
        - tags
        - tags
        excluded:
        - excluded
        - excluded
        _unboundedMetadata:
          deleted: true
          segmentId: segmentId
          includedCount: 2
          envId: envId
          excludedCount: 7
          version: 5
        deleted: true
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _external: _external
        name: name
        unbounded: true
        included:
        - included
        - included
        key: key
      properties:
        name:
          type: string
        description:
          type: string
        tags:
          items:
            type: string
          type: array
        creationDate:
          format: int64
          type: integer
        key:
          type: string
        included:
          items:
            type: string
          type: array
        excluded:
          items:
            type: string
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        rules:
          items:
            $ref: '#/components/schemas/SegmentRep_rules'
          type: array
        version:
          type: integer
        deleted:
          type: boolean
        _access:
          $ref: '#/components/schemas/AccessRep'
        _flags:
          items:
            $ref: '#/components/schemas/FlagListingRep'
          type: array
        unbounded:
          type: boolean
        generation:
          type: integer
        _unboundedMetadata:
          $ref: '#/components/schemas/unbounded.SegmentMetadata'
        _external:
          type: string
        _externalLink:
          type: string
      type: object
    SegmentRuleRep:
      properties:
        _id:
          type: string
        clauses:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_clauses'
          type: array
        weight:
          type: integer
        bucketBy:
          type: string
      type: object
    StatementRep:
      example:
        notActions:
        - notActions
        - notActions
        notResources:
        - '{}'
        - '{}'
        effect: effect
        resources:
        - '{}'
        - '{}'
        actions:
        - actions
        - actions
      properties:
        resources:
          items:
            properties: {}
            type: object
          type: array
        notResources:
          items:
            properties: {}
            type: object
          type: array
        actions:
          items:
            type: string
          type: array
        notActions:
          items:
            type: string
          type: array
        effect:
          type: string
      type: object
    SubjectDataRep:
      example:
        _links:
          key:
            href: href
            type: type
        avatarUrl: avatarUrl
        name: name
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        name:
          type: string
        avatarUrl:
          type: string
      type: object
    TargetResourceRep:
      example:
        _links:
          key:
            href: href
            type: type
        name: name
        resources:
        - ""
        - ""
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        name:
          type: string
        resources:
          items: {}
          type: array
      type: object
    TitleRep:
      properties:
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
      type: object
    TokenDataRep:
      example:
        ending: ending
        _links:
          key:
            href: href
            type: type
        name: name
        _id: _id
        serviceToken: true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _id:
          type: string
        name:
          type: string
        ending:
          type: string
        serviceToken:
          type: boolean
      type: object
    UserListRep:
      example:
        _links:
          key:
            href: href
            type: type
        totalCount: 0
        items:
        - sortValue: ""
          environmentId: environmentId
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          lastPing: 2000-01-23T04:56:07.000+00:00
          ownerId: ownerId
          user:
            country: country
            lastName: lastName
            ip: ip
            custom:
              key: ""
            avatar: avatar
            secondary: secondary
            firstName: firstName
            name: name
            anonymous: true
            privateAttrs:
            - privateAttrs
            - privateAttrs
            derived:
              key:
                lastDerived: 2000-01-23T04:56:07.000+00:00
                value: ""
            key: key
            email: email
        - sortValue: ""
          environmentId: environmentId
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key:
              href: href
              type: type
          lastPing: 2000-01-23T04:56:07.000+00:00
          ownerId: ownerId
          user:
            country: country
            lastName: lastName
            ip: ip
            custom:
              key: ""
            avatar: avatar
            secondary: secondary
            firstName: firstName
            name: name
            anonymous: true
            privateAttrs:
            - privateAttrs
            - privateAttrs
            derived:
              key:
                lastDerived: 2000-01-23T04:56:07.000+00:00
                value: ""
            key: key
            email: email
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        totalCount:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserListRep_items'
          type: array
      type: object
    UserRecord:
      properties:
        lastPing:
          format: date-time
          type: string
        environmentId:
          type: string
        ownerId:
          type: string
        user:
          $ref: '#/components/schemas/models.User'
        sortValue: {}
      type: object
    UserRep:
      example:
        sortValue: ""
        environmentId: environmentId
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        lastPing: 2000-01-23T04:56:07.000+00:00
        ownerId: ownerId
        user:
          country: country
          lastName: lastName
          ip: ip
          custom:
            key: ""
          avatar: avatar
          secondary: secondary
          firstName: firstName
          name: name
          anonymous: true
          privateAttrs:
          - privateAttrs
          - privateAttrs
          derived:
            key:
              lastDerived: 2000-01-23T04:56:07.000+00:00
              value: ""
          key: key
          email: email
      properties:
        lastPing:
          format: date-time
          type: string
        environmentId:
          type: string
        ownerId:
          type: string
        user:
          $ref: '#/components/schemas/models.User'
        sortValue: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    UserSettingRep:
      example:
        _links:
          key:
            href: href
            type: type
        _value: ""
        setting: ""
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _value: {}
        setting: {}
      type: object
    UserSettingsCollection:
      example:
        _links:
          key:
            href: href
            type: type
        items:
          key:
            _links:
              key:
                href: href
                type: type
            _value: ""
            setting: ""
      properties:
        items:
          additionalProperties:
            $ref: '#/components/schemas/UserSettingsCollection_items'
          type: object
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    VariateRep:
      example:
        name: name
        description: description
        _id: _id
        value: ""
      properties:
        _id:
          type: string
        value: {}
        description:
          type: string
        name:
          type: string
      type: object
    VariationOrRolloutRep:
      example:
        rollout:
          experimentAllocation:
            defaultVariation: 1
            canReshuffle: true
          seed: 4
          variations:
          - weight: 7
            _untracked: true
            variation: 6
          - weight: 7
            _untracked: true
            variation: 6
          bucketBy: bucketBy
        variation: 5
      properties:
        variation:
          type: integer
        rollout:
          $ref: '#/components/schemas/RolloutRep'
      type: object
    VariationSummary:
      properties:
        rules:
          type: integer
        nullRules:
          type: integer
        targets:
          type: integer
        isFallthrough:
          type: boolean
        isOff:
          type: boolean
        rollout:
          type: integer
        bucketBy:
          type: string
      type: object
    WeightedVariationRep:
      properties:
        variation:
          type: integer
        weight:
          type: integer
        _untracked:
          type: boolean
      type: object
    access_tokens.AccessTokenPost:
      properties:
        name:
          type: string
        description:
          type: string
        role:
          type: string
        customRoleIds:
          items:
            type: string
          type: array
        inlineRole:
          items:
            $ref: '#/components/schemas/access_tokens_AccessTokenPost_inlineRole'
          type: array
        serviceToken:
          type: boolean
        defaultApiVersion:
          type: integer
      type: object
    accounts.ApprovalRequestServiceKind:
      type: string
    accounts.ClientSideAvailability:
      example:
        usingEnvironmentId: true
        usingMobileKey: true
      properties:
        usingMobileKey:
          type: boolean
        usingEnvironmentId:
          type: boolean
      type: object
    accounts.IntegrationMetadata:
      additionalProperties:
        $ref: '#/components/schemas/accounts.IntegrationSubscriptionMetadata'
      type: object
    accounts.IntegrationSubscriptionMetadata:
      example:
        ExternalId: ExternalId
      properties:
        ExternalId:
          type: string
      type: object
    api.BranchCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - head: head
          syncTime: 6
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 0
        - head: head
          syncTime: 6
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 0
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        items:
          items:
            $ref: '#/components/schemas/api_BranchCollectionRep_items'
          type: array
      type: object
    api.BranchRep:
      example:
        head: head
        syncTime: 1
        references:
        - path: path
          hint: hint
          hunks:
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
        - path: path
          hint: hint
          hunks:
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
        _links:
          key: ""
        name: name
        updateSequenceId: 6
      properties:
        name:
          type: string
        head:
          type: string
        updateSequenceId:
          format: int64
          type: integer
        syncTime:
          format: int64
          type: integer
        references:
          items:
            $ref: '#/components/schemas/api_BranchCollectionRep_references'
          type: array
        _links:
          additionalProperties: {}
          type: object
      type: object
    api.HunkRep:
      properties:
        startingLineNumber:
          type: integer
        lines:
          type: string
        projKey:
          type: string
        flagKey:
          type: string
        aliases:
          items:
            type: string
          type: array
      type: object
    api.NewMemberForm:
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        customRoles:
          items:
            type: string
          type: array
      type: object
    api.ReferenceRep:
      properties:
        path:
          type: string
        hint:
          type: string
        hunks:
          items:
            $ref: '#/components/schemas/api_BranchCollectionRep_hunks'
          type: array
      type: object
    api.RepositoryCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        items:
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key: ""
          defaultBranch: defaultBranch
          name: name
          sourceLink: sourceLink
          hunkUrlTemplate: hunkUrlTemplate
          type: type
          branches:
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          commitUrlTemplate: commitUrlTemplate
          version: 0
          enabled: true
        - _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          _links:
            key: ""
          defaultBranch: defaultBranch
          name: name
          sourceLink: sourceLink
          hunkUrlTemplate: hunkUrlTemplate
          type: type
          branches:
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          - head: head
            syncTime: 1
            references:
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            - path: path
              hint: hint
              hunks:
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
              - aliases:
                - aliases
                - aliases
                startingLineNumber: 5
                lines: lines
                projKey: projKey
                flagKey: flagKey
            _links:
              key: ""
            name: name
            updateSequenceId: 6
          commitUrlTemplate: commitUrlTemplate
          version: 0
          enabled: true
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        items:
          items:
            $ref: '#/components/schemas/api_RepositoryCollectionRep_items'
          type: array
      type: object
    api.RepositoryRep:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key: ""
        defaultBranch: defaultBranch
        name: name
        sourceLink: sourceLink
        hunkUrlTemplate: hunkUrlTemplate
        type: type
        branches:
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
        commitUrlTemplate: commitUrlTemplate
        version: 0
        enabled: true
      properties:
        name:
          type: string
        sourceLink:
          type: string
        commitUrlTemplate:
          type: string
        hunkUrlTemplate:
          type: string
        type:
          type: string
        defaultBranch:
          type: string
        enabled:
          type: boolean
        version:
          type: integer
        branches:
          items:
            $ref: '#/components/schemas/api.BranchRep'
          type: array
        _links:
          additionalProperties: {}
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    api.StatisticCollectionRep:
      example:
        _links:
          key:
            href: href
            type: type
        flags:
          key:
          - '{}'
          - '{}'
      properties:
        flags:
          additionalProperties:
            items:
              properties:
                name:
                  type: string
                sourceLink:
                  type: string
                defaultBranch:
                  type: string
                enabled:
                  type: boolean
                version:
                  type: integer
                hunkCount:
                  type: integer
                _links:
                  additionalProperties:
                    properties:
                      href:
                        type: string
                      type:
                        type: string
                    type: object
                  type: object
              type: object
            type: array
          type: object
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    api.StatisticRep:
      properties:
        name:
          type: string
        sourceLink:
          type: string
        defaultBranch:
          type: string
        enabled:
          type: boolean
        version:
          type: integer
        hunkCount:
          type: integer
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
      type: object
    api2.ValuePut:
      properties:
        setting: {}
        comment:
          type: string
      type: object
    api2.ipList:
      example:
        addresses:
        - addresses
        - addresses
        outboundAddresses:
        - outboundAddresses
        - outboundAddresses
      properties:
        addresses:
          items:
            type: string
          type: array
        outboundAddresses:
          items:
            type: string
          type: array
      type: object
    approvals_endpoints.createCopyFlagConfigApprovalRequestRequest:
      properties:
        comment:
          type: string
        description:
          type: string
        notifyMemberIds:
          items:
            type: string
          type: array
        source:
          $ref: '#/components/schemas/approvals_endpoints.sourceFlag'
        includedActions:
          items:
            type: string
          type: array
        excludedActions:
          items:
            type: string
          type: array
      type: object
    approvals_endpoints.createFlagConfigApprovalRequestRequest:
      properties:
        comment:
          type: string
        description:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/feature_workflows.Instruction'
          type: array
        notifyMemberIds:
          items:
            type: string
          type: array
        executionDate:
          format: int64
          type: integer
        operatingOnId:
          type: string
      type: object
    approvals_endpoints.postApprovalRequestApplyRequest:
      properties:
        comment:
          type: string
      type: object
    approvals_endpoints.postApprovalRequestReviewRequest:
      properties:
        kind:
          type: string
        comment:
          type: string
      type: object
    approvals_endpoints.sourceFlag:
      properties:
        key:
          type: string
        version:
          type: integer
      type: object
    bson.ObjectId:
      type: string
    clauses.Clause:
      properties:
        _id:
          type: string
        attribute:
          type: string
        op:
          type: string
        values:
          items: {}
          type: array
        negate:
          type: boolean
      type: object
    clauses.Operator:
      type: string
    core.Link:
      example:
        href: href
        type: type
      properties:
        href:
          type: string
        type:
          type: string
      type: object
    customProperty:
      example:
        name: name
        value:
        - value
        - value
      properties:
        name:
          type: string
        value:
          items:
            type: string
          type: array
      type: object
    expiring_user_targets_endpoints.patchSegmentInstruction:
      properties:
        kind:
          type: string
        userKey:
          type: string
        targetType:
          type: string
        value:
          type: integer
        version:
          type: integer
      type: object
    expiring_user_targets_endpoints.patchSegmentRequest:
      properties:
        comment:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/expiring_user_targets_endpoints_patchSegmentRequest_instructions'
          type: array
      type: object
    expiring_user_targets_endpoints.requestKind:
      type: string
    feature_workflows.FeatureWorkflowId:
      type: string
    feature_workflows.Instruction:
      additionalProperties: {}
      type: object
    feature_workflows.Instructions:
      items:
        $ref: '#/components/schemas/feature_workflows.Instruction'
      type: array
    flags.FlagCopyConfigEnvironment:
      properties:
        key:
          type: string
        currentVersion:
          type: integer
      type: object
    flags.FlagCopyConfigPost:
      properties:
        source:
          $ref: '#/components/schemas/flags.FlagCopyConfigEnvironment'
        target:
          $ref: '#/components/schemas/flags.FlagCopyConfigEnvironment'
        comment:
          type: string
        includedActions:
          items:
            type: string
          type: array
        excludedActions:
          items:
            type: string
          type: array
      type: object
    flags.Prerequisite:
      properties:
        key:
          type: string
        variation:
          type: integer
      type: object
    flags.Target:
      properties:
        values:
          items:
            type: string
          type: array
        variation:
          type: integer
      type: object
    ftime.UnixMillis:
      format: int64
      type: integer
    goals.Modification:
      example:
        date: 2000-01-23T04:56:07.000+00:00
      properties:
        date:
          format: date-time
          type: string
      type: object
    goals.SuccessCriteria:
      type: integer
    goals.UrlMatcher: {}
    goals.UrlMatchers:
      items:
        $ref: '#/components/schemas/goals.UrlMatcher'
      type: array
    metrics.MetricPost:
      properties:
        key:
          type: string
        name:
          type: string
        description:
          type: string
        kind:
          description: 'One of: custom, click, pageview'
          type: string
        selector:
          description: Required for click metrics
          type: string
        urls:
          description: Required for click and pageview metrics
          items:
            $ref: '#/components/schemas/metrics_MetricPost_urls'
          type: array
        isActive:
          type: boolean
        isNumeric:
          type: boolean
        unit:
          type: string
        eventKey:
          description: Required for custom metrics
          type: string
        successCriteria:
          type: integer
        tags:
          items:
            type: string
          type: array
      type: object
    models.DerivedAttribute:
      properties:
        value: {}
        lastDerived:
          format: date-time
          type: string
      type: object
    models.User:
      example:
        country: country
        lastName: lastName
        ip: ip
        custom:
          key: ""
        avatar: avatar
        secondary: secondary
        firstName: firstName
        name: name
        anonymous: true
        privateAttrs:
        - privateAttrs
        - privateAttrs
        derived:
          key:
            lastDerived: 2000-01-23T04:56:07.000+00:00
            value: ""
        key: key
        email: email
      properties:
        key:
          type: string
        secondary:
          type: string
        ip:
          type: string
        country:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        name:
          type: string
        anonymous:
          type: boolean
        custom:
          additionalProperties: {}
          type: object
        derived:
          additionalProperties:
            $ref: '#/components/schemas/models_User_derived'
          type: object
        privateAttrs:
          items:
            type: string
          type: array
      type: object
    roles.ActionIdentifier:
      type: string
    roles.ActionList:
      properties:
        Actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        Negate:
          type: boolean
      type: object
    roles.ActionSpecifier:
      type: string
    roles.Effect:
      type: string
    roles.ResourceAccess:
      properties:
        action:
          type: string
        resource: {}
      type: object
    roles.ResourceIdentifier: {}
    roles.ResourceKind:
      type: string
    roles.ResourceList:
      properties:
        Resources:
          items:
            $ref: '#/components/schemas/roles.ResourceSpecifierImpl'
          type: array
        Negate:
          type: boolean
      type: object
    roles.ResourceSpecifier: {}
    roles.ResourceSpecifierImpl:
      properties: {}
      type: object
    roles.RoleType:
      type: string
    roles.Statement:
      properties:
        Effect:
          type: string
        Actions:
          $ref: '#/components/schemas/roles.ActionList'
        Resources:
          $ref: '#/components/schemas/roles.ResourceList'
      type: object
    roles.StatementPost:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    roles.StatementPostData:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        notActions:
          items:
            $ref: '#/components/schemas/roles.ActionSpecifier'
          type: array
        effect:
          type: string
      type: object
    roles.StatementPostList:
      items:
        $ref: '#/components/schemas/roles.StatementPost'
      type: array
    segments.unboundedTargetRep:
      example:
        excluded: true
        included: true
        userKey: userKey
      properties:
        userKey:
          type: string
        included:
          type: boolean
        excluded:
          type: boolean
      type: object
    sempatch.Instruction: {}
    sempatch.Instructions:
      items:
        $ref: '#/components/schemas/sempatch.Instruction'
      type: array
    shared.UrlPost:
      properties:
        kind:
          type: string
        url:
          type: string
        substring:
          type: string
        pattern:
          type: string
      type: object
    statement.StatementPost:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            type: string
          type: array
        notActions:
          items:
            type: string
          type: array
        effect:
          type: string
      type: object
    statement.StatementPostData:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            type: string
          type: array
        notActions:
          items:
            type: string
          type: array
        effect:
          type: string
      type: object
    unbounded.SegmentId:
      type: string
    unbounded.SegmentMetadata:
      example:
        deleted: true
        segmentId: segmentId
        includedCount: 2
        envId: envId
        excludedCount: 7
        version: 5
      properties:
        envId:
          type: string
        segmentId:
          type: string
        version:
          type: integer
        includedCount:
          type: integer
        excludedCount:
          type: integer
        deleted:
          type: boolean
      type: object
    unbounded.SegmentUserList:
      properties:
        add:
          items:
            type: string
          type: array
        remove:
          items:
            type: string
          type: array
      type: object
    unbounded.SegmentUserState:
      properties:
        included:
          $ref: '#/components/schemas/unbounded.SegmentUserList'
        excluded:
          $ref: '#/components/schemas/unbounded.SegmentUserList'
      type: object
    web.Conflict:
      properties:
        instruction:
          additionalProperties: {}
          type: object
        reason:
          type: string
      type: object
    web.ConflictResponse:
      example:
        items:
        - kind: kind
          conflicts:
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
        - kind: kind
          conflicts:
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
          - reason: reason
            pendingChangeWillFail: true
            _id: _id
      properties:
        items:
          items:
            $ref: '#/components/schemas/web_ConflictResponse_items'
          type: array
      type: object
    web.ConflictResponseConflict:
      properties:
        _id:
          type: string
        reason:
          type: string
        pendingChangeWillFail:
          type: boolean
      type: object
    web.ConflictResponseInstruction:
      properties:
        kind:
          type: string
        conflicts:
          items:
            $ref: '#/components/schemas/web_ConflictResponse_conflicts'
          type: array
      type: object
    web.CopiedFromEnv:
      example:
        version: 7
        key: key
      properties:
        key:
          type: string
        version:
          type: integer
      type: object
    web.ExpiringUserTargetError:
      properties:
        instructionIndex:
          type: integer
        message:
          type: string
      type: object
    web.ExpiringUserTargetItem:
      properties:
        _id:
          type: string
        _version:
          type: integer
        expirationDate:
          format: int64
          type: integer
        userKey:
          type: string
        targetType:
          type: string
        variationId:
          type: string
        _resourceId:
          $ref: '#/components/schemas/web.ResourceIDResponse'
      type: object
    web.ExpiringUserTargetResponse:
      example:
        failedInstructions: 5
        _links:
          key:
            href: href
            type: type
        successfulInstructions: 5
        items:
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
        - _resourceId:
            projectKey: projectKey
            kind: kind
            flagKey: flagKey
            key: key
            environmentKey: environmentKey
          variationId: variationId
          targetType: targetType
          _id: _id
          _version: 0
          userKey: userKey
          expirationDate: 6
        totalInstructions: 1
        errors:
        - instructionIndex: 2
          message: message
        - instructionIndex: 2
          message: message
      properties:
        items:
          items:
            $ref: '#/components/schemas/web_ExpiringUserTargetResponse_items'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        totalInstructions:
          type: integer
        successfulInstructions:
          type: integer
        failedInstructions:
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/web_ExpiringUserTargetResponse_errors'
          type: array
      type: object
    web.FlagConfigApprovalRequestResponse:
      example:
        allReviews:
        - kind: kind
          comment: comment
          _id: _id
          creationDate: 1
          memberId: memberId
        - kind: kind
          comment: comment
          _id: _id
          creationDate: 1
          memberId: memberId
        instructions:
        - null
        - null
        serviceKind: serviceKind
        notifyMemberIds:
        - notifyMemberIds
        - notifyMemberIds
        _links:
          key:
            href: href
            type: type
        executionDate: 5
        description: description
        appliedDate: 5
        source:
          version: 7
          key: key
        creationDate: 6
        requestorId: requestorId
        integrationMetadata:
          externalUrl: externalUrl
          externalId: externalId
          externalStatus:
            display: display
            value: value
          lastChecked: 2
        conflicts:
        - reason: reason
          instruction:
            key: ""
        - reason: reason
          instruction:
            key: ""
        reviewStatus: reviewStatus
        appliedByMemberId: appliedByMemberId
        operatingOnId: operatingOnId
        _id: _id
        _version: 0
        status: status
      properties:
        _id:
          type: string
        _version:
          type: integer
        creationDate:
          format: int64
          type: integer
        serviceKind:
          type: string
        requestorId:
          type: string
        description:
          type: string
        reviewStatus:
          type: string
        allReviews:
          items:
            $ref: '#/components/schemas/web_FlagConfigApprovalRequestResponse_allReviews'
          type: array
        notifyMemberIds:
          items:
            type: string
          type: array
        appliedDate:
          format: int64
          type: integer
        appliedByMemberId:
          type: string
        status:
          type: string
        instructions:
          items:
            $ref: '#/components/schemas/feature_workflows.Instruction'
          type: array
        conflicts:
          items:
            $ref: '#/components/schemas/web_FlagConfigApprovalRequestResponse_conflicts'
          type: array
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        executionDate:
          format: int64
          type: integer
        operatingOnId:
          type: string
        integrationMetadata:
          $ref: '#/components/schemas/web.IntegrationMetadata'
        source:
          $ref: '#/components/schemas/web.CopiedFromEnv'
      type: object
    web.FlagScheduledChangesInput:
      properties:
        Comment:
          type: string
        Instructions:
          items:
            $ref: '#/components/schemas/sempatch.Instruction'
          type: array
        ScheduledChangesWorkflowId:
          type: string
        IgnoreConflicts:
          type: boolean
      type: object
    web.IntegrationMetadata:
      example:
        externalUrl: externalUrl
        externalId: externalId
        externalStatus:
          display: display
          value: value
        lastChecked: 2
      properties:
        externalId:
          type: string
        externalStatus:
          $ref: '#/components/schemas/web.IntegrationStatus'
        externalUrl:
          type: string
        lastChecked:
          format: int64
          type: integer
      type: object
    web.IntegrationStatus:
      example:
        display: display
        value: value
      properties:
        display:
          type: string
        value:
          type: string
      type: object
    web.PostFlagScheduledChangesInput:
      properties:
        Comment:
          type: string
        ExecutionDate:
          format: int64
          type: integer
        IgnoreConflicts:
          type: boolean
        Instructions:
          items:
            $ref: '#/components/schemas/feature_workflows.Instruction'
          type: array
      type: object
    web.ReportFlagScheduledChangesInput:
      properties:
        ExecutionDate:
          format: int64
          type: integer
        ExistingScheduledChangeId:
          type: string
        Instructions:
          items:
            $ref: '#/components/schemas/sempatch.Instruction'
          type: array
      type: object
    web.ResourceIDResponse:
      example:
        projectKey: projectKey
        kind: kind
        flagKey: flagKey
        key: key
        environmentKey: environmentKey
      properties:
        kind:
          type: string
        projectKey:
          type: string
        environmentKey:
          type: string
        flagKey:
          type: string
        key:
          type: string
      type: object
    web.ReviewResponse:
      properties:
        _id:
          type: string
        kind:
          type: string
        creationDate:
          format: int64
          type: integer
        comment:
          type: string
        memberId:
          type: string
      type: object
    inline_response_200:
      example:
        href: href
        type: type
      properties:
        href:
          type: string
        type:
          type: string
      type: object
    InlineObject:
      example:
        firstName: firstName
        lastName: lastName
        password: password
        role: role
        email: email
        customRoles:
        - customRoles
        - customRoles
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        customRoles:
          items:
            type: string
          type: array
      type: object
    AccessRep_denied:
      example:
        reason:
          role_name: role_name
          notActions:
          - notActions
          - notActions
          notResources:
          - '{}'
          - '{}'
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        action: action
      properties:
        action:
          type: string
        reason:
          $ref: '#/components/schemas/AccessDeniedReasonRep'
      type: object
    AuditLogEntryListingRep_accesses:
      example:
        resource: ""
        action: action
      properties:
        action:
          type: string
        resource: {}
      type: object
    AuditLogEntryListingRepCollection_items:
      example:
        date: 0
        app:
          _links:
            key:
              href: href
              type: type
          isScim: true
          name: name
          _id: _id
          maintainerName: maintainerName
        parent:
          _links:
            key:
              href: href
              type: type
          resource: ""
          name: name
        titleVerb: titleVerb
        _links:
          key:
            href: href
            type: type
        kind: kind
        subject:
          _links:
            key:
              href: href
              type: type
          avatarUrl: avatarUrl
          name: name
        description: description
        shortDescription: shortDescription
        title: title
        token:
          ending: ending
          _links:
            key:
              href: href
              type: type
          name: name
          _id: _id
          serviceToken: true
        target:
          _links:
            key:
              href: href
              type: type
          name: name
          resources:
          - ""
          - ""
        _accountId: _accountId
        name: name
        member:
          firstName: firstName
          lastName: lastName
          _links:
            key:
              href: href
              type: type
          _id: _id
          email: email
        comment: comment
        _id: _id
        accesses:
        - resource: ""
          action: action
        - resource: ""
          action: action
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _id:
          type: string
        _accountId:
          type: string
        date:
          format: int64
          type: integer
        accesses:
          items:
            $ref: '#/components/schemas/AuditLogEntryListingRep_accesses'
          type: array
        kind:
          type: string
        name:
          type: string
        description:
          type: string
        shortDescription:
          type: string
        comment:
          type: string
        subject:
          $ref: '#/components/schemas/SubjectDataRep'
        member:
          $ref: '#/components/schemas/MemberDataRep'
        token:
          $ref: '#/components/schemas/TokenDataRep'
        app:
          $ref: '#/components/schemas/AuthorizedAppDataRep'
        titleVerb:
          type: string
        title:
          type: string
        target:
          $ref: '#/components/schemas/TargetResourceRep'
        parent:
          $ref: '#/components/schemas/ParentResourceRep'
      type: object
    CustomRoleCollectionRep_items:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        name: name
        description: description
        _id: _id
        key: key
        policy:
        - notActions:
          - notActions
          - notActions
          notResources:
          - '{}'
          - '{}'
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
        - notActions:
          - notActions
          - notActions
          notResources:
          - '{}'
          - '{}'
          effect: effect
          resources:
          - '{}'
          - '{}'
          actions:
          - actions
          - actions
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        name:
          type: string
        key:
          type: string
        description:
          type: string
        _id:
          type: string
        policy:
          items:
            $ref: '#/components/schemas/StatementRep'
          type: array
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    DependentFlagWithEnvs_environments:
      example:
        _links:
          key:
            href: href
            type: type
        _site:
          href: href
          type: type
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _site:
          $ref: '#/components/schemas/core.Link'
      type: object
    ExperimentFlagRep_variations:
      example:
        name: name
        description: description
        _id: _id
        value: ""
      properties:
        _id:
          type: string
        value: {}
        description:
          type: string
        name:
          type: string
      type: object
    ExperimentInfoRep__environmentSettings:
      example:
        startDate: 7
        stopDate: 9
      properties:
        startDate:
          format: int64
          type: integer
        stopDate:
          format: int64
          type: integer
      type: object
    ExperimentInfoRep_items:
      example:
        metricKey: metricKey
        environments:
        - environments
        - environments
        _environmentSettings:
          key:
            startDate: 7
            stopDate: 9
        _metric:
          _maintainer:
            firstName: firstName
            lastName: lastName
            role: role
            _links:
              key:
                href: href
                type: type
            _id: _id
            email: email
          _links:
            key:
              href: href
              type: type
          kind: kind
          _attachedFlagCount: 5
          description: description
          _creationDate: 5
          tags:
          - tags
          - tags
          maintainerId: maintainerId
          unit: unit
          _access:
            denied:
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
            - reason:
                role_name: role_name
                notActions:
                - notActions
                - notActions
                notResources:
                - '{}'
                - '{}'
                effect: effect
                resources:
                - '{}'
                - '{}'
                actions:
                - actions
                - actions
              action: action
          successCriteria: 2
          _site:
            href: href
            type: type
          isNumeric: true
          eventKey: eventKey
          name: name
          _id: _id
          lastModified:
            date: 2000-01-23T04:56:07.000+00:00
          key: key
      properties:
        metricKey:
          type: string
        _metric:
          $ref: '#/components/schemas/MetricListingRep'
        environments:
          items:
            type: string
          type: array
        _environmentSettings:
          additionalProperties:
            $ref: '#/components/schemas/ExperimentInfoRep__environmentSettings'
          type: object
      type: object
    ExperimentResultsRep_metadata:
      example:
        key: ""
      properties:
        key: {}
      type: object
    ExperimentResultsRep_totals:
      example:
        cumulativeConversionRate: 5.962133916683182
        cumulativeCount: 6
        minSampleSize: 3
        cumulativeImpressionCount: 1
        pValue: 7.061401241503109
        cumulativeConfidenceInterval:
          upper: 5.637376656633329
          lower: 2.3021358869347655
        improvement: 9.301444243932576
        cumulativeValue: 0.8008281904610115
      properties:
        cumulativeValue:
          type: number
        cumulativeCount:
          format: int64
          type: integer
        cumulativeImpressionCount:
          format: int64
          type: integer
        cumulativeConversionRate:
          type: number
        cumulativeConfidenceInterval:
          $ref: '#/components/schemas/ConfidenceIntervalRep'
        pValue:
          type: number
        improvement:
          type: number
        minSampleSize:
          format: int64
          type: integer
      type: object
    ExperimentResultsRep_series:
      example:
        Time: 2
        VariationData:
        - cumulativeConversionRate: 6.84685269835264
          confidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          cumulativeCount: 1
          count: 7
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          value: 4.145608029883936
          conversionRate: 1.4894159098541704
          cumulativeValue: 1.2315135367772556
        - cumulativeConversionRate: 6.84685269835264
          confidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          cumulativeCount: 1
          count: 7
          cumulativeConfidenceInterval:
            upper: 5.637376656633329
            lower: 2.3021358869347655
          value: 4.145608029883936
          conversionRate: 1.4894159098541704
          cumulativeValue: 1.2315135367772556
      properties:
        Time:
          format: int64
          type: integer
        VariationData:
          items:
            $ref: '#/components/schemas/ExperimentTimeSeriesVariationSlice'
          type: array
      type: object
    FlagConfigurationRep_targets:
      example:
        values:
        - values
        - values
        variation: 1
      properties:
        values:
          items:
            type: string
          type: array
        variation:
          type: integer
      type: object
    FlagConfigurationRep_clauses:
      example:
        op: op
        negate: true
        values:
        - ""
        - ""
        _id: _id
        attribute: attribute
      properties:
        _id:
          type: string
        attribute:
          type: string
        op:
          type: string
        values:
          items: {}
          type: array
        negate:
          type: boolean
      type: object
    FlagConfigurationRep_rules:
      example:
        rollout:
          experimentAllocation:
            defaultVariation: 1
            canReshuffle: true
          seed: 4
          variations:
          - weight: 7
            _untracked: true
            variation: 6
          - weight: 7
            _untracked: true
            variation: 6
          bucketBy: bucketBy
        clauses:
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        description: description
        _id: _id
        trackEvents: true
        variation: 1
      properties:
        _id:
          type: string
        variation:
          type: integer
        rollout:
          $ref: '#/components/schemas/RolloutRep'
        clauses:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_clauses'
          type: array
        trackEvents:
          type: boolean
        description:
          type: string
      type: object
    FlagConfigurationRep_prerequisites:
      example:
        key: key
        variation: 9
      properties:
        key:
          type: string
        variation:
          type: integer
      type: object
    FlagStatusRepFromEnvSummaries_environments:
      example:
        lastRequested: 2000-01-23T04:56:07.000+00:00
        default: ""
        name: name
      properties:
        name:
          type: string
        lastRequested:
          format: date-time
          type: string
        default: {}
      type: object
    GlobalFlagRep_environments:
      example:
        salt: salt
        rules:
        - rollout:
            experimentAllocation:
              defaultVariation: 1
              canReshuffle: true
            seed: 4
            variations:
            - weight: 7
              _untracked: true
              variation: 6
            - weight: 7
              _untracked: true
              variation: 6
            bucketBy: bucketBy
          clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          description: description
          _id: _id
          trackEvents: true
          variation: 1
        - rollout:
            experimentAllocation:
              defaultVariation: 1
              canReshuffle: true
            seed: 4
            variations:
            - weight: 7
              _untracked: true
              variation: 6
            - weight: 7
              _untracked: true
              variation: 6
            bucketBy: bucketBy
          clauses:
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          - op: op
            negate: true
            values:
            - ""
            - ""
            _id: _id
            attribute: attribute
          description: description
          _id: _id
          trackEvents: true
          variation: 1
        version: 1
        targets:
        - values:
          - values
          - values
          variation: 1
        - values:
          - values
          - values
          variation: 1
        prerequisites:
        - key: key
          variation: 9
        - key: key
          variation: 9
        archived: true
        _debugEventsUntilDate: 6
        _summary:
          prerequisites: 8
        trackEventsFallthrough: true
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _environmentName: _environmentName
        _site:
          href: href
          type: type
        sel: sel
        lastModified: 7
        trackEvents: true
        fallthrough:
          rollout:
            experimentAllocation:
              defaultVariation: 1
              canReshuffle: true
            seed: 4
            variations:
            - weight: 7
              _untracked: true
              variation: 6
            - weight: 7
              _untracked: true
              variation: 6
            bucketBy: bucketBy
          variation: 5
        offVariation: 9
        "on": true
      properties:
        "on":
          type: boolean
        archived:
          type: boolean
        salt:
          type: string
        sel:
          type: string
        lastModified:
          format: int64
          type: integer
        version:
          type: integer
        targets:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_targets'
          type: array
        rules:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_rules'
          type: array
        fallthrough:
          $ref: '#/components/schemas/VariationOrRolloutRep'
        offVariation:
          type: integer
        prerequisites:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_prerequisites'
          type: array
        _site:
          $ref: '#/components/schemas/core.Link'
        _access:
          $ref: '#/components/schemas/AccessRep'
        _environmentName:
          type: string
        trackEvents:
          type: boolean
        trackEventsFallthrough:
          type: boolean
        _debugEventsUntilDate:
          format: int64
          type: integer
        _summary:
          $ref: '#/components/schemas/FlagSummary'
      type: object
    MemberRep_teams:
      example:
        name: name
        customRoleKeys:
        - customRoleKeys
        - customRoleKeys
        key: key
      properties:
        customRoleKeys:
          items:
            type: string
          type: array
        key:
          type: string
        name:
          type: string
      type: object
    MultiEnvDependentFlagsCollectionRep_items:
      example:
        environments:
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        - _links:
            key:
              href: href
              type: type
          _site:
            href: href
            type: type
          name: name
          key: key
        name: name
        key: key
      properties:
        name:
          type: string
        key:
          type: string
        environments:
          items:
            $ref: '#/components/schemas/DependentFlagWithEnvs_environments'
          type: array
      type: object
    RolloutRep_variations:
      example:
        weight: 7
        _untracked: true
        variation: 6
      properties:
        variation:
          type: integer
        weight:
          type: integer
        _untracked:
          type: boolean
      type: object
    SegmentRep_rules:
      example:
        clauses:
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        - op: op
          negate: true
          values:
          - ""
          - ""
          _id: _id
          attribute: attribute
        weight: 6
        _id: _id
        bucketBy: bucketBy
      properties:
        _id:
          type: string
        clauses:
          items:
            $ref: '#/components/schemas/FlagConfigurationRep_clauses'
          type: array
        weight:
          type: integer
        bucketBy:
          type: string
      type: object
    UserListRep_items:
      example:
        sortValue: ""
        environmentId: environmentId
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key:
            href: href
            type: type
        lastPing: 2000-01-23T04:56:07.000+00:00
        ownerId: ownerId
        user:
          country: country
          lastName: lastName
          ip: ip
          custom:
            key: ""
          avatar: avatar
          secondary: secondary
          firstName: firstName
          name: name
          anonymous: true
          privateAttrs:
          - privateAttrs
          - privateAttrs
          derived:
            key:
              lastDerived: 2000-01-23T04:56:07.000+00:00
              value: ""
          key: key
          email: email
      properties:
        lastPing:
          format: date-time
          type: string
        environmentId:
          type: string
        ownerId:
          type: string
        user:
          $ref: '#/components/schemas/models.User'
        sortValue: {}
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    UserSettingsCollection_items:
      example:
        _links:
          key:
            href: href
            type: type
        _value: ""
        setting: ""
      properties:
        _links:
          additionalProperties:
            $ref: '#/components/schemas/inline_response_200'
          type: object
        _value: {}
        setting: {}
      type: object
    access_tokens_AccessTokenPost_inlineRole:
      properties:
        resources:
          items:
            type: string
          type: array
        notResources:
          items:
            type: string
          type: array
        actions:
          items:
            type: string
          type: array
        notActions:
          items:
            type: string
          type: array
        effect:
          type: string
      type: object
    api_BranchCollectionRep_hunks:
      example:
        aliases:
        - aliases
        - aliases
        startingLineNumber: 5
        lines: lines
        projKey: projKey
        flagKey: flagKey
      properties:
        startingLineNumber:
          type: integer
        lines:
          type: string
        projKey:
          type: string
        flagKey:
          type: string
        aliases:
          items:
            type: string
          type: array
      type: object
    api_BranchCollectionRep_references:
      example:
        path: path
        hint: hint
        hunks:
        - aliases:
          - aliases
          - aliases
          startingLineNumber: 5
          lines: lines
          projKey: projKey
          flagKey: flagKey
        - aliases:
          - aliases
          - aliases
          startingLineNumber: 5
          lines: lines
          projKey: projKey
          flagKey: flagKey
      properties:
        path:
          type: string
        hint:
          type: string
        hunks:
          items:
            $ref: '#/components/schemas/api_BranchCollectionRep_hunks'
          type: array
      type: object
    api_BranchCollectionRep_items:
      example:
        head: head
        syncTime: 6
        references:
        - path: path
          hint: hint
          hunks:
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
        - path: path
          hint: hint
          hunks:
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
          - aliases:
            - aliases
            - aliases
            startingLineNumber: 5
            lines: lines
            projKey: projKey
            flagKey: flagKey
        _links:
          key: ""
        name: name
        updateSequenceId: 0
      properties:
        name:
          type: string
        head:
          type: string
        updateSequenceId:
          format: int64
          type: integer
        syncTime:
          format: int64
          type: integer
        references:
          items:
            $ref: '#/components/schemas/api_BranchCollectionRep_references'
          type: array
        _links:
          additionalProperties: {}
          type: object
      type: object
    api_RepositoryCollectionRep_items:
      example:
        _access:
          denied:
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
          - reason:
              role_name: role_name
              notActions:
              - notActions
              - notActions
              notResources:
              - '{}'
              - '{}'
              effect: effect
              resources:
              - '{}'
              - '{}'
              actions:
              - actions
              - actions
            action: action
        _links:
          key: ""
        defaultBranch: defaultBranch
        name: name
        sourceLink: sourceLink
        hunkUrlTemplate: hunkUrlTemplate
        type: type
        branches:
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
        - head: head
          syncTime: 1
          references:
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          - path: path
            hint: hint
            hunks:
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
            - aliases:
              - aliases
              - aliases
              startingLineNumber: 5
              lines: lines
              projKey: projKey
              flagKey: flagKey
          _links:
            key: ""
          name: name
          updateSequenceId: 6
        commitUrlTemplate: commitUrlTemplate
        version: 0
        enabled: true
      properties:
        name:
          type: string
        sourceLink:
          type: string
        commitUrlTemplate:
          type: string
        hunkUrlTemplate:
          type: string
        type:
          type: string
        defaultBranch:
          type: string
        enabled:
          type: boolean
        version:
          type: integer
        branches:
          items:
            $ref: '#/components/schemas/api.BranchRep'
          type: array
        _links:
          additionalProperties: {}
          type: object
        _access:
          $ref: '#/components/schemas/AccessRep'
      type: object
    expiring_user_targets_endpoints_patchSegmentRequest_instructions:
      properties:
        kind:
          type: string
        userKey:
          type: string
        targetType:
          type: string
        value:
          type: integer
        version:
          type: integer
      type: object
    metrics_MetricPost_urls:
      properties:
        kind:
          type: string
        url:
          type: string
        substring:
          type: string
        pattern:
          type: string
      type: object
    models_User_derived:
      example:
        lastDerived: 2000-01-23T04:56:07.000+00:00
        value: ""
      properties:
        value: {}
        lastDerived:
          format: date-time
          type: string
      type: object
    web_ConflictResponse_conflicts:
      example:
        reason: reason
        pendingChangeWillFail: true
        _id: _id
      properties:
        _id:
          type: string
        reason:
          type: string
        pendingChangeWillFail:
          type: boolean
      type: object
    web_ConflictResponse_items:
      example:
        kind: kind
        conflicts:
        - reason: reason
          pendingChangeWillFail: true
          _id: _id
        - reason: reason
          pendingChangeWillFail: true
          _id: _id
      properties:
        kind:
          type: string
        conflicts:
          items:
            $ref: '#/components/schemas/web_ConflictResponse_conflicts'
          type: array
      type: object
    web_ExpiringUserTargetResponse_items:
      example:
        _resourceId:
          projectKey: projectKey
          kind: kind
          flagKey: flagKey
          key: key
          environmentKey: environmentKey
        variationId: variationId
        targetType: targetType
        _id: _id
        _version: 0
        userKey: userKey
        expirationDate: 6
      properties:
        _id:
          type: string
        _version:
          type: integer
        expirationDate:
          format: int64
          type: integer
        userKey:
          type: string
        targetType:
          type: string
        variationId:
          type: string
        _resourceId:
          $ref: '#/components/schemas/web.ResourceIDResponse'
      type: object
    web_ExpiringUserTargetResponse_errors:
      example:
        instructionIndex: 2
        message: message
      properties:
        instructionIndex:
          type: integer
        message:
          type: string
      type: object
    web_FlagConfigApprovalRequestResponse_allReviews:
      example:
        kind: kind
        comment: comment
        _id: _id
        creationDate: 1
        memberId: memberId
      properties:
        _id:
          type: string
        kind:
          type: string
        creationDate:
          format: int64
          type: integer
        comment:
          type: string
        memberId:
          type: string
      type: object
    web_FlagConfigApprovalRequestResponse_conflicts:
      example:
        reason: reason
        instruction:
          key: ""
      properties:
        instruction:
          additionalProperties: {}
          type: object
        reason:
          type: string
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: Authorization
      type: apiKey
