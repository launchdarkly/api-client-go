/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// AuthorizedAppDataRep struct for AuthorizedAppDataRep
type AuthorizedAppDataRep struct {
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	Id *string `json:"_id,omitempty"`
	IsScim *bool `json:"isScim,omitempty"`
	Name *string `json:"name,omitempty"`
	MaintainerName *string `json:"maintainerName,omitempty"`
}

// NewAuthorizedAppDataRep instantiates a new AuthorizedAppDataRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizedAppDataRep() *AuthorizedAppDataRep {
	this := AuthorizedAppDataRep{}
	return &this
}

// NewAuthorizedAppDataRepWithDefaults instantiates a new AuthorizedAppDataRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizedAppDataRepWithDefaults() *AuthorizedAppDataRep {
	this := AuthorizedAppDataRep{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizedAppDataRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedAppDataRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizedAppDataRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *AuthorizedAppDataRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthorizedAppDataRep) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedAppDataRep) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthorizedAppDataRep) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthorizedAppDataRep) SetId(v string) {
	o.Id = &v
}

// GetIsScim returns the IsScim field value if set, zero value otherwise.
func (o *AuthorizedAppDataRep) GetIsScim() bool {
	if o == nil || o.IsScim == nil {
		var ret bool
		return ret
	}
	return *o.IsScim
}

// GetIsScimOk returns a tuple with the IsScim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedAppDataRep) GetIsScimOk() (*bool, bool) {
	if o == nil || o.IsScim == nil {
		return nil, false
	}
	return o.IsScim, true
}

// HasIsScim returns a boolean if a field has been set.
func (o *AuthorizedAppDataRep) HasIsScim() bool {
	if o != nil && o.IsScim != nil {
		return true
	}

	return false
}

// SetIsScim gets a reference to the given bool and assigns it to the IsScim field.
func (o *AuthorizedAppDataRep) SetIsScim(v bool) {
	o.IsScim = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthorizedAppDataRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedAppDataRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthorizedAppDataRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthorizedAppDataRep) SetName(v string) {
	o.Name = &v
}

// GetMaintainerName returns the MaintainerName field value if set, zero value otherwise.
func (o *AuthorizedAppDataRep) GetMaintainerName() string {
	if o == nil || o.MaintainerName == nil {
		var ret string
		return ret
	}
	return *o.MaintainerName
}

// GetMaintainerNameOk returns a tuple with the MaintainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizedAppDataRep) GetMaintainerNameOk() (*string, bool) {
	if o == nil || o.MaintainerName == nil {
		return nil, false
	}
	return o.MaintainerName, true
}

// HasMaintainerName returns a boolean if a field has been set.
func (o *AuthorizedAppDataRep) HasMaintainerName() bool {
	if o != nil && o.MaintainerName != nil {
		return true
	}

	return false
}

// SetMaintainerName gets a reference to the given string and assigns it to the MaintainerName field.
func (o *AuthorizedAppDataRep) SetMaintainerName(v string) {
	o.MaintainerName = &v
}

func (o AuthorizedAppDataRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.IsScim != nil {
		toSerialize["isScim"] = o.IsScim
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.MaintainerName != nil {
		toSerialize["maintainerName"] = o.MaintainerName
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizedAppDataRep struct {
	value *AuthorizedAppDataRep
	isSet bool
}

func (v NullableAuthorizedAppDataRep) Get() *AuthorizedAppDataRep {
	return v.value
}

func (v *NullableAuthorizedAppDataRep) Set(val *AuthorizedAppDataRep) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizedAppDataRep) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizedAppDataRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizedAppDataRep(val *AuthorizedAppDataRep) *NullableAuthorizedAppDataRep {
	return &NullableAuthorizedAppDataRep{value: val, isSet: true}
}

func (v NullableAuthorizedAppDataRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizedAppDataRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


