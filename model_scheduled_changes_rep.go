/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ScheduledChangesRep struct for ScheduledChangesRep
type ScheduledChangesRep struct {
	Id *string `json:"_id,omitempty"`
	CreationDate *int64 `json:"_creationDate,omitempty"`
	MaintainerId *string `json:"_maintainerId,omitempty"`
	Version *int32 `json:"_version,omitempty"`
	ExecutionDate *int64 `json:"executionDate,omitempty"`
	Instructions *[]map[string]interface{} `json:"instructions,omitempty"`
	Conflicts interface{} `json:"conflicts,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
}

// NewScheduledChangesRep instantiates a new ScheduledChangesRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledChangesRep() *ScheduledChangesRep {
	this := ScheduledChangesRep{}
	return &this
}

// NewScheduledChangesRepWithDefaults instantiates a new ScheduledChangesRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledChangesRepWithDefaults() *ScheduledChangesRep {
	this := ScheduledChangesRep{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScheduledChangesRep) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledChangesRep) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ScheduledChangesRep) SetId(v string) {
	o.Id = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ScheduledChangesRep) GetCreationDate() int64 {
	if o == nil || o.CreationDate == nil {
		var ret int64
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledChangesRep) GetCreationDateOk() (*int64, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int64 and assigns it to the CreationDate field.
func (o *ScheduledChangesRep) SetCreationDate(v int64) {
	o.CreationDate = &v
}

// GetMaintainerId returns the MaintainerId field value if set, zero value otherwise.
func (o *ScheduledChangesRep) GetMaintainerId() string {
	if o == nil || o.MaintainerId == nil {
		var ret string
		return ret
	}
	return *o.MaintainerId
}

// GetMaintainerIdOk returns a tuple with the MaintainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledChangesRep) GetMaintainerIdOk() (*string, bool) {
	if o == nil || o.MaintainerId == nil {
		return nil, false
	}
	return o.MaintainerId, true
}

// HasMaintainerId returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasMaintainerId() bool {
	if o != nil && o.MaintainerId != nil {
		return true
	}

	return false
}

// SetMaintainerId gets a reference to the given string and assigns it to the MaintainerId field.
func (o *ScheduledChangesRep) SetMaintainerId(v string) {
	o.MaintainerId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ScheduledChangesRep) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledChangesRep) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ScheduledChangesRep) SetVersion(v int32) {
	o.Version = &v
}

// GetExecutionDate returns the ExecutionDate field value if set, zero value otherwise.
func (o *ScheduledChangesRep) GetExecutionDate() int64 {
	if o == nil || o.ExecutionDate == nil {
		var ret int64
		return ret
	}
	return *o.ExecutionDate
}

// GetExecutionDateOk returns a tuple with the ExecutionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledChangesRep) GetExecutionDateOk() (*int64, bool) {
	if o == nil || o.ExecutionDate == nil {
		return nil, false
	}
	return o.ExecutionDate, true
}

// HasExecutionDate returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasExecutionDate() bool {
	if o != nil && o.ExecutionDate != nil {
		return true
	}

	return false
}

// SetExecutionDate gets a reference to the given int64 and assigns it to the ExecutionDate field.
func (o *ScheduledChangesRep) SetExecutionDate(v int64) {
	o.ExecutionDate = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *ScheduledChangesRep) GetInstructions() []map[string]interface{} {
	if o == nil || o.Instructions == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledChangesRep) GetInstructionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Instructions == nil {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasInstructions() bool {
	if o != nil && o.Instructions != nil {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given []map[string]interface{} and assigns it to the Instructions field.
func (o *ScheduledChangesRep) SetInstructions(v []map[string]interface{}) {
	o.Instructions = &v
}

// GetConflicts returns the Conflicts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScheduledChangesRep) GetConflicts() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Conflicts
}

// GetConflictsOk returns a tuple with the Conflicts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScheduledChangesRep) GetConflictsOk() (*interface{}, bool) {
	if o == nil || o.Conflicts == nil {
		return nil, false
	}
	return &o.Conflicts, true
}

// HasConflicts returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasConflicts() bool {
	if o != nil && o.Conflicts != nil {
		return true
	}

	return false
}

// SetConflicts gets a reference to the given interface{} and assigns it to the Conflicts field.
func (o *ScheduledChangesRep) SetConflicts(v interface{}) {
	o.Conflicts = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ScheduledChangesRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledChangesRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ScheduledChangesRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *ScheduledChangesRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

func (o ScheduledChangesRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.CreationDate != nil {
		toSerialize["_creationDate"] = o.CreationDate
	}
	if o.MaintainerId != nil {
		toSerialize["_maintainerId"] = o.MaintainerId
	}
	if o.Version != nil {
		toSerialize["_version"] = o.Version
	}
	if o.ExecutionDate != nil {
		toSerialize["executionDate"] = o.ExecutionDate
	}
	if o.Instructions != nil {
		toSerialize["instructions"] = o.Instructions
	}
	if o.Conflicts != nil {
		toSerialize["conflicts"] = o.Conflicts
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableScheduledChangesRep struct {
	value *ScheduledChangesRep
	isSet bool
}

func (v NullableScheduledChangesRep) Get() *ScheduledChangesRep {
	return v.value
}

func (v *NullableScheduledChangesRep) Set(val *ScheduledChangesRep) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledChangesRep) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledChangesRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledChangesRep(val *ScheduledChangesRep) *NullableScheduledChangesRep {
	return &NullableScheduledChangesRep{value: val, isSet: true}
}

func (v NullableScheduledChangesRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledChangesRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


