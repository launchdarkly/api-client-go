/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// SegmentsUnboundedTargetRep struct for SegmentsUnboundedTargetRep
type SegmentsUnboundedTargetRep struct {
	UserKey *string `json:"userKey,omitempty"`
	Included *bool `json:"included,omitempty"`
	Excluded *bool `json:"excluded,omitempty"`
}

// NewSegmentsUnboundedTargetRep instantiates a new SegmentsUnboundedTargetRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentsUnboundedTargetRep() *SegmentsUnboundedTargetRep {
	this := SegmentsUnboundedTargetRep{}
	return &this
}

// NewSegmentsUnboundedTargetRepWithDefaults instantiates a new SegmentsUnboundedTargetRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentsUnboundedTargetRepWithDefaults() *SegmentsUnboundedTargetRep {
	this := SegmentsUnboundedTargetRep{}
	return &this
}

// GetUserKey returns the UserKey field value if set, zero value otherwise.
func (o *SegmentsUnboundedTargetRep) GetUserKey() string {
	if o == nil || o.UserKey == nil {
		var ret string
		return ret
	}
	return *o.UserKey
}

// GetUserKeyOk returns a tuple with the UserKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsUnboundedTargetRep) GetUserKeyOk() (*string, bool) {
	if o == nil || o.UserKey == nil {
		return nil, false
	}
	return o.UserKey, true
}

// HasUserKey returns a boolean if a field has been set.
func (o *SegmentsUnboundedTargetRep) HasUserKey() bool {
	if o != nil && o.UserKey != nil {
		return true
	}

	return false
}

// SetUserKey gets a reference to the given string and assigns it to the UserKey field.
func (o *SegmentsUnboundedTargetRep) SetUserKey(v string) {
	o.UserKey = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *SegmentsUnboundedTargetRep) GetIncluded() bool {
	if o == nil || o.Included == nil {
		var ret bool
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsUnboundedTargetRep) GetIncludedOk() (*bool, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *SegmentsUnboundedTargetRep) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given bool and assigns it to the Included field.
func (o *SegmentsUnboundedTargetRep) SetIncluded(v bool) {
	o.Included = &v
}

// GetExcluded returns the Excluded field value if set, zero value otherwise.
func (o *SegmentsUnboundedTargetRep) GetExcluded() bool {
	if o == nil || o.Excluded == nil {
		var ret bool
		return ret
	}
	return *o.Excluded
}

// GetExcludedOk returns a tuple with the Excluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentsUnboundedTargetRep) GetExcludedOk() (*bool, bool) {
	if o == nil || o.Excluded == nil {
		return nil, false
	}
	return o.Excluded, true
}

// HasExcluded returns a boolean if a field has been set.
func (o *SegmentsUnboundedTargetRep) HasExcluded() bool {
	if o != nil && o.Excluded != nil {
		return true
	}

	return false
}

// SetExcluded gets a reference to the given bool and assigns it to the Excluded field.
func (o *SegmentsUnboundedTargetRep) SetExcluded(v bool) {
	o.Excluded = &v
}

func (o SegmentsUnboundedTargetRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserKey != nil {
		toSerialize["userKey"] = o.UserKey
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.Excluded != nil {
		toSerialize["excluded"] = o.Excluded
	}
	return json.Marshal(toSerialize)
}

type NullableSegmentsUnboundedTargetRep struct {
	value *SegmentsUnboundedTargetRep
	isSet bool
}

func (v NullableSegmentsUnboundedTargetRep) Get() *SegmentsUnboundedTargetRep {
	return v.value
}

func (v *NullableSegmentsUnboundedTargetRep) Set(val *SegmentsUnboundedTargetRep) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentsUnboundedTargetRep) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentsUnboundedTargetRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentsUnboundedTargetRep(val *SegmentsUnboundedTargetRep) *NullableSegmentsUnboundedTargetRep {
	return &NullableSegmentsUnboundedTargetRep{value: val, isSet: true}
}

func (v NullableSegmentsUnboundedTargetRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentsUnboundedTargetRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


