/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// TokenDataRep struct for TokenDataRep
type TokenDataRep struct {
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	Id *string `json:"_id,omitempty"`
	Name *string `json:"name,omitempty"`
	Ending *string `json:"ending,omitempty"`
	ServiceToken *bool `json:"serviceToken,omitempty"`
}

// NewTokenDataRep instantiates a new TokenDataRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenDataRep() *TokenDataRep {
	this := TokenDataRep{}
	return &this
}

// NewTokenDataRepWithDefaults instantiates a new TokenDataRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenDataRepWithDefaults() *TokenDataRep {
	this := TokenDataRep{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *TokenDataRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenDataRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *TokenDataRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *TokenDataRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TokenDataRep) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenDataRep) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TokenDataRep) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TokenDataRep) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TokenDataRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenDataRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TokenDataRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TokenDataRep) SetName(v string) {
	o.Name = &v
}

// GetEnding returns the Ending field value if set, zero value otherwise.
func (o *TokenDataRep) GetEnding() string {
	if o == nil || o.Ending == nil {
		var ret string
		return ret
	}
	return *o.Ending
}

// GetEndingOk returns a tuple with the Ending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenDataRep) GetEndingOk() (*string, bool) {
	if o == nil || o.Ending == nil {
		return nil, false
	}
	return o.Ending, true
}

// HasEnding returns a boolean if a field has been set.
func (o *TokenDataRep) HasEnding() bool {
	if o != nil && o.Ending != nil {
		return true
	}

	return false
}

// SetEnding gets a reference to the given string and assigns it to the Ending field.
func (o *TokenDataRep) SetEnding(v string) {
	o.Ending = &v
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *TokenDataRep) GetServiceToken() bool {
	if o == nil || o.ServiceToken == nil {
		var ret bool
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenDataRep) GetServiceTokenOk() (*bool, bool) {
	if o == nil || o.ServiceToken == nil {
		return nil, false
	}
	return o.ServiceToken, true
}

// HasServiceToken returns a boolean if a field has been set.
func (o *TokenDataRep) HasServiceToken() bool {
	if o != nil && o.ServiceToken != nil {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given bool and assigns it to the ServiceToken field.
func (o *TokenDataRep) SetServiceToken(v bool) {
	o.ServiceToken = &v
}

func (o TokenDataRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Ending != nil {
		toSerialize["ending"] = o.Ending
	}
	if o.ServiceToken != nil {
		toSerialize["serviceToken"] = o.ServiceToken
	}
	return json.Marshal(toSerialize)
}

type NullableTokenDataRep struct {
	value *TokenDataRep
	isSet bool
}

func (v NullableTokenDataRep) Get() *TokenDataRep {
	return v.value
}

func (v *NullableTokenDataRep) Set(val *TokenDataRep) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenDataRep) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenDataRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenDataRep(val *TokenDataRep) *NullableTokenDataRep {
	return &NullableTokenDataRep{value: val, isSet: true}
}

func (v NullableTokenDataRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenDataRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


