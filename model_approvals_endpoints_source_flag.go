/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ApprovalsEndpointsSourceFlag struct for ApprovalsEndpointsSourceFlag
type ApprovalsEndpointsSourceFlag struct {
	Key *string `json:"key,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

// NewApprovalsEndpointsSourceFlag instantiates a new ApprovalsEndpointsSourceFlag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalsEndpointsSourceFlag() *ApprovalsEndpointsSourceFlag {
	this := ApprovalsEndpointsSourceFlag{}
	return &this
}

// NewApprovalsEndpointsSourceFlagWithDefaults instantiates a new ApprovalsEndpointsSourceFlag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalsEndpointsSourceFlagWithDefaults() *ApprovalsEndpointsSourceFlag {
	this := ApprovalsEndpointsSourceFlag{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ApprovalsEndpointsSourceFlag) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalsEndpointsSourceFlag) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ApprovalsEndpointsSourceFlag) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ApprovalsEndpointsSourceFlag) SetKey(v string) {
	o.Key = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ApprovalsEndpointsSourceFlag) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalsEndpointsSourceFlag) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ApprovalsEndpointsSourceFlag) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ApprovalsEndpointsSourceFlag) SetVersion(v int32) {
	o.Version = &v
}

func (o ApprovalsEndpointsSourceFlag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableApprovalsEndpointsSourceFlag struct {
	value *ApprovalsEndpointsSourceFlag
	isSet bool
}

func (v NullableApprovalsEndpointsSourceFlag) Get() *ApprovalsEndpointsSourceFlag {
	return v.value
}

func (v *NullableApprovalsEndpointsSourceFlag) Set(val *ApprovalsEndpointsSourceFlag) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalsEndpointsSourceFlag) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalsEndpointsSourceFlag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalsEndpointsSourceFlag(val *ApprovalsEndpointsSourceFlag) *NullableApprovalsEndpointsSourceFlag {
	return &NullableApprovalsEndpointsSourceFlag{value: val, isSet: true}
}

func (v NullableApprovalsEndpointsSourceFlag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalsEndpointsSourceFlag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


