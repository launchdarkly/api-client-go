/*
LaunchDarkly REST API

Testing IntegrationsBetaApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package ldapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/launchdarkly/api-client-go"
)

func Test_ldapi_IntegrationsBetaApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test IntegrationsBetaApiService CreateIntegrationConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var integrationKey string

		resp, httpRes, err := apiClient.IntegrationsBetaApi.CreateIntegrationConfiguration(context.Background(), integrationKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IntegrationsBetaApiService DeleteIntegrationConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var integrationConfigurationId string

		httpRes, err := apiClient.IntegrationsBetaApi.DeleteIntegrationConfiguration(context.Background(), integrationConfigurationId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IntegrationsBetaApiService GetAllIntegrationConfigurations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var integrationKey string

		resp, httpRes, err := apiClient.IntegrationsBetaApi.GetAllIntegrationConfigurations(context.Background(), integrationKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IntegrationsBetaApiService GetIntegrationConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var integrationConfigurationId string

		resp, httpRes, err := apiClient.IntegrationsBetaApi.GetIntegrationConfiguration(context.Background(), integrationConfigurationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test IntegrationsBetaApiService UpdateIntegrationConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var integrationConfigurationId string

		resp, httpRes, err := apiClient.IntegrationsBetaApi.UpdateIntegrationConfiguration(context.Background(), integrationConfigurationId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
