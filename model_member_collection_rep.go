/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// MemberCollectionRep struct for MemberCollectionRep
type MemberCollectionRep struct {
	Items *[]MemberRep `json:"items,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewMemberCollectionRep instantiates a new MemberCollectionRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberCollectionRep() *MemberCollectionRep {
	this := MemberCollectionRep{}
	return &this
}

// NewMemberCollectionRepWithDefaults instantiates a new MemberCollectionRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberCollectionRepWithDefaults() *MemberCollectionRep {
	this := MemberCollectionRep{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *MemberCollectionRep) GetItems() []MemberRep {
	if o == nil || o.Items == nil {
		var ret []MemberRep
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberCollectionRep) GetItemsOk() (*[]MemberRep, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *MemberCollectionRep) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []MemberRep and assigns it to the Items field.
func (o *MemberCollectionRep) SetItems(v []MemberRep) {
	o.Items = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MemberCollectionRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberCollectionRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MemberCollectionRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *MemberCollectionRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *MemberCollectionRep) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberCollectionRep) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *MemberCollectionRep) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *MemberCollectionRep) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o MemberCollectionRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.TotalCount != nil {
		toSerialize["totalCount"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullableMemberCollectionRep struct {
	value *MemberCollectionRep
	isSet bool
}

func (v NullableMemberCollectionRep) Get() *MemberCollectionRep {
	return v.value
}

func (v *NullableMemberCollectionRep) Set(val *MemberCollectionRep) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberCollectionRep) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberCollectionRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberCollectionRep(val *MemberCollectionRep) *NullableMemberCollectionRep {
	return &NullableMemberCollectionRep{value: val, isSet: true}
}

func (v NullableMemberCollectionRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberCollectionRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


