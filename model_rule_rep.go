/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// RuleRep struct for RuleRep
type RuleRep struct {
	Id *string `json:"_id,omitempty"`
	Variation *int32 `json:"variation,omitempty"`
	Rollout *RolloutRep `json:"rollout,omitempty"`
	Clauses *[]FlagConfigurationRepClauses `json:"clauses,omitempty"`
	TrackEvents *bool `json:"trackEvents,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewRuleRep instantiates a new RuleRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleRep() *RuleRep {
	this := RuleRep{}
	return &this
}

// NewRuleRepWithDefaults instantiates a new RuleRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleRepWithDefaults() *RuleRep {
	this := RuleRep{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RuleRep) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRep) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RuleRep) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RuleRep) SetId(v string) {
	o.Id = &v
}

// GetVariation returns the Variation field value if set, zero value otherwise.
func (o *RuleRep) GetVariation() int32 {
	if o == nil || o.Variation == nil {
		var ret int32
		return ret
	}
	return *o.Variation
}

// GetVariationOk returns a tuple with the Variation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRep) GetVariationOk() (*int32, bool) {
	if o == nil || o.Variation == nil {
		return nil, false
	}
	return o.Variation, true
}

// HasVariation returns a boolean if a field has been set.
func (o *RuleRep) HasVariation() bool {
	if o != nil && o.Variation != nil {
		return true
	}

	return false
}

// SetVariation gets a reference to the given int32 and assigns it to the Variation field.
func (o *RuleRep) SetVariation(v int32) {
	o.Variation = &v
}

// GetRollout returns the Rollout field value if set, zero value otherwise.
func (o *RuleRep) GetRollout() RolloutRep {
	if o == nil || o.Rollout == nil {
		var ret RolloutRep
		return ret
	}
	return *o.Rollout
}

// GetRolloutOk returns a tuple with the Rollout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRep) GetRolloutOk() (*RolloutRep, bool) {
	if o == nil || o.Rollout == nil {
		return nil, false
	}
	return o.Rollout, true
}

// HasRollout returns a boolean if a field has been set.
func (o *RuleRep) HasRollout() bool {
	if o != nil && o.Rollout != nil {
		return true
	}

	return false
}

// SetRollout gets a reference to the given RolloutRep and assigns it to the Rollout field.
func (o *RuleRep) SetRollout(v RolloutRep) {
	o.Rollout = &v
}

// GetClauses returns the Clauses field value if set, zero value otherwise.
func (o *RuleRep) GetClauses() []FlagConfigurationRepClauses {
	if o == nil || o.Clauses == nil {
		var ret []FlagConfigurationRepClauses
		return ret
	}
	return *o.Clauses
}

// GetClausesOk returns a tuple with the Clauses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRep) GetClausesOk() (*[]FlagConfigurationRepClauses, bool) {
	if o == nil || o.Clauses == nil {
		return nil, false
	}
	return o.Clauses, true
}

// HasClauses returns a boolean if a field has been set.
func (o *RuleRep) HasClauses() bool {
	if o != nil && o.Clauses != nil {
		return true
	}

	return false
}

// SetClauses gets a reference to the given []FlagConfigurationRepClauses and assigns it to the Clauses field.
func (o *RuleRep) SetClauses(v []FlagConfigurationRepClauses) {
	o.Clauses = &v
}

// GetTrackEvents returns the TrackEvents field value if set, zero value otherwise.
func (o *RuleRep) GetTrackEvents() bool {
	if o == nil || o.TrackEvents == nil {
		var ret bool
		return ret
	}
	return *o.TrackEvents
}

// GetTrackEventsOk returns a tuple with the TrackEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRep) GetTrackEventsOk() (*bool, bool) {
	if o == nil || o.TrackEvents == nil {
		return nil, false
	}
	return o.TrackEvents, true
}

// HasTrackEvents returns a boolean if a field has been set.
func (o *RuleRep) HasTrackEvents() bool {
	if o != nil && o.TrackEvents != nil {
		return true
	}

	return false
}

// SetTrackEvents gets a reference to the given bool and assigns it to the TrackEvents field.
func (o *RuleRep) SetTrackEvents(v bool) {
	o.TrackEvents = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RuleRep) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleRep) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RuleRep) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RuleRep) SetDescription(v string) {
	o.Description = &v
}

func (o RuleRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Variation != nil {
		toSerialize["variation"] = o.Variation
	}
	if o.Rollout != nil {
		toSerialize["rollout"] = o.Rollout
	}
	if o.Clauses != nil {
		toSerialize["clauses"] = o.Clauses
	}
	if o.TrackEvents != nil {
		toSerialize["trackEvents"] = o.TrackEvents
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableRuleRep struct {
	value *RuleRep
	isSet bool
}

func (v NullableRuleRep) Get() *RuleRep {
	return v.value
}

func (v *NullableRuleRep) Set(val *RuleRep) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleRep) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleRep(val *RuleRep) *NullableRuleRep {
	return &NullableRuleRep{value: val, isSet: true}
}

func (v NullableRuleRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


