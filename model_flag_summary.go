/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// FlagSummary struct for FlagSummary
type FlagSummary struct {
	Prerequisites *int32 `json:"prerequisites,omitempty"`
}

// NewFlagSummary instantiates a new FlagSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlagSummary() *FlagSummary {
	this := FlagSummary{}
	return &this
}

// NewFlagSummaryWithDefaults instantiates a new FlagSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlagSummaryWithDefaults() *FlagSummary {
	this := FlagSummary{}
	return &this
}

// GetPrerequisites returns the Prerequisites field value if set, zero value otherwise.
func (o *FlagSummary) GetPrerequisites() int32 {
	if o == nil || o.Prerequisites == nil {
		var ret int32
		return ret
	}
	return *o.Prerequisites
}

// GetPrerequisitesOk returns a tuple with the Prerequisites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagSummary) GetPrerequisitesOk() (*int32, bool) {
	if o == nil || o.Prerequisites == nil {
		return nil, false
	}
	return o.Prerequisites, true
}

// HasPrerequisites returns a boolean if a field has been set.
func (o *FlagSummary) HasPrerequisites() bool {
	if o != nil && o.Prerequisites != nil {
		return true
	}

	return false
}

// SetPrerequisites gets a reference to the given int32 and assigns it to the Prerequisites field.
func (o *FlagSummary) SetPrerequisites(v int32) {
	o.Prerequisites = &v
}

func (o FlagSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Prerequisites != nil {
		toSerialize["prerequisites"] = o.Prerequisites
	}
	return json.Marshal(toSerialize)
}

type NullableFlagSummary struct {
	value *FlagSummary
	isSet bool
}

func (v NullableFlagSummary) Get() *FlagSummary {
	return v.value
}

func (v *NullableFlagSummary) Set(val *FlagSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableFlagSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableFlagSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlagSummary(val *FlagSummary) *NullableFlagSummary {
	return &NullableFlagSummary{value: val, isSet: true}
}

func (v NullableFlagSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlagSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


