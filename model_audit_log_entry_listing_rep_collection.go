/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// AuditLogEntryListingRepCollection struct for AuditLogEntryListingRepCollection
type AuditLogEntryListingRepCollection struct {
	Items *[]AuditLogEntryListingRepCollectionItems `json:"items,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
}

// NewAuditLogEntryListingRepCollection instantiates a new AuditLogEntryListingRepCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogEntryListingRepCollection() *AuditLogEntryListingRepCollection {
	this := AuditLogEntryListingRepCollection{}
	return &this
}

// NewAuditLogEntryListingRepCollectionWithDefaults instantiates a new AuditLogEntryListingRepCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogEntryListingRepCollectionWithDefaults() *AuditLogEntryListingRepCollection {
	this := AuditLogEntryListingRepCollection{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AuditLogEntryListingRepCollection) GetItems() []AuditLogEntryListingRepCollectionItems {
	if o == nil || o.Items == nil {
		var ret []AuditLogEntryListingRepCollectionItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryListingRepCollection) GetItemsOk() (*[]AuditLogEntryListingRepCollectionItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AuditLogEntryListingRepCollection) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AuditLogEntryListingRepCollectionItems and assigns it to the Items field.
func (o *AuditLogEntryListingRepCollection) SetItems(v []AuditLogEntryListingRepCollectionItems) {
	o.Items = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuditLogEntryListingRepCollection) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogEntryListingRepCollection) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuditLogEntryListingRepCollection) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *AuditLogEntryListingRepCollection) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

func (o AuditLogEntryListingRepCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableAuditLogEntryListingRepCollection struct {
	value *AuditLogEntryListingRepCollection
	isSet bool
}

func (v NullableAuditLogEntryListingRepCollection) Get() *AuditLogEntryListingRepCollection {
	return v.value
}

func (v *NullableAuditLogEntryListingRepCollection) Set(val *AuditLogEntryListingRepCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogEntryListingRepCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogEntryListingRepCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogEntryListingRepCollection(val *AuditLogEntryListingRepCollection) *NullableAuditLogEntryListingRepCollection {
	return &NullableAuditLogEntryListingRepCollection{value: val, isSet: true}
}

func (v NullableAuditLogEntryListingRepCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogEntryListingRepCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


