/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// MemberTeamSummaryRep struct for MemberTeamSummaryRep
type MemberTeamSummaryRep struct {
	CustomRoleKeys *[]string `json:"customRoleKeys,omitempty"`
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewMemberTeamSummaryRep instantiates a new MemberTeamSummaryRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberTeamSummaryRep() *MemberTeamSummaryRep {
	this := MemberTeamSummaryRep{}
	return &this
}

// NewMemberTeamSummaryRepWithDefaults instantiates a new MemberTeamSummaryRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberTeamSummaryRepWithDefaults() *MemberTeamSummaryRep {
	this := MemberTeamSummaryRep{}
	return &this
}

// GetCustomRoleKeys returns the CustomRoleKeys field value if set, zero value otherwise.
func (o *MemberTeamSummaryRep) GetCustomRoleKeys() []string {
	if o == nil || o.CustomRoleKeys == nil {
		var ret []string
		return ret
	}
	return *o.CustomRoleKeys
}

// GetCustomRoleKeysOk returns a tuple with the CustomRoleKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTeamSummaryRep) GetCustomRoleKeysOk() (*[]string, bool) {
	if o == nil || o.CustomRoleKeys == nil {
		return nil, false
	}
	return o.CustomRoleKeys, true
}

// HasCustomRoleKeys returns a boolean if a field has been set.
func (o *MemberTeamSummaryRep) HasCustomRoleKeys() bool {
	if o != nil && o.CustomRoleKeys != nil {
		return true
	}

	return false
}

// SetCustomRoleKeys gets a reference to the given []string and assigns it to the CustomRoleKeys field.
func (o *MemberTeamSummaryRep) SetCustomRoleKeys(v []string) {
	o.CustomRoleKeys = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *MemberTeamSummaryRep) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTeamSummaryRep) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *MemberTeamSummaryRep) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *MemberTeamSummaryRep) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MemberTeamSummaryRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberTeamSummaryRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MemberTeamSummaryRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MemberTeamSummaryRep) SetName(v string) {
	o.Name = &v
}

func (o MemberTeamSummaryRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomRoleKeys != nil {
		toSerialize["customRoleKeys"] = o.CustomRoleKeys
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableMemberTeamSummaryRep struct {
	value *MemberTeamSummaryRep
	isSet bool
}

func (v NullableMemberTeamSummaryRep) Get() *MemberTeamSummaryRep {
	return v.value
}

func (v *NullableMemberTeamSummaryRep) Set(val *MemberTeamSummaryRep) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberTeamSummaryRep) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberTeamSummaryRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberTeamSummaryRep(val *MemberTeamSummaryRep) *NullableMemberTeamSummaryRep {
	return &NullableMemberTeamSummaryRep{value: val, isSet: true}
}

func (v NullableMemberTeamSummaryRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberTeamSummaryRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


