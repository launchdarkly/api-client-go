/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// DestinationPostRep struct for DestinationPostRep
type DestinationPostRep struct {
	// A human-readable name for your data export destination.
	Name *string `json:"name,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Config interface{} `json:"config,omitempty"`
	On *bool `json:"on,omitempty"`
}

// NewDestinationPostRep instantiates a new DestinationPostRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationPostRep() *DestinationPostRep {
	this := DestinationPostRep{}
	return &this
}

// NewDestinationPostRepWithDefaults instantiates a new DestinationPostRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationPostRepWithDefaults() *DestinationPostRep {
	this := DestinationPostRep{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DestinationPostRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationPostRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DestinationPostRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DestinationPostRep) SetName(v string) {
	o.Name = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *DestinationPostRep) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationPostRep) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *DestinationPostRep) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *DestinationPostRep) SetKind(v string) {
	o.Kind = &v
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DestinationPostRep) GetConfig() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DestinationPostRep) GetConfigOk() (*interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return &o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *DestinationPostRep) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given interface{} and assigns it to the Config field.
func (o *DestinationPostRep) SetConfig(v interface{}) {
	o.Config = v
}

// GetOn returns the On field value if set, zero value otherwise.
func (o *DestinationPostRep) GetOn() bool {
	if o == nil || o.On == nil {
		var ret bool
		return ret
	}
	return *o.On
}

// GetOnOk returns a tuple with the On field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationPostRep) GetOnOk() (*bool, bool) {
	if o == nil || o.On == nil {
		return nil, false
	}
	return o.On, true
}

// HasOn returns a boolean if a field has been set.
func (o *DestinationPostRep) HasOn() bool {
	if o != nil && o.On != nil {
		return true
	}

	return false
}

// SetOn gets a reference to the given bool and assigns it to the On field.
func (o *DestinationPostRep) SetOn(v bool) {
	o.On = &v
}

func (o DestinationPostRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.On != nil {
		toSerialize["on"] = o.On
	}
	return json.Marshal(toSerialize)
}

type NullableDestinationPostRep struct {
	value *DestinationPostRep
	isSet bool
}

func (v NullableDestinationPostRep) Get() *DestinationPostRep {
	return v.value
}

func (v *NullableDestinationPostRep) Set(val *DestinationPostRep) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationPostRep) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationPostRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationPostRep(val *DestinationPostRep) *NullableDestinationPostRep {
	return &NullableDestinationPostRep{value: val, isSet: true}
}

func (v NullableDestinationPostRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationPostRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


