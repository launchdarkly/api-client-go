/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ApiReferenceRep struct for ApiReferenceRep
type ApiReferenceRep struct {
	Path *string `json:"path,omitempty"`
	Hint *string `json:"hint,omitempty"`
	Hunks *[]ApiBranchCollectionRepHunks `json:"hunks,omitempty"`
}

// NewApiReferenceRep instantiates a new ApiReferenceRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiReferenceRep() *ApiReferenceRep {
	this := ApiReferenceRep{}
	return &this
}

// NewApiReferenceRepWithDefaults instantiates a new ApiReferenceRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiReferenceRepWithDefaults() *ApiReferenceRep {
	this := ApiReferenceRep{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ApiReferenceRep) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReferenceRep) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ApiReferenceRep) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ApiReferenceRep) SetPath(v string) {
	o.Path = &v
}

// GetHint returns the Hint field value if set, zero value otherwise.
func (o *ApiReferenceRep) GetHint() string {
	if o == nil || o.Hint == nil {
		var ret string
		return ret
	}
	return *o.Hint
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReferenceRep) GetHintOk() (*string, bool) {
	if o == nil || o.Hint == nil {
		return nil, false
	}
	return o.Hint, true
}

// HasHint returns a boolean if a field has been set.
func (o *ApiReferenceRep) HasHint() bool {
	if o != nil && o.Hint != nil {
		return true
	}

	return false
}

// SetHint gets a reference to the given string and assigns it to the Hint field.
func (o *ApiReferenceRep) SetHint(v string) {
	o.Hint = &v
}

// GetHunks returns the Hunks field value if set, zero value otherwise.
func (o *ApiReferenceRep) GetHunks() []ApiBranchCollectionRepHunks {
	if o == nil || o.Hunks == nil {
		var ret []ApiBranchCollectionRepHunks
		return ret
	}
	return *o.Hunks
}

// GetHunksOk returns a tuple with the Hunks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiReferenceRep) GetHunksOk() (*[]ApiBranchCollectionRepHunks, bool) {
	if o == nil || o.Hunks == nil {
		return nil, false
	}
	return o.Hunks, true
}

// HasHunks returns a boolean if a field has been set.
func (o *ApiReferenceRep) HasHunks() bool {
	if o != nil && o.Hunks != nil {
		return true
	}

	return false
}

// SetHunks gets a reference to the given []ApiBranchCollectionRepHunks and assigns it to the Hunks field.
func (o *ApiReferenceRep) SetHunks(v []ApiBranchCollectionRepHunks) {
	o.Hunks = &v
}

func (o ApiReferenceRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Hint != nil {
		toSerialize["hint"] = o.Hint
	}
	if o.Hunks != nil {
		toSerialize["hunks"] = o.Hunks
	}
	return json.Marshal(toSerialize)
}

type NullableApiReferenceRep struct {
	value *ApiReferenceRep
	isSet bool
}

func (v NullableApiReferenceRep) Get() *ApiReferenceRep {
	return v.value
}

func (v *NullableApiReferenceRep) Set(val *ApiReferenceRep) {
	v.value = val
	v.isSet = true
}

func (v NullableApiReferenceRep) IsSet() bool {
	return v.isSet
}

func (v *NullableApiReferenceRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiReferenceRep(val *ApiReferenceRep) *NullableApiReferenceRep {
	return &NullableApiReferenceRep{value: val, isSet: true}
}

func (v NullableApiReferenceRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiReferenceRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


