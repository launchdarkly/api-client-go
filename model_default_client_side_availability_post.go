/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// DefaultClientSideAvailabilityPost struct for DefaultClientSideAvailabilityPost
type DefaultClientSideAvailabilityPost struct {
	UsingEnvironmentId *bool `json:"usingEnvironmentId,omitempty"`
	UsingMobileKey *bool `json:"usingMobileKey,omitempty"`
}

// NewDefaultClientSideAvailabilityPost instantiates a new DefaultClientSideAvailabilityPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultClientSideAvailabilityPost() *DefaultClientSideAvailabilityPost {
	this := DefaultClientSideAvailabilityPost{}
	return &this
}

// NewDefaultClientSideAvailabilityPostWithDefaults instantiates a new DefaultClientSideAvailabilityPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultClientSideAvailabilityPostWithDefaults() *DefaultClientSideAvailabilityPost {
	this := DefaultClientSideAvailabilityPost{}
	return &this
}

// GetUsingEnvironmentId returns the UsingEnvironmentId field value if set, zero value otherwise.
func (o *DefaultClientSideAvailabilityPost) GetUsingEnvironmentId() bool {
	if o == nil || o.UsingEnvironmentId == nil {
		var ret bool
		return ret
	}
	return *o.UsingEnvironmentId
}

// GetUsingEnvironmentIdOk returns a tuple with the UsingEnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultClientSideAvailabilityPost) GetUsingEnvironmentIdOk() (*bool, bool) {
	if o == nil || o.UsingEnvironmentId == nil {
		return nil, false
	}
	return o.UsingEnvironmentId, true
}

// HasUsingEnvironmentId returns a boolean if a field has been set.
func (o *DefaultClientSideAvailabilityPost) HasUsingEnvironmentId() bool {
	if o != nil && o.UsingEnvironmentId != nil {
		return true
	}

	return false
}

// SetUsingEnvironmentId gets a reference to the given bool and assigns it to the UsingEnvironmentId field.
func (o *DefaultClientSideAvailabilityPost) SetUsingEnvironmentId(v bool) {
	o.UsingEnvironmentId = &v
}

// GetUsingMobileKey returns the UsingMobileKey field value if set, zero value otherwise.
func (o *DefaultClientSideAvailabilityPost) GetUsingMobileKey() bool {
	if o == nil || o.UsingMobileKey == nil {
		var ret bool
		return ret
	}
	return *o.UsingMobileKey
}

// GetUsingMobileKeyOk returns a tuple with the UsingMobileKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultClientSideAvailabilityPost) GetUsingMobileKeyOk() (*bool, bool) {
	if o == nil || o.UsingMobileKey == nil {
		return nil, false
	}
	return o.UsingMobileKey, true
}

// HasUsingMobileKey returns a boolean if a field has been set.
func (o *DefaultClientSideAvailabilityPost) HasUsingMobileKey() bool {
	if o != nil && o.UsingMobileKey != nil {
		return true
	}

	return false
}

// SetUsingMobileKey gets a reference to the given bool and assigns it to the UsingMobileKey field.
func (o *DefaultClientSideAvailabilityPost) SetUsingMobileKey(v bool) {
	o.UsingMobileKey = &v
}

func (o DefaultClientSideAvailabilityPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UsingEnvironmentId != nil {
		toSerialize["usingEnvironmentId"] = o.UsingEnvironmentId
	}
	if o.UsingMobileKey != nil {
		toSerialize["usingMobileKey"] = o.UsingMobileKey
	}
	return json.Marshal(toSerialize)
}

type NullableDefaultClientSideAvailabilityPost struct {
	value *DefaultClientSideAvailabilityPost
	isSet bool
}

func (v NullableDefaultClientSideAvailabilityPost) Get() *DefaultClientSideAvailabilityPost {
	return v.value
}

func (v *NullableDefaultClientSideAvailabilityPost) Set(val *DefaultClientSideAvailabilityPost) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultClientSideAvailabilityPost) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultClientSideAvailabilityPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultClientSideAvailabilityPost(val *DefaultClientSideAvailabilityPost) *NullableDefaultClientSideAvailabilityPost {
	return &NullableDefaultClientSideAvailabilityPost{value: val, isSet: true}
}

func (v NullableDefaultClientSideAvailabilityPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultClientSideAvailabilityPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


