/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ApiStatisticRep struct for ApiStatisticRep
type ApiStatisticRep struct {
	Name *string `json:"name,omitempty"`
	SourceLink *string `json:"sourceLink,omitempty"`
	DefaultBranch *string `json:"defaultBranch,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Version *int32 `json:"version,omitempty"`
	HunkCount *int32 `json:"hunkCount,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
}

// NewApiStatisticRep instantiates a new ApiStatisticRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiStatisticRep() *ApiStatisticRep {
	this := ApiStatisticRep{}
	return &this
}

// NewApiStatisticRepWithDefaults instantiates a new ApiStatisticRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiStatisticRepWithDefaults() *ApiStatisticRep {
	this := ApiStatisticRep{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiStatisticRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStatisticRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiStatisticRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiStatisticRep) SetName(v string) {
	o.Name = &v
}

// GetSourceLink returns the SourceLink field value if set, zero value otherwise.
func (o *ApiStatisticRep) GetSourceLink() string {
	if o == nil || o.SourceLink == nil {
		var ret string
		return ret
	}
	return *o.SourceLink
}

// GetSourceLinkOk returns a tuple with the SourceLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStatisticRep) GetSourceLinkOk() (*string, bool) {
	if o == nil || o.SourceLink == nil {
		return nil, false
	}
	return o.SourceLink, true
}

// HasSourceLink returns a boolean if a field has been set.
func (o *ApiStatisticRep) HasSourceLink() bool {
	if o != nil && o.SourceLink != nil {
		return true
	}

	return false
}

// SetSourceLink gets a reference to the given string and assigns it to the SourceLink field.
func (o *ApiStatisticRep) SetSourceLink(v string) {
	o.SourceLink = &v
}

// GetDefaultBranch returns the DefaultBranch field value if set, zero value otherwise.
func (o *ApiStatisticRep) GetDefaultBranch() string {
	if o == nil || o.DefaultBranch == nil {
		var ret string
		return ret
	}
	return *o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStatisticRep) GetDefaultBranchOk() (*string, bool) {
	if o == nil || o.DefaultBranch == nil {
		return nil, false
	}
	return o.DefaultBranch, true
}

// HasDefaultBranch returns a boolean if a field has been set.
func (o *ApiStatisticRep) HasDefaultBranch() bool {
	if o != nil && o.DefaultBranch != nil {
		return true
	}

	return false
}

// SetDefaultBranch gets a reference to the given string and assigns it to the DefaultBranch field.
func (o *ApiStatisticRep) SetDefaultBranch(v string) {
	o.DefaultBranch = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiStatisticRep) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStatisticRep) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiStatisticRep) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiStatisticRep) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ApiStatisticRep) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStatisticRep) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ApiStatisticRep) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ApiStatisticRep) SetVersion(v int32) {
	o.Version = &v
}

// GetHunkCount returns the HunkCount field value if set, zero value otherwise.
func (o *ApiStatisticRep) GetHunkCount() int32 {
	if o == nil || o.HunkCount == nil {
		var ret int32
		return ret
	}
	return *o.HunkCount
}

// GetHunkCountOk returns a tuple with the HunkCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStatisticRep) GetHunkCountOk() (*int32, bool) {
	if o == nil || o.HunkCount == nil {
		return nil, false
	}
	return o.HunkCount, true
}

// HasHunkCount returns a boolean if a field has been set.
func (o *ApiStatisticRep) HasHunkCount() bool {
	if o != nil && o.HunkCount != nil {
		return true
	}

	return false
}

// SetHunkCount gets a reference to the given int32 and assigns it to the HunkCount field.
func (o *ApiStatisticRep) SetHunkCount(v int32) {
	o.HunkCount = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ApiStatisticRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStatisticRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ApiStatisticRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *ApiStatisticRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

func (o ApiStatisticRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SourceLink != nil {
		toSerialize["sourceLink"] = o.SourceLink
	}
	if o.DefaultBranch != nil {
		toSerialize["defaultBranch"] = o.DefaultBranch
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.HunkCount != nil {
		toSerialize["hunkCount"] = o.HunkCount
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableApiStatisticRep struct {
	value *ApiStatisticRep
	isSet bool
}

func (v NullableApiStatisticRep) Get() *ApiStatisticRep {
	return v.value
}

func (v *NullableApiStatisticRep) Set(val *ApiStatisticRep) {
	v.value = val
	v.isSet = true
}

func (v NullableApiStatisticRep) IsSet() bool {
	return v.isSet
}

func (v *NullableApiStatisticRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiStatisticRep(val *ApiStatisticRep) *NullableApiStatisticRep {
	return &NullableApiStatisticRep{value: val, isSet: true}
}

func (v NullableApiStatisticRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiStatisticRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


