/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// UnboundedSegmentMetadata struct for UnboundedSegmentMetadata
type UnboundedSegmentMetadata struct {
	EnvId *string `json:"envId,omitempty"`
	SegmentId *string `json:"segmentId,omitempty"`
	Version *int32 `json:"version,omitempty"`
	IncludedCount *int32 `json:"includedCount,omitempty"`
	ExcludedCount *int32 `json:"excludedCount,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
}

// NewUnboundedSegmentMetadata instantiates a new UnboundedSegmentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUnboundedSegmentMetadata() *UnboundedSegmentMetadata {
	this := UnboundedSegmentMetadata{}
	return &this
}

// NewUnboundedSegmentMetadataWithDefaults instantiates a new UnboundedSegmentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUnboundedSegmentMetadataWithDefaults() *UnboundedSegmentMetadata {
	this := UnboundedSegmentMetadata{}
	return &this
}

// GetEnvId returns the EnvId field value if set, zero value otherwise.
func (o *UnboundedSegmentMetadata) GetEnvId() string {
	if o == nil || o.EnvId == nil {
		var ret string
		return ret
	}
	return *o.EnvId
}

// GetEnvIdOk returns a tuple with the EnvId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnboundedSegmentMetadata) GetEnvIdOk() (*string, bool) {
	if o == nil || o.EnvId == nil {
		return nil, false
	}
	return o.EnvId, true
}

// HasEnvId returns a boolean if a field has been set.
func (o *UnboundedSegmentMetadata) HasEnvId() bool {
	if o != nil && o.EnvId != nil {
		return true
	}

	return false
}

// SetEnvId gets a reference to the given string and assigns it to the EnvId field.
func (o *UnboundedSegmentMetadata) SetEnvId(v string) {
	o.EnvId = &v
}

// GetSegmentId returns the SegmentId field value if set, zero value otherwise.
func (o *UnboundedSegmentMetadata) GetSegmentId() string {
	if o == nil || o.SegmentId == nil {
		var ret string
		return ret
	}
	return *o.SegmentId
}

// GetSegmentIdOk returns a tuple with the SegmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnboundedSegmentMetadata) GetSegmentIdOk() (*string, bool) {
	if o == nil || o.SegmentId == nil {
		return nil, false
	}
	return o.SegmentId, true
}

// HasSegmentId returns a boolean if a field has been set.
func (o *UnboundedSegmentMetadata) HasSegmentId() bool {
	if o != nil && o.SegmentId != nil {
		return true
	}

	return false
}

// SetSegmentId gets a reference to the given string and assigns it to the SegmentId field.
func (o *UnboundedSegmentMetadata) SetSegmentId(v string) {
	o.SegmentId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *UnboundedSegmentMetadata) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnboundedSegmentMetadata) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *UnboundedSegmentMetadata) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *UnboundedSegmentMetadata) SetVersion(v int32) {
	o.Version = &v
}

// GetIncludedCount returns the IncludedCount field value if set, zero value otherwise.
func (o *UnboundedSegmentMetadata) GetIncludedCount() int32 {
	if o == nil || o.IncludedCount == nil {
		var ret int32
		return ret
	}
	return *o.IncludedCount
}

// GetIncludedCountOk returns a tuple with the IncludedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnboundedSegmentMetadata) GetIncludedCountOk() (*int32, bool) {
	if o == nil || o.IncludedCount == nil {
		return nil, false
	}
	return o.IncludedCount, true
}

// HasIncludedCount returns a boolean if a field has been set.
func (o *UnboundedSegmentMetadata) HasIncludedCount() bool {
	if o != nil && o.IncludedCount != nil {
		return true
	}

	return false
}

// SetIncludedCount gets a reference to the given int32 and assigns it to the IncludedCount field.
func (o *UnboundedSegmentMetadata) SetIncludedCount(v int32) {
	o.IncludedCount = &v
}

// GetExcludedCount returns the ExcludedCount field value if set, zero value otherwise.
func (o *UnboundedSegmentMetadata) GetExcludedCount() int32 {
	if o == nil || o.ExcludedCount == nil {
		var ret int32
		return ret
	}
	return *o.ExcludedCount
}

// GetExcludedCountOk returns a tuple with the ExcludedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnboundedSegmentMetadata) GetExcludedCountOk() (*int32, bool) {
	if o == nil || o.ExcludedCount == nil {
		return nil, false
	}
	return o.ExcludedCount, true
}

// HasExcludedCount returns a boolean if a field has been set.
func (o *UnboundedSegmentMetadata) HasExcludedCount() bool {
	if o != nil && o.ExcludedCount != nil {
		return true
	}

	return false
}

// SetExcludedCount gets a reference to the given int32 and assigns it to the ExcludedCount field.
func (o *UnboundedSegmentMetadata) SetExcludedCount(v int32) {
	o.ExcludedCount = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *UnboundedSegmentMetadata) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UnboundedSegmentMetadata) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *UnboundedSegmentMetadata) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *UnboundedSegmentMetadata) SetDeleted(v bool) {
	o.Deleted = &v
}

func (o UnboundedSegmentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnvId != nil {
		toSerialize["envId"] = o.EnvId
	}
	if o.SegmentId != nil {
		toSerialize["segmentId"] = o.SegmentId
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.IncludedCount != nil {
		toSerialize["includedCount"] = o.IncludedCount
	}
	if o.ExcludedCount != nil {
		toSerialize["excludedCount"] = o.ExcludedCount
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	return json.Marshal(toSerialize)
}

type NullableUnboundedSegmentMetadata struct {
	value *UnboundedSegmentMetadata
	isSet bool
}

func (v NullableUnboundedSegmentMetadata) Get() *UnboundedSegmentMetadata {
	return v.value
}

func (v *NullableUnboundedSegmentMetadata) Set(val *UnboundedSegmentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableUnboundedSegmentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableUnboundedSegmentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUnboundedSegmentMetadata(val *UnboundedSegmentMetadata) *NullableUnboundedSegmentMetadata {
	return &NullableUnboundedSegmentMetadata{value: val, isSet: true}
}

func (v NullableUnboundedSegmentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUnboundedSegmentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


