/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// WebResourceIDResponse struct for WebResourceIDResponse
type WebResourceIDResponse struct {
	Kind *string `json:"kind,omitempty"`
	ProjectKey *string `json:"projectKey,omitempty"`
	EnvironmentKey *string `json:"environmentKey,omitempty"`
	FlagKey *string `json:"flagKey,omitempty"`
	Key *string `json:"key,omitempty"`
}

// NewWebResourceIDResponse instantiates a new WebResourceIDResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebResourceIDResponse() *WebResourceIDResponse {
	this := WebResourceIDResponse{}
	return &this
}

// NewWebResourceIDResponseWithDefaults instantiates a new WebResourceIDResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebResourceIDResponseWithDefaults() *WebResourceIDResponse {
	this := WebResourceIDResponse{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *WebResourceIDResponse) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebResourceIDResponse) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *WebResourceIDResponse) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *WebResourceIDResponse) SetKind(v string) {
	o.Kind = &v
}

// GetProjectKey returns the ProjectKey field value if set, zero value otherwise.
func (o *WebResourceIDResponse) GetProjectKey() string {
	if o == nil || o.ProjectKey == nil {
		var ret string
		return ret
	}
	return *o.ProjectKey
}

// GetProjectKeyOk returns a tuple with the ProjectKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebResourceIDResponse) GetProjectKeyOk() (*string, bool) {
	if o == nil || o.ProjectKey == nil {
		return nil, false
	}
	return o.ProjectKey, true
}

// HasProjectKey returns a boolean if a field has been set.
func (o *WebResourceIDResponse) HasProjectKey() bool {
	if o != nil && o.ProjectKey != nil {
		return true
	}

	return false
}

// SetProjectKey gets a reference to the given string and assigns it to the ProjectKey field.
func (o *WebResourceIDResponse) SetProjectKey(v string) {
	o.ProjectKey = &v
}

// GetEnvironmentKey returns the EnvironmentKey field value if set, zero value otherwise.
func (o *WebResourceIDResponse) GetEnvironmentKey() string {
	if o == nil || o.EnvironmentKey == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentKey
}

// GetEnvironmentKeyOk returns a tuple with the EnvironmentKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebResourceIDResponse) GetEnvironmentKeyOk() (*string, bool) {
	if o == nil || o.EnvironmentKey == nil {
		return nil, false
	}
	return o.EnvironmentKey, true
}

// HasEnvironmentKey returns a boolean if a field has been set.
func (o *WebResourceIDResponse) HasEnvironmentKey() bool {
	if o != nil && o.EnvironmentKey != nil {
		return true
	}

	return false
}

// SetEnvironmentKey gets a reference to the given string and assigns it to the EnvironmentKey field.
func (o *WebResourceIDResponse) SetEnvironmentKey(v string) {
	o.EnvironmentKey = &v
}

// GetFlagKey returns the FlagKey field value if set, zero value otherwise.
func (o *WebResourceIDResponse) GetFlagKey() string {
	if o == nil || o.FlagKey == nil {
		var ret string
		return ret
	}
	return *o.FlagKey
}

// GetFlagKeyOk returns a tuple with the FlagKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebResourceIDResponse) GetFlagKeyOk() (*string, bool) {
	if o == nil || o.FlagKey == nil {
		return nil, false
	}
	return o.FlagKey, true
}

// HasFlagKey returns a boolean if a field has been set.
func (o *WebResourceIDResponse) HasFlagKey() bool {
	if o != nil && o.FlagKey != nil {
		return true
	}

	return false
}

// SetFlagKey gets a reference to the given string and assigns it to the FlagKey field.
func (o *WebResourceIDResponse) SetFlagKey(v string) {
	o.FlagKey = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *WebResourceIDResponse) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebResourceIDResponse) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *WebResourceIDResponse) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *WebResourceIDResponse) SetKey(v string) {
	o.Key = &v
}

func (o WebResourceIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.ProjectKey != nil {
		toSerialize["projectKey"] = o.ProjectKey
	}
	if o.EnvironmentKey != nil {
		toSerialize["environmentKey"] = o.EnvironmentKey
	}
	if o.FlagKey != nil {
		toSerialize["flagKey"] = o.FlagKey
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableWebResourceIDResponse struct {
	value *WebResourceIDResponse
	isSet bool
}

func (v NullableWebResourceIDResponse) Get() *WebResourceIDResponse {
	return v.value
}

func (v *NullableWebResourceIDResponse) Set(val *WebResourceIDResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWebResourceIDResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWebResourceIDResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebResourceIDResponse(val *WebResourceIDResponse) *NullableWebResourceIDResponse {
	return &NullableWebResourceIDResponse{value: val, isSet: true}
}

func (v NullableWebResourceIDResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebResourceIDResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


