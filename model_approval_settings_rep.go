/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ApprovalSettingsRep struct for ApprovalSettingsRep
type ApprovalSettingsRep struct {
	Required bool `json:"Required"`
	BypassApprovalsForPendingChanges *bool `json:"bypassApprovalsForPendingChanges,omitempty"`
	MinNumApprovals *int32 `json:"minNumApprovals,omitempty"`
	CanReviewOwnRequest *bool `json:"canReviewOwnRequest,omitempty"`
	CanApplyDeclinedChanges *bool `json:"canApplyDeclinedChanges,omitempty"`
	ServiceKind *string `json:"serviceKind,omitempty"`
	ServiceConfig *map[string]interface{} `json:"serviceConfig,omitempty"`
	RequiredApprovalTags *[]string `json:"requiredApprovalTags,omitempty"`
}

// NewApprovalSettingsRep instantiates a new ApprovalSettingsRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalSettingsRep(required bool) *ApprovalSettingsRep {
	this := ApprovalSettingsRep{}
	this.Required = required
	return &this
}

// NewApprovalSettingsRepWithDefaults instantiates a new ApprovalSettingsRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalSettingsRepWithDefaults() *ApprovalSettingsRep {
	this := ApprovalSettingsRep{}
	return &this
}

// GetRequired returns the Required field value
func (o *ApprovalSettingsRep) GetRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetRequiredOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Required, true
}

// SetRequired sets field value
func (o *ApprovalSettingsRep) SetRequired(v bool) {
	o.Required = v
}

// GetBypassApprovalsForPendingChanges returns the BypassApprovalsForPendingChanges field value if set, zero value otherwise.
func (o *ApprovalSettingsRep) GetBypassApprovalsForPendingChanges() bool {
	if o == nil || o.BypassApprovalsForPendingChanges == nil {
		var ret bool
		return ret
	}
	return *o.BypassApprovalsForPendingChanges
}

// GetBypassApprovalsForPendingChangesOk returns a tuple with the BypassApprovalsForPendingChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetBypassApprovalsForPendingChangesOk() (*bool, bool) {
	if o == nil || o.BypassApprovalsForPendingChanges == nil {
		return nil, false
	}
	return o.BypassApprovalsForPendingChanges, true
}

// HasBypassApprovalsForPendingChanges returns a boolean if a field has been set.
func (o *ApprovalSettingsRep) HasBypassApprovalsForPendingChanges() bool {
	if o != nil && o.BypassApprovalsForPendingChanges != nil {
		return true
	}

	return false
}

// SetBypassApprovalsForPendingChanges gets a reference to the given bool and assigns it to the BypassApprovalsForPendingChanges field.
func (o *ApprovalSettingsRep) SetBypassApprovalsForPendingChanges(v bool) {
	o.BypassApprovalsForPendingChanges = &v
}

// GetMinNumApprovals returns the MinNumApprovals field value if set, zero value otherwise.
func (o *ApprovalSettingsRep) GetMinNumApprovals() int32 {
	if o == nil || o.MinNumApprovals == nil {
		var ret int32
		return ret
	}
	return *o.MinNumApprovals
}

// GetMinNumApprovalsOk returns a tuple with the MinNumApprovals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetMinNumApprovalsOk() (*int32, bool) {
	if o == nil || o.MinNumApprovals == nil {
		return nil, false
	}
	return o.MinNumApprovals, true
}

// HasMinNumApprovals returns a boolean if a field has been set.
func (o *ApprovalSettingsRep) HasMinNumApprovals() bool {
	if o != nil && o.MinNumApprovals != nil {
		return true
	}

	return false
}

// SetMinNumApprovals gets a reference to the given int32 and assigns it to the MinNumApprovals field.
func (o *ApprovalSettingsRep) SetMinNumApprovals(v int32) {
	o.MinNumApprovals = &v
}

// GetCanReviewOwnRequest returns the CanReviewOwnRequest field value if set, zero value otherwise.
func (o *ApprovalSettingsRep) GetCanReviewOwnRequest() bool {
	if o == nil || o.CanReviewOwnRequest == nil {
		var ret bool
		return ret
	}
	return *o.CanReviewOwnRequest
}

// GetCanReviewOwnRequestOk returns a tuple with the CanReviewOwnRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetCanReviewOwnRequestOk() (*bool, bool) {
	if o == nil || o.CanReviewOwnRequest == nil {
		return nil, false
	}
	return o.CanReviewOwnRequest, true
}

// HasCanReviewOwnRequest returns a boolean if a field has been set.
func (o *ApprovalSettingsRep) HasCanReviewOwnRequest() bool {
	if o != nil && o.CanReviewOwnRequest != nil {
		return true
	}

	return false
}

// SetCanReviewOwnRequest gets a reference to the given bool and assigns it to the CanReviewOwnRequest field.
func (o *ApprovalSettingsRep) SetCanReviewOwnRequest(v bool) {
	o.CanReviewOwnRequest = &v
}

// GetCanApplyDeclinedChanges returns the CanApplyDeclinedChanges field value if set, zero value otherwise.
func (o *ApprovalSettingsRep) GetCanApplyDeclinedChanges() bool {
	if o == nil || o.CanApplyDeclinedChanges == nil {
		var ret bool
		return ret
	}
	return *o.CanApplyDeclinedChanges
}

// GetCanApplyDeclinedChangesOk returns a tuple with the CanApplyDeclinedChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetCanApplyDeclinedChangesOk() (*bool, bool) {
	if o == nil || o.CanApplyDeclinedChanges == nil {
		return nil, false
	}
	return o.CanApplyDeclinedChanges, true
}

// HasCanApplyDeclinedChanges returns a boolean if a field has been set.
func (o *ApprovalSettingsRep) HasCanApplyDeclinedChanges() bool {
	if o != nil && o.CanApplyDeclinedChanges != nil {
		return true
	}

	return false
}

// SetCanApplyDeclinedChanges gets a reference to the given bool and assigns it to the CanApplyDeclinedChanges field.
func (o *ApprovalSettingsRep) SetCanApplyDeclinedChanges(v bool) {
	o.CanApplyDeclinedChanges = &v
}

// GetServiceKind returns the ServiceKind field value if set, zero value otherwise.
func (o *ApprovalSettingsRep) GetServiceKind() string {
	if o == nil || o.ServiceKind == nil {
		var ret string
		return ret
	}
	return *o.ServiceKind
}

// GetServiceKindOk returns a tuple with the ServiceKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetServiceKindOk() (*string, bool) {
	if o == nil || o.ServiceKind == nil {
		return nil, false
	}
	return o.ServiceKind, true
}

// HasServiceKind returns a boolean if a field has been set.
func (o *ApprovalSettingsRep) HasServiceKind() bool {
	if o != nil && o.ServiceKind != nil {
		return true
	}

	return false
}

// SetServiceKind gets a reference to the given string and assigns it to the ServiceKind field.
func (o *ApprovalSettingsRep) SetServiceKind(v string) {
	o.ServiceKind = &v
}

// GetServiceConfig returns the ServiceConfig field value if set, zero value otherwise.
func (o *ApprovalSettingsRep) GetServiceConfig() map[string]interface{} {
	if o == nil || o.ServiceConfig == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ServiceConfig
}

// GetServiceConfigOk returns a tuple with the ServiceConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetServiceConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.ServiceConfig == nil {
		return nil, false
	}
	return o.ServiceConfig, true
}

// HasServiceConfig returns a boolean if a field has been set.
func (o *ApprovalSettingsRep) HasServiceConfig() bool {
	if o != nil && o.ServiceConfig != nil {
		return true
	}

	return false
}

// SetServiceConfig gets a reference to the given map[string]interface{} and assigns it to the ServiceConfig field.
func (o *ApprovalSettingsRep) SetServiceConfig(v map[string]interface{}) {
	o.ServiceConfig = &v
}

// GetRequiredApprovalTags returns the RequiredApprovalTags field value if set, zero value otherwise.
func (o *ApprovalSettingsRep) GetRequiredApprovalTags() []string {
	if o == nil || o.RequiredApprovalTags == nil {
		var ret []string
		return ret
	}
	return *o.RequiredApprovalTags
}

// GetRequiredApprovalTagsOk returns a tuple with the RequiredApprovalTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalSettingsRep) GetRequiredApprovalTagsOk() (*[]string, bool) {
	if o == nil || o.RequiredApprovalTags == nil {
		return nil, false
	}
	return o.RequiredApprovalTags, true
}

// HasRequiredApprovalTags returns a boolean if a field has been set.
func (o *ApprovalSettingsRep) HasRequiredApprovalTags() bool {
	if o != nil && o.RequiredApprovalTags != nil {
		return true
	}

	return false
}

// SetRequiredApprovalTags gets a reference to the given []string and assigns it to the RequiredApprovalTags field.
func (o *ApprovalSettingsRep) SetRequiredApprovalTags(v []string) {
	o.RequiredApprovalTags = &v
}

func (o ApprovalSettingsRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Required"] = o.Required
	}
	if o.BypassApprovalsForPendingChanges != nil {
		toSerialize["bypassApprovalsForPendingChanges"] = o.BypassApprovalsForPendingChanges
	}
	if o.MinNumApprovals != nil {
		toSerialize["minNumApprovals"] = o.MinNumApprovals
	}
	if o.CanReviewOwnRequest != nil {
		toSerialize["canReviewOwnRequest"] = o.CanReviewOwnRequest
	}
	if o.CanApplyDeclinedChanges != nil {
		toSerialize["canApplyDeclinedChanges"] = o.CanApplyDeclinedChanges
	}
	if o.ServiceKind != nil {
		toSerialize["serviceKind"] = o.ServiceKind
	}
	if o.ServiceConfig != nil {
		toSerialize["serviceConfig"] = o.ServiceConfig
	}
	if o.RequiredApprovalTags != nil {
		toSerialize["requiredApprovalTags"] = o.RequiredApprovalTags
	}
	return json.Marshal(toSerialize)
}

type NullableApprovalSettingsRep struct {
	value *ApprovalSettingsRep
	isSet bool
}

func (v NullableApprovalSettingsRep) Get() *ApprovalSettingsRep {
	return v.value
}

func (v *NullableApprovalSettingsRep) Set(val *ApprovalSettingsRep) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalSettingsRep) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalSettingsRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalSettingsRep(val *ApprovalSettingsRep) *NullableApprovalSettingsRep {
	return &NullableApprovalSettingsRep{value: val, isSet: true}
}

func (v NullableApprovalSettingsRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalSettingsRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


