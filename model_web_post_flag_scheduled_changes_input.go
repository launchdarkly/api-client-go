/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// WebPostFlagScheduledChangesInput struct for WebPostFlagScheduledChangesInput
type WebPostFlagScheduledChangesInput struct {
	Comment *string `json:"Comment,omitempty"`
	ExecutionDate *int64 `json:"ExecutionDate,omitempty"`
	IgnoreConflicts *bool `json:"IgnoreConflicts,omitempty"`
	Instructions *[]map[string]interface{} `json:"Instructions,omitempty"`
}

// NewWebPostFlagScheduledChangesInput instantiates a new WebPostFlagScheduledChangesInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebPostFlagScheduledChangesInput() *WebPostFlagScheduledChangesInput {
	this := WebPostFlagScheduledChangesInput{}
	return &this
}

// NewWebPostFlagScheduledChangesInputWithDefaults instantiates a new WebPostFlagScheduledChangesInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebPostFlagScheduledChangesInputWithDefaults() *WebPostFlagScheduledChangesInput {
	this := WebPostFlagScheduledChangesInput{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *WebPostFlagScheduledChangesInput) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebPostFlagScheduledChangesInput) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *WebPostFlagScheduledChangesInput) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *WebPostFlagScheduledChangesInput) SetComment(v string) {
	o.Comment = &v
}

// GetExecutionDate returns the ExecutionDate field value if set, zero value otherwise.
func (o *WebPostFlagScheduledChangesInput) GetExecutionDate() int64 {
	if o == nil || o.ExecutionDate == nil {
		var ret int64
		return ret
	}
	return *o.ExecutionDate
}

// GetExecutionDateOk returns a tuple with the ExecutionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebPostFlagScheduledChangesInput) GetExecutionDateOk() (*int64, bool) {
	if o == nil || o.ExecutionDate == nil {
		return nil, false
	}
	return o.ExecutionDate, true
}

// HasExecutionDate returns a boolean if a field has been set.
func (o *WebPostFlagScheduledChangesInput) HasExecutionDate() bool {
	if o != nil && o.ExecutionDate != nil {
		return true
	}

	return false
}

// SetExecutionDate gets a reference to the given int64 and assigns it to the ExecutionDate field.
func (o *WebPostFlagScheduledChangesInput) SetExecutionDate(v int64) {
	o.ExecutionDate = &v
}

// GetIgnoreConflicts returns the IgnoreConflicts field value if set, zero value otherwise.
func (o *WebPostFlagScheduledChangesInput) GetIgnoreConflicts() bool {
	if o == nil || o.IgnoreConflicts == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreConflicts
}

// GetIgnoreConflictsOk returns a tuple with the IgnoreConflicts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebPostFlagScheduledChangesInput) GetIgnoreConflictsOk() (*bool, bool) {
	if o == nil || o.IgnoreConflicts == nil {
		return nil, false
	}
	return o.IgnoreConflicts, true
}

// HasIgnoreConflicts returns a boolean if a field has been set.
func (o *WebPostFlagScheduledChangesInput) HasIgnoreConflicts() bool {
	if o != nil && o.IgnoreConflicts != nil {
		return true
	}

	return false
}

// SetIgnoreConflicts gets a reference to the given bool and assigns it to the IgnoreConflicts field.
func (o *WebPostFlagScheduledChangesInput) SetIgnoreConflicts(v bool) {
	o.IgnoreConflicts = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *WebPostFlagScheduledChangesInput) GetInstructions() []map[string]interface{} {
	if o == nil || o.Instructions == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebPostFlagScheduledChangesInput) GetInstructionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Instructions == nil {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *WebPostFlagScheduledChangesInput) HasInstructions() bool {
	if o != nil && o.Instructions != nil {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given []map[string]interface{} and assigns it to the Instructions field.
func (o *WebPostFlagScheduledChangesInput) SetInstructions(v []map[string]interface{}) {
	o.Instructions = &v
}

func (o WebPostFlagScheduledChangesInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comment != nil {
		toSerialize["Comment"] = o.Comment
	}
	if o.ExecutionDate != nil {
		toSerialize["ExecutionDate"] = o.ExecutionDate
	}
	if o.IgnoreConflicts != nil {
		toSerialize["IgnoreConflicts"] = o.IgnoreConflicts
	}
	if o.Instructions != nil {
		toSerialize["Instructions"] = o.Instructions
	}
	return json.Marshal(toSerialize)
}

type NullableWebPostFlagScheduledChangesInput struct {
	value *WebPostFlagScheduledChangesInput
	isSet bool
}

func (v NullableWebPostFlagScheduledChangesInput) Get() *WebPostFlagScheduledChangesInput {
	return v.value
}

func (v *NullableWebPostFlagScheduledChangesInput) Set(val *WebPostFlagScheduledChangesInput) {
	v.value = val
	v.isSet = true
}

func (v NullableWebPostFlagScheduledChangesInput) IsSet() bool {
	return v.isSet
}

func (v *NullableWebPostFlagScheduledChangesInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebPostFlagScheduledChangesInput(val *WebPostFlagScheduledChangesInput) *NullableWebPostFlagScheduledChangesInput {
	return &NullableWebPostFlagScheduledChangesInput{value: val, isSet: true}
}

func (v NullableWebPostFlagScheduledChangesInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebPostFlagScheduledChangesInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


