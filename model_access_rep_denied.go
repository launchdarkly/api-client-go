/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// AccessRepDenied struct for AccessRepDenied
type AccessRepDenied struct {
	Action *string `json:"action,omitempty"`
	Reason *AccessDeniedReasonRep `json:"reason,omitempty"`
}

// NewAccessRepDenied instantiates a new AccessRepDenied object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRepDenied() *AccessRepDenied {
	this := AccessRepDenied{}
	return &this
}

// NewAccessRepDeniedWithDefaults instantiates a new AccessRepDenied object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRepDeniedWithDefaults() *AccessRepDenied {
	this := AccessRepDenied{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *AccessRepDenied) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRepDenied) GetActionOk() (*string, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *AccessRepDenied) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *AccessRepDenied) SetAction(v string) {
	o.Action = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *AccessRepDenied) GetReason() AccessDeniedReasonRep {
	if o == nil || o.Reason == nil {
		var ret AccessDeniedReasonRep
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRepDenied) GetReasonOk() (*AccessDeniedReasonRep, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *AccessRepDenied) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given AccessDeniedReasonRep and assigns it to the Reason field.
func (o *AccessRepDenied) SetReason(v AccessDeniedReasonRep) {
	o.Reason = &v
}

func (o AccessRepDenied) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableAccessRepDenied struct {
	value *AccessRepDenied
	isSet bool
}

func (v NullableAccessRepDenied) Get() *AccessRepDenied {
	return v.value
}

func (v *NullableAccessRepDenied) Set(val *AccessRepDenied) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRepDenied) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRepDenied) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRepDenied(val *AccessRepDenied) *NullableAccessRepDenied {
	return &NullableAccessRepDenied{value: val, isSet: true}
}

func (v NullableAccessRepDenied) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRepDenied) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


