/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// WebFlagConfigApprovalRequestResponse struct for WebFlagConfigApprovalRequestResponse
type WebFlagConfigApprovalRequestResponse struct {
	Id *string `json:"_id,omitempty"`
	Version *int32 `json:"_version,omitempty"`
	CreationDate *int64 `json:"creationDate,omitempty"`
	ServiceKind *string `json:"serviceKind,omitempty"`
	RequestorId *string `json:"requestorId,omitempty"`
	Description *string `json:"description,omitempty"`
	ReviewStatus *string `json:"reviewStatus,omitempty"`
	AllReviews *[]WebFlagConfigApprovalRequestResponseAllReviews `json:"allReviews,omitempty"`
	NotifyMemberIds *[]string `json:"notifyMemberIds,omitempty"`
	AppliedDate *int64 `json:"appliedDate,omitempty"`
	AppliedByMemberId *string `json:"appliedByMemberId,omitempty"`
	Status *string `json:"status,omitempty"`
	Instructions *[]map[string]interface{} `json:"instructions,omitempty"`
	Conflicts *[]WebFlagConfigApprovalRequestResponseConflicts `json:"conflicts,omitempty"`
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	ExecutionDate *int64 `json:"executionDate,omitempty"`
	OperatingOnId *string `json:"operatingOnId,omitempty"`
	IntegrationMetadata *WebIntegrationMetadata `json:"integrationMetadata,omitempty"`
	Source *WebCopiedFromEnv `json:"source,omitempty"`
}

// NewWebFlagConfigApprovalRequestResponse instantiates a new WebFlagConfigApprovalRequestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebFlagConfigApprovalRequestResponse() *WebFlagConfigApprovalRequestResponse {
	this := WebFlagConfigApprovalRequestResponse{}
	return &this
}

// NewWebFlagConfigApprovalRequestResponseWithDefaults instantiates a new WebFlagConfigApprovalRequestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebFlagConfigApprovalRequestResponseWithDefaults() *WebFlagConfigApprovalRequestResponse {
	this := WebFlagConfigApprovalRequestResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebFlagConfigApprovalRequestResponse) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *WebFlagConfigApprovalRequestResponse) SetVersion(v int32) {
	o.Version = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetCreationDate() int64 {
	if o == nil || o.CreationDate == nil {
		var ret int64
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetCreationDateOk() (*int64, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int64 and assigns it to the CreationDate field.
func (o *WebFlagConfigApprovalRequestResponse) SetCreationDate(v int64) {
	o.CreationDate = &v
}

// GetServiceKind returns the ServiceKind field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetServiceKind() string {
	if o == nil || o.ServiceKind == nil {
		var ret string
		return ret
	}
	return *o.ServiceKind
}

// GetServiceKindOk returns a tuple with the ServiceKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetServiceKindOk() (*string, bool) {
	if o == nil || o.ServiceKind == nil {
		return nil, false
	}
	return o.ServiceKind, true
}

// HasServiceKind returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasServiceKind() bool {
	if o != nil && o.ServiceKind != nil {
		return true
	}

	return false
}

// SetServiceKind gets a reference to the given string and assigns it to the ServiceKind field.
func (o *WebFlagConfigApprovalRequestResponse) SetServiceKind(v string) {
	o.ServiceKind = &v
}

// GetRequestorId returns the RequestorId field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetRequestorId() string {
	if o == nil || o.RequestorId == nil {
		var ret string
		return ret
	}
	return *o.RequestorId
}

// GetRequestorIdOk returns a tuple with the RequestorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetRequestorIdOk() (*string, bool) {
	if o == nil || o.RequestorId == nil {
		return nil, false
	}
	return o.RequestorId, true
}

// HasRequestorId returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasRequestorId() bool {
	if o != nil && o.RequestorId != nil {
		return true
	}

	return false
}

// SetRequestorId gets a reference to the given string and assigns it to the RequestorId field.
func (o *WebFlagConfigApprovalRequestResponse) SetRequestorId(v string) {
	o.RequestorId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WebFlagConfigApprovalRequestResponse) SetDescription(v string) {
	o.Description = &v
}

// GetReviewStatus returns the ReviewStatus field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetReviewStatus() string {
	if o == nil || o.ReviewStatus == nil {
		var ret string
		return ret
	}
	return *o.ReviewStatus
}

// GetReviewStatusOk returns a tuple with the ReviewStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetReviewStatusOk() (*string, bool) {
	if o == nil || o.ReviewStatus == nil {
		return nil, false
	}
	return o.ReviewStatus, true
}

// HasReviewStatus returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasReviewStatus() bool {
	if o != nil && o.ReviewStatus != nil {
		return true
	}

	return false
}

// SetReviewStatus gets a reference to the given string and assigns it to the ReviewStatus field.
func (o *WebFlagConfigApprovalRequestResponse) SetReviewStatus(v string) {
	o.ReviewStatus = &v
}

// GetAllReviews returns the AllReviews field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetAllReviews() []WebFlagConfigApprovalRequestResponseAllReviews {
	if o == nil || o.AllReviews == nil {
		var ret []WebFlagConfigApprovalRequestResponseAllReviews
		return ret
	}
	return *o.AllReviews
}

// GetAllReviewsOk returns a tuple with the AllReviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetAllReviewsOk() (*[]WebFlagConfigApprovalRequestResponseAllReviews, bool) {
	if o == nil || o.AllReviews == nil {
		return nil, false
	}
	return o.AllReviews, true
}

// HasAllReviews returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasAllReviews() bool {
	if o != nil && o.AllReviews != nil {
		return true
	}

	return false
}

// SetAllReviews gets a reference to the given []WebFlagConfigApprovalRequestResponseAllReviews and assigns it to the AllReviews field.
func (o *WebFlagConfigApprovalRequestResponse) SetAllReviews(v []WebFlagConfigApprovalRequestResponseAllReviews) {
	o.AllReviews = &v
}

// GetNotifyMemberIds returns the NotifyMemberIds field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetNotifyMemberIds() []string {
	if o == nil || o.NotifyMemberIds == nil {
		var ret []string
		return ret
	}
	return *o.NotifyMemberIds
}

// GetNotifyMemberIdsOk returns a tuple with the NotifyMemberIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetNotifyMemberIdsOk() (*[]string, bool) {
	if o == nil || o.NotifyMemberIds == nil {
		return nil, false
	}
	return o.NotifyMemberIds, true
}

// HasNotifyMemberIds returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasNotifyMemberIds() bool {
	if o != nil && o.NotifyMemberIds != nil {
		return true
	}

	return false
}

// SetNotifyMemberIds gets a reference to the given []string and assigns it to the NotifyMemberIds field.
func (o *WebFlagConfigApprovalRequestResponse) SetNotifyMemberIds(v []string) {
	o.NotifyMemberIds = &v
}

// GetAppliedDate returns the AppliedDate field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetAppliedDate() int64 {
	if o == nil || o.AppliedDate == nil {
		var ret int64
		return ret
	}
	return *o.AppliedDate
}

// GetAppliedDateOk returns a tuple with the AppliedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetAppliedDateOk() (*int64, bool) {
	if o == nil || o.AppliedDate == nil {
		return nil, false
	}
	return o.AppliedDate, true
}

// HasAppliedDate returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasAppliedDate() bool {
	if o != nil && o.AppliedDate != nil {
		return true
	}

	return false
}

// SetAppliedDate gets a reference to the given int64 and assigns it to the AppliedDate field.
func (o *WebFlagConfigApprovalRequestResponse) SetAppliedDate(v int64) {
	o.AppliedDate = &v
}

// GetAppliedByMemberId returns the AppliedByMemberId field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetAppliedByMemberId() string {
	if o == nil || o.AppliedByMemberId == nil {
		var ret string
		return ret
	}
	return *o.AppliedByMemberId
}

// GetAppliedByMemberIdOk returns a tuple with the AppliedByMemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetAppliedByMemberIdOk() (*string, bool) {
	if o == nil || o.AppliedByMemberId == nil {
		return nil, false
	}
	return o.AppliedByMemberId, true
}

// HasAppliedByMemberId returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasAppliedByMemberId() bool {
	if o != nil && o.AppliedByMemberId != nil {
		return true
	}

	return false
}

// SetAppliedByMemberId gets a reference to the given string and assigns it to the AppliedByMemberId field.
func (o *WebFlagConfigApprovalRequestResponse) SetAppliedByMemberId(v string) {
	o.AppliedByMemberId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WebFlagConfigApprovalRequestResponse) SetStatus(v string) {
	o.Status = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetInstructions() []map[string]interface{} {
	if o == nil || o.Instructions == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetInstructionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Instructions == nil {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasInstructions() bool {
	if o != nil && o.Instructions != nil {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given []map[string]interface{} and assigns it to the Instructions field.
func (o *WebFlagConfigApprovalRequestResponse) SetInstructions(v []map[string]interface{}) {
	o.Instructions = &v
}

// GetConflicts returns the Conflicts field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetConflicts() []WebFlagConfigApprovalRequestResponseConflicts {
	if o == nil || o.Conflicts == nil {
		var ret []WebFlagConfigApprovalRequestResponseConflicts
		return ret
	}
	return *o.Conflicts
}

// GetConflictsOk returns a tuple with the Conflicts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetConflictsOk() (*[]WebFlagConfigApprovalRequestResponseConflicts, bool) {
	if o == nil || o.Conflicts == nil {
		return nil, false
	}
	return o.Conflicts, true
}

// HasConflicts returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasConflicts() bool {
	if o != nil && o.Conflicts != nil {
		return true
	}

	return false
}

// SetConflicts gets a reference to the given []WebFlagConfigApprovalRequestResponseConflicts and assigns it to the Conflicts field.
func (o *WebFlagConfigApprovalRequestResponse) SetConflicts(v []WebFlagConfigApprovalRequestResponseConflicts) {
	o.Conflicts = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *WebFlagConfigApprovalRequestResponse) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetExecutionDate returns the ExecutionDate field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetExecutionDate() int64 {
	if o == nil || o.ExecutionDate == nil {
		var ret int64
		return ret
	}
	return *o.ExecutionDate
}

// GetExecutionDateOk returns a tuple with the ExecutionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetExecutionDateOk() (*int64, bool) {
	if o == nil || o.ExecutionDate == nil {
		return nil, false
	}
	return o.ExecutionDate, true
}

// HasExecutionDate returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasExecutionDate() bool {
	if o != nil && o.ExecutionDate != nil {
		return true
	}

	return false
}

// SetExecutionDate gets a reference to the given int64 and assigns it to the ExecutionDate field.
func (o *WebFlagConfigApprovalRequestResponse) SetExecutionDate(v int64) {
	o.ExecutionDate = &v
}

// GetOperatingOnId returns the OperatingOnId field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetOperatingOnId() string {
	if o == nil || o.OperatingOnId == nil {
		var ret string
		return ret
	}
	return *o.OperatingOnId
}

// GetOperatingOnIdOk returns a tuple with the OperatingOnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetOperatingOnIdOk() (*string, bool) {
	if o == nil || o.OperatingOnId == nil {
		return nil, false
	}
	return o.OperatingOnId, true
}

// HasOperatingOnId returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasOperatingOnId() bool {
	if o != nil && o.OperatingOnId != nil {
		return true
	}

	return false
}

// SetOperatingOnId gets a reference to the given string and assigns it to the OperatingOnId field.
func (o *WebFlagConfigApprovalRequestResponse) SetOperatingOnId(v string) {
	o.OperatingOnId = &v
}

// GetIntegrationMetadata returns the IntegrationMetadata field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetIntegrationMetadata() WebIntegrationMetadata {
	if o == nil || o.IntegrationMetadata == nil {
		var ret WebIntegrationMetadata
		return ret
	}
	return *o.IntegrationMetadata
}

// GetIntegrationMetadataOk returns a tuple with the IntegrationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetIntegrationMetadataOk() (*WebIntegrationMetadata, bool) {
	if o == nil || o.IntegrationMetadata == nil {
		return nil, false
	}
	return o.IntegrationMetadata, true
}

// HasIntegrationMetadata returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasIntegrationMetadata() bool {
	if o != nil && o.IntegrationMetadata != nil {
		return true
	}

	return false
}

// SetIntegrationMetadata gets a reference to the given WebIntegrationMetadata and assigns it to the IntegrationMetadata field.
func (o *WebFlagConfigApprovalRequestResponse) SetIntegrationMetadata(v WebIntegrationMetadata) {
	o.IntegrationMetadata = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *WebFlagConfigApprovalRequestResponse) GetSource() WebCopiedFromEnv {
	if o == nil || o.Source == nil {
		var ret WebCopiedFromEnv
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebFlagConfigApprovalRequestResponse) GetSourceOk() (*WebCopiedFromEnv, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *WebFlagConfigApprovalRequestResponse) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given WebCopiedFromEnv and assigns it to the Source field.
func (o *WebFlagConfigApprovalRequestResponse) SetSource(v WebCopiedFromEnv) {
	o.Source = &v
}

func (o WebFlagConfigApprovalRequestResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Version != nil {
		toSerialize["_version"] = o.Version
	}
	if o.CreationDate != nil {
		toSerialize["creationDate"] = o.CreationDate
	}
	if o.ServiceKind != nil {
		toSerialize["serviceKind"] = o.ServiceKind
	}
	if o.RequestorId != nil {
		toSerialize["requestorId"] = o.RequestorId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ReviewStatus != nil {
		toSerialize["reviewStatus"] = o.ReviewStatus
	}
	if o.AllReviews != nil {
		toSerialize["allReviews"] = o.AllReviews
	}
	if o.NotifyMemberIds != nil {
		toSerialize["notifyMemberIds"] = o.NotifyMemberIds
	}
	if o.AppliedDate != nil {
		toSerialize["appliedDate"] = o.AppliedDate
	}
	if o.AppliedByMemberId != nil {
		toSerialize["appliedByMemberId"] = o.AppliedByMemberId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Instructions != nil {
		toSerialize["instructions"] = o.Instructions
	}
	if o.Conflicts != nil {
		toSerialize["conflicts"] = o.Conflicts
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.ExecutionDate != nil {
		toSerialize["executionDate"] = o.ExecutionDate
	}
	if o.OperatingOnId != nil {
		toSerialize["operatingOnId"] = o.OperatingOnId
	}
	if o.IntegrationMetadata != nil {
		toSerialize["integrationMetadata"] = o.IntegrationMetadata
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableWebFlagConfigApprovalRequestResponse struct {
	value *WebFlagConfigApprovalRequestResponse
	isSet bool
}

func (v NullableWebFlagConfigApprovalRequestResponse) Get() *WebFlagConfigApprovalRequestResponse {
	return v.value
}

func (v *NullableWebFlagConfigApprovalRequestResponse) Set(val *WebFlagConfigApprovalRequestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWebFlagConfigApprovalRequestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWebFlagConfigApprovalRequestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebFlagConfigApprovalRequestResponse(val *WebFlagConfigApprovalRequestResponse) *NullableWebFlagConfigApprovalRequestResponse {
	return &NullableWebFlagConfigApprovalRequestResponse{value: val, isSet: true}
}

func (v NullableWebFlagConfigApprovalRequestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebFlagConfigApprovalRequestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


