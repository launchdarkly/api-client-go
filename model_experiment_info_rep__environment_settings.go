/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ExperimentInfoRepEnvironmentSettings struct for ExperimentInfoRepEnvironmentSettings
type ExperimentInfoRepEnvironmentSettings struct {
	StartDate *int64 `json:"startDate,omitempty"`
	StopDate *int64 `json:"stopDate,omitempty"`
}

// NewExperimentInfoRepEnvironmentSettings instantiates a new ExperimentInfoRepEnvironmentSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimentInfoRepEnvironmentSettings() *ExperimentInfoRepEnvironmentSettings {
	this := ExperimentInfoRepEnvironmentSettings{}
	return &this
}

// NewExperimentInfoRepEnvironmentSettingsWithDefaults instantiates a new ExperimentInfoRepEnvironmentSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentInfoRepEnvironmentSettingsWithDefaults() *ExperimentInfoRepEnvironmentSettings {
	this := ExperimentInfoRepEnvironmentSettings{}
	return &this
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ExperimentInfoRepEnvironmentSettings) GetStartDate() int64 {
	if o == nil || o.StartDate == nil {
		var ret int64
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentInfoRepEnvironmentSettings) GetStartDateOk() (*int64, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ExperimentInfoRepEnvironmentSettings) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int64 and assigns it to the StartDate field.
func (o *ExperimentInfoRepEnvironmentSettings) SetStartDate(v int64) {
	o.StartDate = &v
}

// GetStopDate returns the StopDate field value if set, zero value otherwise.
func (o *ExperimentInfoRepEnvironmentSettings) GetStopDate() int64 {
	if o == nil || o.StopDate == nil {
		var ret int64
		return ret
	}
	return *o.StopDate
}

// GetStopDateOk returns a tuple with the StopDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentInfoRepEnvironmentSettings) GetStopDateOk() (*int64, bool) {
	if o == nil || o.StopDate == nil {
		return nil, false
	}
	return o.StopDate, true
}

// HasStopDate returns a boolean if a field has been set.
func (o *ExperimentInfoRepEnvironmentSettings) HasStopDate() bool {
	if o != nil && o.StopDate != nil {
		return true
	}

	return false
}

// SetStopDate gets a reference to the given int64 and assigns it to the StopDate field.
func (o *ExperimentInfoRepEnvironmentSettings) SetStopDate(v int64) {
	o.StopDate = &v
}

func (o ExperimentInfoRepEnvironmentSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.StopDate != nil {
		toSerialize["stopDate"] = o.StopDate
	}
	return json.Marshal(toSerialize)
}

type NullableExperimentInfoRepEnvironmentSettings struct {
	value *ExperimentInfoRepEnvironmentSettings
	isSet bool
}

func (v NullableExperimentInfoRepEnvironmentSettings) Get() *ExperimentInfoRepEnvironmentSettings {
	return v.value
}

func (v *NullableExperimentInfoRepEnvironmentSettings) Set(val *ExperimentInfoRepEnvironmentSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimentInfoRepEnvironmentSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimentInfoRepEnvironmentSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimentInfoRepEnvironmentSettings(val *ExperimentInfoRepEnvironmentSettings) *NullableExperimentInfoRepEnvironmentSettings {
	return &NullableExperimentInfoRepEnvironmentSettings{value: val, isSet: true}
}

func (v NullableExperimentInfoRepEnvironmentSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimentInfoRepEnvironmentSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


