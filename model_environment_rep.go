/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// EnvironmentRep struct for EnvironmentRep
type EnvironmentRep struct {
	Links *map[string]InlineResponse200 `json:"_links,omitempty"`
	Id *string `json:"_id,omitempty"`
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
	ApiKey *string `json:"apiKey,omitempty"`
	MobileKey *string `json:"mobileKey,omitempty"`
	Color *string `json:"color,omitempty"`
	DefaultTtl *int32 `json:"defaultTtl,omitempty"`
	SecureMode *bool `json:"secureMode,omitempty"`
	DefaultTrackEvents *bool `json:"defaultTrackEvents,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	ApprovalSettings *ApprovalSettingsRep `json:"approvalSettings,omitempty"`
}

// NewEnvironmentRep instantiates a new EnvironmentRep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentRep() *EnvironmentRep {
	this := EnvironmentRep{}
	return &this
}

// NewEnvironmentRepWithDefaults instantiates a new EnvironmentRep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentRepWithDefaults() *EnvironmentRep {
	this := EnvironmentRep{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *EnvironmentRep) GetLinks() map[string]InlineResponse200 {
	if o == nil || o.Links == nil {
		var ret map[string]InlineResponse200
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetLinksOk() (*map[string]InlineResponse200, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *EnvironmentRep) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]InlineResponse200 and assigns it to the Links field.
func (o *EnvironmentRep) SetLinks(v map[string]InlineResponse200) {
	o.Links = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnvironmentRep) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnvironmentRep) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnvironmentRep) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *EnvironmentRep) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *EnvironmentRep) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *EnvironmentRep) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnvironmentRep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnvironmentRep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnvironmentRep) SetName(v string) {
	o.Name = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *EnvironmentRep) GetApiKey() string {
	if o == nil || o.ApiKey == nil {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetApiKeyOk() (*string, bool) {
	if o == nil || o.ApiKey == nil {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *EnvironmentRep) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *EnvironmentRep) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetMobileKey returns the MobileKey field value if set, zero value otherwise.
func (o *EnvironmentRep) GetMobileKey() string {
	if o == nil || o.MobileKey == nil {
		var ret string
		return ret
	}
	return *o.MobileKey
}

// GetMobileKeyOk returns a tuple with the MobileKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetMobileKeyOk() (*string, bool) {
	if o == nil || o.MobileKey == nil {
		return nil, false
	}
	return o.MobileKey, true
}

// HasMobileKey returns a boolean if a field has been set.
func (o *EnvironmentRep) HasMobileKey() bool {
	if o != nil && o.MobileKey != nil {
		return true
	}

	return false
}

// SetMobileKey gets a reference to the given string and assigns it to the MobileKey field.
func (o *EnvironmentRep) SetMobileKey(v string) {
	o.MobileKey = &v
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *EnvironmentRep) GetColor() string {
	if o == nil || o.Color == nil {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetColorOk() (*string, bool) {
	if o == nil || o.Color == nil {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *EnvironmentRep) HasColor() bool {
	if o != nil && o.Color != nil {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *EnvironmentRep) SetColor(v string) {
	o.Color = &v
}

// GetDefaultTtl returns the DefaultTtl field value if set, zero value otherwise.
func (o *EnvironmentRep) GetDefaultTtl() int32 {
	if o == nil || o.DefaultTtl == nil {
		var ret int32
		return ret
	}
	return *o.DefaultTtl
}

// GetDefaultTtlOk returns a tuple with the DefaultTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetDefaultTtlOk() (*int32, bool) {
	if o == nil || o.DefaultTtl == nil {
		return nil, false
	}
	return o.DefaultTtl, true
}

// HasDefaultTtl returns a boolean if a field has been set.
func (o *EnvironmentRep) HasDefaultTtl() bool {
	if o != nil && o.DefaultTtl != nil {
		return true
	}

	return false
}

// SetDefaultTtl gets a reference to the given int32 and assigns it to the DefaultTtl field.
func (o *EnvironmentRep) SetDefaultTtl(v int32) {
	o.DefaultTtl = &v
}

// GetSecureMode returns the SecureMode field value if set, zero value otherwise.
func (o *EnvironmentRep) GetSecureMode() bool {
	if o == nil || o.SecureMode == nil {
		var ret bool
		return ret
	}
	return *o.SecureMode
}

// GetSecureModeOk returns a tuple with the SecureMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetSecureModeOk() (*bool, bool) {
	if o == nil || o.SecureMode == nil {
		return nil, false
	}
	return o.SecureMode, true
}

// HasSecureMode returns a boolean if a field has been set.
func (o *EnvironmentRep) HasSecureMode() bool {
	if o != nil && o.SecureMode != nil {
		return true
	}

	return false
}

// SetSecureMode gets a reference to the given bool and assigns it to the SecureMode field.
func (o *EnvironmentRep) SetSecureMode(v bool) {
	o.SecureMode = &v
}

// GetDefaultTrackEvents returns the DefaultTrackEvents field value if set, zero value otherwise.
func (o *EnvironmentRep) GetDefaultTrackEvents() bool {
	if o == nil || o.DefaultTrackEvents == nil {
		var ret bool
		return ret
	}
	return *o.DefaultTrackEvents
}

// GetDefaultTrackEventsOk returns a tuple with the DefaultTrackEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetDefaultTrackEventsOk() (*bool, bool) {
	if o == nil || o.DefaultTrackEvents == nil {
		return nil, false
	}
	return o.DefaultTrackEvents, true
}

// HasDefaultTrackEvents returns a boolean if a field has been set.
func (o *EnvironmentRep) HasDefaultTrackEvents() bool {
	if o != nil && o.DefaultTrackEvents != nil {
		return true
	}

	return false
}

// SetDefaultTrackEvents gets a reference to the given bool and assigns it to the DefaultTrackEvents field.
func (o *EnvironmentRep) SetDefaultTrackEvents(v bool) {
	o.DefaultTrackEvents = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *EnvironmentRep) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *EnvironmentRep) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *EnvironmentRep) SetTags(v []string) {
	o.Tags = &v
}

// GetApprovalSettings returns the ApprovalSettings field value if set, zero value otherwise.
func (o *EnvironmentRep) GetApprovalSettings() ApprovalSettingsRep {
	if o == nil || o.ApprovalSettings == nil {
		var ret ApprovalSettingsRep
		return ret
	}
	return *o.ApprovalSettings
}

// GetApprovalSettingsOk returns a tuple with the ApprovalSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentRep) GetApprovalSettingsOk() (*ApprovalSettingsRep, bool) {
	if o == nil || o.ApprovalSettings == nil {
		return nil, false
	}
	return o.ApprovalSettings, true
}

// HasApprovalSettings returns a boolean if a field has been set.
func (o *EnvironmentRep) HasApprovalSettings() bool {
	if o != nil && o.ApprovalSettings != nil {
		return true
	}

	return false
}

// SetApprovalSettings gets a reference to the given ApprovalSettingsRep and assigns it to the ApprovalSettings field.
func (o *EnvironmentRep) SetApprovalSettings(v ApprovalSettingsRep) {
	o.ApprovalSettings = &v
}

func (o EnvironmentRep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ApiKey != nil {
		toSerialize["apiKey"] = o.ApiKey
	}
	if o.MobileKey != nil {
		toSerialize["mobileKey"] = o.MobileKey
	}
	if o.Color != nil {
		toSerialize["color"] = o.Color
	}
	if o.DefaultTtl != nil {
		toSerialize["defaultTtl"] = o.DefaultTtl
	}
	if o.SecureMode != nil {
		toSerialize["secureMode"] = o.SecureMode
	}
	if o.DefaultTrackEvents != nil {
		toSerialize["defaultTrackEvents"] = o.DefaultTrackEvents
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.ApprovalSettings != nil {
		toSerialize["approvalSettings"] = o.ApprovalSettings
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentRep struct {
	value *EnvironmentRep
	isSet bool
}

func (v NullableEnvironmentRep) Get() *EnvironmentRep {
	return v.value
}

func (v *NullableEnvironmentRep) Set(val *EnvironmentRep) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentRep) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentRep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentRep(val *EnvironmentRep) *NullableEnvironmentRep {
	return &NullableEnvironmentRep{value: val, isSet: true}
}

func (v NullableEnvironmentRep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentRep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


