/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// ExperimentPost struct for ExperimentPost
type ExperimentPost struct {
	FlagKey *string `json:"flagKey,omitempty"`
	MetricKey *string `json:"metricKey,omitempty"`
	BaselineIdx *int32 `json:"baselineIdx,omitempty"`
	EventLocation *string `json:"eventLocation,omitempty"`
}

// NewExperimentPost instantiates a new ExperimentPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExperimentPost() *ExperimentPost {
	this := ExperimentPost{}
	return &this
}

// NewExperimentPostWithDefaults instantiates a new ExperimentPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExperimentPostWithDefaults() *ExperimentPost {
	this := ExperimentPost{}
	return &this
}

// GetFlagKey returns the FlagKey field value if set, zero value otherwise.
func (o *ExperimentPost) GetFlagKey() string {
	if o == nil || o.FlagKey == nil {
		var ret string
		return ret
	}
	return *o.FlagKey
}

// GetFlagKeyOk returns a tuple with the FlagKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentPost) GetFlagKeyOk() (*string, bool) {
	if o == nil || o.FlagKey == nil {
		return nil, false
	}
	return o.FlagKey, true
}

// HasFlagKey returns a boolean if a field has been set.
func (o *ExperimentPost) HasFlagKey() bool {
	if o != nil && o.FlagKey != nil {
		return true
	}

	return false
}

// SetFlagKey gets a reference to the given string and assigns it to the FlagKey field.
func (o *ExperimentPost) SetFlagKey(v string) {
	o.FlagKey = &v
}

// GetMetricKey returns the MetricKey field value if set, zero value otherwise.
func (o *ExperimentPost) GetMetricKey() string {
	if o == nil || o.MetricKey == nil {
		var ret string
		return ret
	}
	return *o.MetricKey
}

// GetMetricKeyOk returns a tuple with the MetricKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentPost) GetMetricKeyOk() (*string, bool) {
	if o == nil || o.MetricKey == nil {
		return nil, false
	}
	return o.MetricKey, true
}

// HasMetricKey returns a boolean if a field has been set.
func (o *ExperimentPost) HasMetricKey() bool {
	if o != nil && o.MetricKey != nil {
		return true
	}

	return false
}

// SetMetricKey gets a reference to the given string and assigns it to the MetricKey field.
func (o *ExperimentPost) SetMetricKey(v string) {
	o.MetricKey = &v
}

// GetBaselineIdx returns the BaselineIdx field value if set, zero value otherwise.
func (o *ExperimentPost) GetBaselineIdx() int32 {
	if o == nil || o.BaselineIdx == nil {
		var ret int32
		return ret
	}
	return *o.BaselineIdx
}

// GetBaselineIdxOk returns a tuple with the BaselineIdx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentPost) GetBaselineIdxOk() (*int32, bool) {
	if o == nil || o.BaselineIdx == nil {
		return nil, false
	}
	return o.BaselineIdx, true
}

// HasBaselineIdx returns a boolean if a field has been set.
func (o *ExperimentPost) HasBaselineIdx() bool {
	if o != nil && o.BaselineIdx != nil {
		return true
	}

	return false
}

// SetBaselineIdx gets a reference to the given int32 and assigns it to the BaselineIdx field.
func (o *ExperimentPost) SetBaselineIdx(v int32) {
	o.BaselineIdx = &v
}

// GetEventLocation returns the EventLocation field value if set, zero value otherwise.
func (o *ExperimentPost) GetEventLocation() string {
	if o == nil || o.EventLocation == nil {
		var ret string
		return ret
	}
	return *o.EventLocation
}

// GetEventLocationOk returns a tuple with the EventLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExperimentPost) GetEventLocationOk() (*string, bool) {
	if o == nil || o.EventLocation == nil {
		return nil, false
	}
	return o.EventLocation, true
}

// HasEventLocation returns a boolean if a field has been set.
func (o *ExperimentPost) HasEventLocation() bool {
	if o != nil && o.EventLocation != nil {
		return true
	}

	return false
}

// SetEventLocation gets a reference to the given string and assigns it to the EventLocation field.
func (o *ExperimentPost) SetEventLocation(v string) {
	o.EventLocation = &v
}

func (o ExperimentPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlagKey != nil {
		toSerialize["flagKey"] = o.FlagKey
	}
	if o.MetricKey != nil {
		toSerialize["metricKey"] = o.MetricKey
	}
	if o.BaselineIdx != nil {
		toSerialize["baselineIdx"] = o.BaselineIdx
	}
	if o.EventLocation != nil {
		toSerialize["eventLocation"] = o.EventLocation
	}
	return json.Marshal(toSerialize)
}

type NullableExperimentPost struct {
	value *ExperimentPost
	isSet bool
}

func (v NullableExperimentPost) Get() *ExperimentPost {
	return v.value
}

func (v *NullableExperimentPost) Set(val *ExperimentPost) {
	v.value = val
	v.isSet = true
}

func (v NullableExperimentPost) IsSet() bool {
	return v.isSet
}

func (v *NullableExperimentPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExperimentPost(val *ExperimentPost) *NullableExperimentPost {
	return &NullableExperimentPost{value: val, isSet: true}
}

func (v NullableExperimentPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExperimentPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


