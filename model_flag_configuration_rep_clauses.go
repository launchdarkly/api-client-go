/*
 * LaunchDarkly REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0
 * Contact: support@launchdarkly.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ldapi

import (
	"encoding/json"
)

// FlagConfigurationRepClauses struct for FlagConfigurationRepClauses
type FlagConfigurationRepClauses struct {
	Id *string `json:"_id,omitempty"`
	Attribute *string `json:"attribute,omitempty"`
	Op *string `json:"op,omitempty"`
	Values *[]interface{} `json:"values,omitempty"`
	Negate *bool `json:"negate,omitempty"`
}

// NewFlagConfigurationRepClauses instantiates a new FlagConfigurationRepClauses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlagConfigurationRepClauses() *FlagConfigurationRepClauses {
	this := FlagConfigurationRepClauses{}
	return &this
}

// NewFlagConfigurationRepClausesWithDefaults instantiates a new FlagConfigurationRepClauses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlagConfigurationRepClausesWithDefaults() *FlagConfigurationRepClauses {
	this := FlagConfigurationRepClauses{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FlagConfigurationRepClauses) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagConfigurationRepClauses) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FlagConfigurationRepClauses) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FlagConfigurationRepClauses) SetId(v string) {
	o.Id = &v
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *FlagConfigurationRepClauses) GetAttribute() string {
	if o == nil || o.Attribute == nil {
		var ret string
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagConfigurationRepClauses) GetAttributeOk() (*string, bool) {
	if o == nil || o.Attribute == nil {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *FlagConfigurationRepClauses) HasAttribute() bool {
	if o != nil && o.Attribute != nil {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given string and assigns it to the Attribute field.
func (o *FlagConfigurationRepClauses) SetAttribute(v string) {
	o.Attribute = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *FlagConfigurationRepClauses) GetOp() string {
	if o == nil || o.Op == nil {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagConfigurationRepClauses) GetOpOk() (*string, bool) {
	if o == nil || o.Op == nil {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *FlagConfigurationRepClauses) HasOp() bool {
	if o != nil && o.Op != nil {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *FlagConfigurationRepClauses) SetOp(v string) {
	o.Op = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *FlagConfigurationRepClauses) GetValues() []interface{} {
	if o == nil || o.Values == nil {
		var ret []interface{}
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagConfigurationRepClauses) GetValuesOk() (*[]interface{}, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *FlagConfigurationRepClauses) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []interface{} and assigns it to the Values field.
func (o *FlagConfigurationRepClauses) SetValues(v []interface{}) {
	o.Values = &v
}

// GetNegate returns the Negate field value if set, zero value otherwise.
func (o *FlagConfigurationRepClauses) GetNegate() bool {
	if o == nil || o.Negate == nil {
		var ret bool
		return ret
	}
	return *o.Negate
}

// GetNegateOk returns a tuple with the Negate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlagConfigurationRepClauses) GetNegateOk() (*bool, bool) {
	if o == nil || o.Negate == nil {
		return nil, false
	}
	return o.Negate, true
}

// HasNegate returns a boolean if a field has been set.
func (o *FlagConfigurationRepClauses) HasNegate() bool {
	if o != nil && o.Negate != nil {
		return true
	}

	return false
}

// SetNegate gets a reference to the given bool and assigns it to the Negate field.
func (o *FlagConfigurationRepClauses) SetNegate(v bool) {
	o.Negate = &v
}

func (o FlagConfigurationRepClauses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Attribute != nil {
		toSerialize["attribute"] = o.Attribute
	}
	if o.Op != nil {
		toSerialize["op"] = o.Op
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.Negate != nil {
		toSerialize["negate"] = o.Negate
	}
	return json.Marshal(toSerialize)
}

type NullableFlagConfigurationRepClauses struct {
	value *FlagConfigurationRepClauses
	isSet bool
}

func (v NullableFlagConfigurationRepClauses) Get() *FlagConfigurationRepClauses {
	return v.value
}

func (v *NullableFlagConfigurationRepClauses) Set(val *FlagConfigurationRepClauses) {
	v.value = val
	v.isSet = true
}

func (v NullableFlagConfigurationRepClauses) IsSet() bool {
	return v.isSet
}

func (v *NullableFlagConfigurationRepClauses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlagConfigurationRepClauses(val *FlagConfigurationRepClauses) *NullableFlagConfigurationRepClauses {
	return &NullableFlagConfigurationRepClauses{value: val, isSet: true}
}

func (v NullableFlagConfigurationRepClauses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlagConfigurationRepClauses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


